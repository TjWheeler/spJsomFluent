{"version":3,"sources":["webpack://spJsom/webpack/bootstrap","webpack://spJsom/./src/common.ts","webpack://spJsom/./src/helper/webHelper.ts","webpack://spJsom/./src/web.ts","webpack://spJsom/./src/helper/permissionHelper.ts","webpack://spJsom/./src/permission.ts","webpack://spJsom/./src/helper/listHelper.ts","webpack://spJsom/./src/list.ts","webpack://spJsom/./src/listitem.ts","webpack://spJsom/./src/file.ts","webpack://spJsom/./src/helper/userHelper.ts","webpack://spJsom/./src/user.ts","webpack://spJsom/./src/helper/navigationHelper.ts","webpack://spJsom/./src/navigation.ts","webpack://spJsom/./src/helper/pageHelper.ts","webpack://spJsom/./src/publishingpage.ts","webpack://spJsom/./src/fluent.ts","webpack://spJsom/./examples/spJsomExamples-typescript.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","src_common","common","reject","deferred","reason","this","get_message","notImplementedPromise","$","Deferred","promise","FilterArray","items","predicate","output","length","push","executeQuery","clientContext","executeQueryAsync","sender","args","resolve","WebHelper","context","setWelcomePage","web","url","rootFolder","get_rootFolder","load","set_welcomePage","update","fail","done","createWeb","parentWeb","title","template","useSamePermissionsAsParent","info","SP","WebCreationInformation","set_url","set_title","set_webTemplate","set_useSamePermissionsAsParentSite","newWeb","get_webs","add","doesWebExist","getAllWebs","get_site","get_rootWeb","toLowerCase","get_serverRelativeUrl","get_url","getWebs","fromWeb","_this","webs","promises","get_count","subWeb","getItemAtIndex","when","apply","Web","fluent","_fluent","_helperName","webHelper","chainAction","exists","PermissionHelper","hasWebPermission","permission","get_effectiveBasePermissions","has","hasListPermission","list","hasItemPermission","item","Permission","permissionHelper","ListHelper","createList","listName","templateId","ListCreationInformation","set_templateType","get_lists","setAlerts","enabled","getByTitle","set_enableAssignToEmail","setListItemProperties","listItem","properties","propertyName","set_item","lists","get_title","createListItemWithContentTypeName","contentTypeName","itemCreateInfo","ListItemCreationInformation","listContentTypes","get_contentTypes","contentTypeId","contentType","get_name","get_id","get_stringValue","addItem","createListItem","loadListItem","viewFields","getFile","serverRelativeUrl","file","getFileByServerRelativeUrl","checkInFile","comment","checkInType","checkIn","getList","deleteList","deleteObject","getFileListItem","get_listItemAllFields","getListItemById","id","getItemById","deleteListItemById","getListItems","viewXml","query","CamlQuery","set_viewXml","listItems","getItems","addContentTypeListAssociation","listCts","contentTypes","findContentType","collection","listCt","get_contentTypesEnabled","set_contentTypesEnabled","associatedCt","addExistingContentType","removeContentTypeListAssociation","setDefaultValueOnList","fieldInternalName","defaultValue","fields","get_fields","field","get_internalName","findField","set_defaultValue","List","listHelper","delete","ListItem","createWithContentType","deleteById","File","getListItem","UserHelper","getUserByEmail","email","loadUser","get_web","ensureUser","getUserById","get_siteUsers","getById","user","console","error","getCurrentUser","get_currentUser","getCurrentUserProfileProperties","SOD","executeFunc","currentUser","profile","UserProfiles","PeopleManager","getMyProperties","get_userProfileProperties","getCurrentUserManager","peopleManager","user_email","get_email","userProfilePropertiesForUser","UserProfilePropertiesForUser","userProfileProps","getUserProfilePropertiesFor","User","userHelper","emailOrAccountName","registerDependency","Dependency","UserProfile","NavigationHelper","deleteQuicklaunchNodes","deleteNodes","get_navigation","get_quickLaunch","deleteTopNavigationNodes","get_topNavigationBar","deleteQuicklaunchNode","deleteNode","deleteTopQuicklaunchNode","setCurrentNavigation","navigationType","showSubsites","showPages","allProperties","get_allProperties","setOptions","nav","Publishing","Navigation","WebNavigationSettings","NavigationType","Inherit","get_currentNavigation","set_source","StandardNavigationSource","inheritFromParentWeb","Managed","StructuralWithSiblings","portalProvider","StructuralChildrenOnly","enumerator","getEnumerator","itemsToDelete","moveNext","get_current","node","createQuicklaunchNode","asLastNode","createNode","createTopNavigationNode","NavigationNodeCreationInformation","set_asLastNode","navigationHelper","location","NavigationLocation","Quicklaunch","TopNavigation","deleteAllNodes","type","PageHelper","createPublishingPage","layoutUrl","pageInfo","PublishingPageInformation","set_name","set_pageLayoutListItem","publishingWeb","PublishingWeb","getPublishingWeb","publishingPage","addPublishingPage","getPublishingLayout","PublishingPage","pageHelper","getLayout","fluent_Fluent","Fluent","commands","results","dependencies","settings","timeoutMilliseconds","enableDependencyTimeout","totalCommands","withContext","withSettings","setting","resultPromise","src_permission","src_list","listitem","src_file","publishingpage","src_web","src_user","navigation","execute","expiry","setTimeout","getAvailableActionCommandCount","loadDependencies","continue","always","clearTimeout","onActionExecuted","onExecuted","onActionExecuting","onExecuting","peekLastCommand","constructor","ActionCommand","command","WhenCommand","action","peekLastResult","success","result","failChain","whenAll","whenTrue","whenFalse","chain","dependency","indexOf","shift","step","arg1","arg2","arg3","arg4","arg5","arg6","arg7","storeResult","addResult","resolveChain","arg","ActionResult","spDependencies","window","LoadSodByKey","registerSod","Utilities","Utility","getLayoutsPageUrl","Taxonomy","loadMultiple","count","FluentCommand","_super","__extends","__webpack_exports__","_src_fluent__WEBPACK_IMPORTED_MODULE_0__","examples","run","getUser","deleteListItem","ClientContext","log","provisionWebWithProgress","_spPageContextInfo","webServerRelativeUrl","replace","newSiteContext","actionName","current","total","progress","Math","ceil","PermissionKind","createSSCSite","siteServerRelativeUrl","lastAction","warn","createListAndItem","manageLists","Title","personValue","FieldUserValue","set_lookupId","userId","PersonOrGroupField","MultiChoiceField","ChoiceField","NumberField","userEmail","webUrl","CheckinType","majorCheckIn","customActionCommands","customActionCommandsChain","customAction"],"mappings":"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","file":"spJsomExamples.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\r\nexport default class common {\r\n    public static reject(deferred: JQueryDeferred<any>, reason:string) {\r\n        deferred.reject(this, { get_message: function () { return reason; } } );\r\n    }\r\n    public static notImplementedPromise() : JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        common.reject(deferred, \"Not Implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public static executeQuery = (clientContext: SP.ClientContext) => {\r\n        var deferred = $.Deferred();\r\n        clientContext.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(sender, args);\r\n            },\r\n            (sender, args) => {\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise();\r\n    };\r\n    public static FilterArray<T>(items: Array<T>, predicate: any): Array<T> {\r\n        let output = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i], i)) {\r\n                output.push(items[i]);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public setWelcomePage(web: SP.Web, url: string): JQueryPromise<SP.Folder> {\r\n            var deferred = $.Deferred();\r\n            var rootFolder = web.get_rootFolder();\r\n            this.context.load(web);\r\n            this.context.load(rootFolder);\r\n            rootFolder.set_welcomePage(url);\r\n            rootFolder.update();\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(rootFolder);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Folder>;\r\n    }\r\n    public createWeb(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent:boolean = true): JQueryPromise<SP.Web> {\r\n            var deferred = $.Deferred();\r\n            var info = new SP.WebCreationInformation();\r\n            info.set_url(name);\r\n            info.set_title(title);\r\n            info.set_webTemplate(template);\r\n            info.set_useSamePermissionsAsParentSite(useSamePermissionsAsParent);\r\n            var newWeb = parentWeb.get_webs().add(info);\r\n            this.context.load(newWeb);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(newWeb);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Web>;\r\n    }\r\n    public doesWebExist(url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, this.context.get_site().get_rootWeb(), output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    for (var i = 0; i < output.length; i++) {\r\n                        if (url.toLowerCase() === output[i].get_serverRelativeUrl() || url.toLowerCase() === output[i].get_url()) {\r\n                            deferred.resolve(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                    deferred.resolve(false);\r\n                });\r\n            return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public getWebs(fromWeb: SP.Web): JQueryPromise<Array<SP.Web>> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, fromWeb, output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(output);\r\n                });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n    private getAllWebs(context: SP.ClientContext, web: SP.Web, output: Array<SP.Web>): JQueryPromise<Array<SP.Web>> {\r\n        var deferred = $.Deferred();\r\n        var webs = web.get_webs();\r\n        context.load(webs);\r\n        common.executeQuery(context)\r\n            .fail((sender, args) => {\r\n                deferred.reject(sender, args);\r\n            })\r\n            .done(() => {\r\n                var promises = [];\r\n                for (var i = 0; i < webs.get_count(); i++) {\r\n                    var subWeb = webs.getItemAtIndex(i);\r\n                    output.push(subWeb);\r\n                    promises.push(this.getAllWebs(context, subWeb, output));\r\n                }\r\n                if (promises.length) {\r\n                    $.when.apply($, promises)\r\n                        .fail((sender, args) => {\r\n                            deferred.reject(sender, args);\r\n                        })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                } else {\r\n                    deferred.resolve();\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n\r\n}","import WebHelper from \"./helper/webHelper\";\r\nimport { Fluent } from \"./fluent\"\r\n\r\nexport default class Web {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.webHelper = new WebHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"web\";\r\n    private webHelper = null as WebHelper;\r\n    /**\r\n      * Set the web welcome page.  The url should be relative to the root folder of the web. \r\n      * Result: SP.Folder\r\n      * Example: setWelcomePage(context.get_web(), \"pages/default.aspx\")\r\n      */\r\n    public setWelcomePage(web: SP.Web, url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.setWelcomePage`, () => {\r\n            return this.webHelper.setWelcomePage(web, url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Create a new sub web.\r\n      * Result: SP.Web\r\n      * name: Forms part of the URL, don't include slash\r\n      * template: template id and configuration value\r\n      * Example: create(\"SubWebName\", SP.ClientContext.get_current().get_rootWeb(), \"My Web Name\", \"CMSPUBLISHING#0\")\r\n      * \r\n      * @remarks\r\n      * For templates See: https://blogs.technet.microsoft.com/praveenh/2010/10/21/sharepoint-templates-and-their-ids/\r\n      */\r\n    public create(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent: boolean = true): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.webHelper.createWeb(name, parentWeb, title, template, useSamePermissionsAsParent);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Check if a web exists\r\n      * Result: boolean\r\n      * url: server relative url\r\n      * Example: .exists(\"/sites/mysubweb\")\r\n      */\r\n    public exists(url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.webHelper.doesWebExist(url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Get and load all webs starting from a web and its children\r\n      * Result: Array<SP.Web>\r\n      * Example: getWebs(SP.ClientContext.get_current().get_rootWeb()))\r\n      */\r\n    public getWebs(fromWeb: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getWebs`, () => {\r\n            return this.webHelper.getWebs(fromWeb);\r\n        });\r\n        \r\n    }\r\n    \r\n}","import common from \"../common\"\r\n\r\nexport default class PermissionHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(web, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(web.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(list, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(item, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(item.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n}","import { Fluent } from \"./fluent\"\r\nimport PermissionHelper from \"./helper/permissionHelper\";\r\n\r\nexport default class Permission {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.permissionHelper = new PermissionHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"permission\";\r\n    private permissionHelper = null as PermissionHelper;\r\n    /**\r\n    * Check if the current user has specified Web permission\r\n    * Result: boolean\r\n    * Example: hasWebPermission(SP.PermissionKind.createSSCSite, context.get_web())\r\n    */\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasWebPermission`, () => {\r\n            return this.permissionHelper.hasWebPermission(permission, web);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified List permission\r\n    * Result: boolean\r\n    * Example: hasListPermission(SP.PermissionKind.addListItems, context.get_web().get_lists().getByTitle(\"MyList\"))\r\n    */\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasListPermission`, () => {\r\n            return this.permissionHelper.hasListPermission(permission, list);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified ListItem permission\r\n    * Result: boolean\r\n    * Example: hasItemPermission(SP.PermissionKind.editListItems, context.get_web().get_lists().getByTitle(\"MyList\").getItemById(0))\r\n    */\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasItemPermission`, () => {\r\n            return this.permissionHelper.hasItemPermission(permission, item);\r\n        });\r\n        \r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class ListHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n\r\n    public createList(web: SP.Web, listName: string, templateId: number): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = null as SP.List;\r\n        var info = new SP.ListCreationInformation();\r\n        info.set_title(listName);\r\n        info.set_templateType(templateId);\r\n        var list = web.get_lists().add(info);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public setAlerts(web: SP.Web, listName: string, enabled:boolean): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        (<any>list).set_enableAssignToEmail(enabled); //Not in typescript definitions currently.  //TODO: test \r\n        list.update();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public setListItemProperties(listItem: SP.ListItem, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public exists(web: SP.Web, listName: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var lists = web.get_lists();\r\n        this.context.load(lists);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                for (var i = 0; i < lists.get_count(); i++) {\r\n                    if (lists.getItemAtIndex(i).get_title().toLowerCase() === listName.toLowerCase()) {\r\n                        deferred.resolve(true);\r\n                        return;\r\n                    }\r\n                }\r\n                deferred.resolve(false);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public createListItemWithContentTypeName(web: SP.Web, listName: string, contentTypeName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n        var listContentTypes = list.get_contentTypes();\r\n        clientContext.load(listContentTypes);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var contentTypeId = null;\r\n                for (let i = 0; i < listContentTypes.get_count(); i++) {\r\n                    let contentType = listContentTypes.getItemAtIndex(i) as SP.ContentType;\r\n                    if (contentType.get_name() === contentTypeName) {\r\n                        contentTypeId = contentType.get_id().get_stringValue();\r\n                        break;\r\n                    }\r\n                }\r\n                var listItem = list.addItem(itemCreateInfo);\r\n                if (contentTypeId) {\r\n                    listItem.set_item('ContentTypeId', contentTypeId);\r\n                }\r\n                for (var propertyName in properties) {\r\n                    if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                        listItem.set_item(propertyName, properties[propertyName]);\r\n                    }\r\n                }\r\n                listItem.update();\r\n                clientContext.load(listItem);\r\n                common.executeQuery(clientContext)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve(listItem);\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n\r\n    }\r\n    public createListItem(web: SP.Web, listName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n        var contentTypeId = null;\r\n        var listItem = list.addItem(itemCreateInfo);\r\n        //TODO: validate this works with People, taxonomy and lookup fields.\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        clientContext.load(listItem);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n   \r\n    private loadListItem(listItem: SP.ListItem, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        if (viewFields && viewFields.length) {\r\n            this.context.load(listItem, viewFields as any);\r\n        } else {\r\n            this.context.load(listItem);\r\n        }\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFile(serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkInFile(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkIn(comment, checkInType);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public getList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public deleteList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        list.deleteObject();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        return this.loadListItem(listItem);\r\n    }\r\n    public getListItemById(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        return this.loadListItem(listItem, viewFields);\r\n    }\r\n\r\n    public deleteListItemById(web: SP.Web, listName: string, id: number): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        this.context.load(listItem);\r\n        listItem.deleteObject(); \r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public getListItems(web: SP.Web, listName: string, viewXml: string): JQueryPromise<SP.ListItemCollection> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        if (!viewXml) {\r\n            viewXml = \"<View><Query></Query></Where>\";\r\n        }\r\n        query.set_viewXml(viewXml);\r\n        var listItems = list.getItems(query);\r\n        this.context.load(listItems);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItems);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItemCollection>;\r\n    }\r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<SP.ContentType> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        \r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var contentTypes = this.context.get_site().get_rootWeb().get_contentTypes();\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        this.context.load(contentTypes);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let contentType = findContentType(contentTypes, contentTypeName) as SP.ContentType;\r\n                if (!contentType) {\r\n                    common.reject(deferred, `Content Type ${contentTypeName} not found`);\r\n                    return;\r\n                }\r\n                //check if the CT is already associated\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    //already associated\r\n                    deferred.resolve(listCt);\r\n                }\r\n                else {\r\n                    if (!list.get_contentTypesEnabled()) {\r\n                        list.set_contentTypesEnabled(true);//enable custom cts on the list.\r\n                    }\r\n                    var associatedCt = list.get_contentTypes().addExistingContentType(contentType);\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve(associatedCt);\r\n                        });\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ContentType>;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    listCt.deleteObject();\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    deferred.resolve(); //not found, nothing to do.\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var fields = list.get_fields();\r\n        this.context.load(list);\r\n        this.context.load(fields);\r\n        var findField = (collection: SP.FieldCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_internalName().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let field = findField(fields, fieldInternalName) as SP.Field;\r\n                if (field) {\r\n                    field.set_defaultValue(defaultValue);\r\n                    field.update()\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    common.reject(deferred, `Field ${fieldInternalName} not found`);\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n}","import common from \"./common\"\r\nimport ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class List {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"list\";\r\n    /**\r\n    * Create new list \r\n    * Example: create(context.get_web(), \"My Task List\", 107)\r\n    * templateId - See: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee541191(v%3Doffice.15)#remarks\r\n    */\r\n    public create(web: SP.Web, listName: string, templateId: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createList(web, listName, templateId);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the list exists\r\n    * Result: boolean\r\n    * Example: exists(context.get_web(), \"My List\")\r\n    */\r\n    public exists(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.listHelper.exists(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete a list\r\n    * Result: void\r\n    * Example: delete(context.get_web(), \"My List\")\r\n    */\r\n    public delete(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.delete`, () => {\r\n            return this.listHelper.deleteList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a list\r\n    * Result: SP.List\r\n    * Example: get(context.get_web(), \"My List\")\r\n    */\r\n    public get(web: SP.Web, listName: string): Fluent {\r\n        //TODO: test\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Adds a Content Type to a List.  Resolves the new associated list content type.\r\n    * Result: SP.ContentType\r\n    * Example: addContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.addContentTypeListAssociation`, () => {\r\n            return this.listHelper.addContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Removes a Content Type associated from a list.\r\n    * Result: void\r\n    * Example: removeContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.removeContentTypeListAssociation`, () => {\r\n            return this.listHelper.removeContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Sets a default value on a field in a list\r\n    * Result: void\r\n    * Example: setDefaultValueOnList(context.get_web(), \"My Task List\", \"ClientId\", 123)\r\n    */\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setDefaultValueOnList`, () => {\r\n            return this.listHelper.setDefaultValueOnList(web, listName, fieldInternalName, defaultValue);\r\n        });\r\n        \r\n    }\r\n     /**\r\n    * Enable email alerts on a list \r\n    * Result: void\r\n    * Example: setAlerts(context.get_web(), \"My Task List\", true)\r\n    * Note: will not work for 2010/2013\r\n    */\r\n    public setAlerts(web: SP.Web, listName: string, enabled: boolean): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setAlerts`, () => {\r\n            return this.listHelper.setAlerts(web, listName, enabled);\r\n        });\r\n        \r\n    }\r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class ListItem {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"listItem\";\r\n    /**\r\n    * Update a list item with properties\r\n    * Result: SP.ListItem\r\n    * Example: update(listItem, { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public update(listItem: SP.ListItem, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.update`, () => {\r\n            return this.listHelper.setListItemProperties(listItem, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create a list item, specifying the Content Type\r\n    * Result: SP.ListItem\r\n    * Example: createWithContentType(context.get_web(), \"My list\", \"My Content Type Name\", { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public createWithContentType(web: SP.Web, listName: string, contentTypeName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createWithContentType`, () => {\r\n            return this.listHelper.createListItemWithContentTypeName(web, listName, contentTypeName, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create new list item with optional property values\r\n    * Example: create(context.get_web(), \"MyList\", properties)\r\n    * Note: Properties are an object with Property/Value, where property\r\n    *       is the internal field name.\r\n    *       Eg; var properties = {\r\n                Title: \"My title\",\r\n                PersonOrGroupField: personValue,\r\n                MultiChoiceField: [\"Second\", \"Third\"],\r\n                ChoiceField: \"Second\",\r\n                NumberField: 1234\r\n            };\r\n            For personValue you can pass through the user Id or a SP.UserFieldValue such as:\r\n            var personValue = new SP.FieldUserValue();\r\n            personValue.set_lookupId(_spPageContextInfo.userId);\r\n    */\r\n    public create(web: SP.Web, listName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createListItem(web, listName, properties);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Get the listitem using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: get(context.get_web(), \"MyList\", 1, [\"ID\", \"Title\"])\r\n    */\r\n    public get(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getListItemById(web, listName, id, viewFields);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the listitem for a File using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: getFileListItem(\"/sites/site/documents/mydoc.docx\", [\"ID\", \"Title\", \"FileLeafRef\"])\r\n    */\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getFileListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl, viewFields);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Delete List Item\r\n    * Result: void\r\n    * Example: deleteById(context.get_web(), \"MyList\", 7)\r\n    */\r\n    public deleteById(web: SP.Web, listName: string, id: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteById`, () => {\r\n            return this.listHelper.deleteListItemById(web, listName, id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Execute a query using supplied CAML.  \r\n    * Returns: SP.ListItemCollection\r\n    * Example: query(context.get_web(), \"MyList\", \"<View><Query><Where><In><FieldRef Name='ID' /><Values><Value Type='Number'>1</Value><Value Type='Number'>2</Value></Values></In></View></Query></Where>\")\r\n    */\r\n    public query(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, viewXml);\r\n        });\r\n    }\r\n    \r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class File {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"file\";\r\n\r\n    /**\r\n    * Get a file from a document library\r\n    * Result: SP.File\r\n    * Example: get(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public get(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFile(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the list item for the file\r\n    * Result: SP.ListItem\r\n    * Example: getListItem(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public getListItem(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check in a file\r\n    * Result: SP.File\r\n    * Example: checkIn(SP.ClientContext.get_current().get_web(), _spPageContextInfo.webServerRelativeUrl + '/pages/mypage.aspx', \"Checked in by spJsomFluent\", SP.CheckinType.majorCheckIn)\r\n    */\r\n    public checkIn(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.checkInFile`, () => {\r\n            return this.listHelper.checkInFile(web, serverRelativeUrl, comment, checkInType);\r\n        });\r\n        \r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class UserHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    \r\n    public getUserByEmail(email: string): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().ensureUser(email));\r\n    }\r\n    public getUserById(id: number): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().get_siteUsers().getById(id));\r\n    }\r\n    private loadUser(user: SP.User): JQueryPromise<SP.User> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n    public getCurrentUser(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n        var deferred = $.Deferred();\r\n        var user = this.context.get_web().get_currentUser();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserProfileProperties(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n            var deferred = $.Deferred();\r\n            SP.SOD.executeFunc('userprofile', 'SP.UserProfiles.PeopleManager', () => {\r\n                var clientContext = this.context;\r\n                var currentUser = clientContext.get_web().get_currentUser();\r\n                var peopleManager = new SP.UserProfiles.PeopleManager(clientContext);\r\n                var profile = peopleManager.getMyProperties();\r\n                clientContext.load(currentUser);\r\n                clientContext.load(profile);\r\n                clientContext.executeQueryAsync(\r\n                    (sender, args) => {\r\n                        deferred.resolve(profile.get_userProfileProperties());\r\n                    },\r\n                    (sender, args) => {\r\n                        console.error(args.get_message());\r\n                        deferred.reject(sender, args);\r\n                    }\r\n                );\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserManager(): JQueryPromise<SP.User> {\r\n            var deferred = $.Deferred();\r\n            var peopleManager = new SP.UserProfiles.PeopleManager(this.context);\r\n            var profilePropertyNames = [\"Manager\"];\r\n            var user_email = this.context.get_web().get_currentUser().get_email();\r\n            var userProfilePropertiesForUser = new SP.UserProfiles.UserProfilePropertiesForUser(this.context,\r\n                \"i:0#.f|membership|\" + user_email,\r\n                profilePropertyNames);  //TODO: check for better mechanism to constructure login\r\n            var userProfileProps = peopleManager.getUserProfilePropertiesFor(userProfilePropertiesForUser);\r\n\r\n            this.context.load(userProfilePropertiesForUser);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    if (userProfileProps[0]) {\r\n                        var user = this.context.get_web().ensureUser(userProfileProps[0]);\r\n                        this.context.load(user);\r\n                        common.executeQuery(this.context)\r\n                            .fail((sender, args) => { deferred.reject(sender, args); })\r\n                            .done(() => {\r\n                                deferred.resolve(user);\r\n                            });\r\n                    } else {\r\n                        deferred.resolve(null);\r\n                    }\r\n            })\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n}","import UserHelper from \"./helper/userHelper\";\r\nimport { Fluent, Dependency } from \"./fluent\"\r\nimport common from \"./common\";\r\n\r\nexport default class User {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.userHelper = new UserHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"userProfile\";\r\n    private userHelper = null as UserHelper;\r\n    /**\r\n    * Get User by email or account name\r\n    * Result: SP.User\r\n    * Example: get(\"my@email.address\")\r\n    * Example: get(\"i:0#.f|membership|my@email.address\")\r\n    */\r\n    public get(emailOrAccountName:string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.userHelper.getUserByEmail(emailOrAccountName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a user by their Id\r\n    * Result: SP.User\r\n    * Example: getById(15)\r\n    */\r\n    public getById(id: number): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getById`, () => {\r\n            return this.userHelper.getUserById(id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUser()\r\n    */\r\n    public getCurrentUser(): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUser`, () => {\r\n            return this.userHelper.getCurrentUser();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the profile properties for the current user\r\n    * Result: SP.UserProfiles.PersonProperties\r\n    * Example: getCurrentUserProfileProperties()\r\n    */\r\n    public getCurrentUserProfileProperties(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserProfileProperties`, () => {\r\n            return this.userHelper.getCurrentUserProfileProperties();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the manager for the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUserManager()\r\n    */\r\n    public getCurrentUserManager(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserManager`, () => {\r\n            return this.userHelper.getCurrentUserManager();\r\n        });\r\n        \r\n    }\r\n}","import common from \"../common\"\r\nimport { NavigationType } from \"../fluent\";\r\n\r\nexport default class NavigationHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public deleteQuicklaunchNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_quickLaunch());\r\n    }\r\n    public deleteTopNavigationNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_topNavigationBar());\r\n    }\r\n    public deleteQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_quickLaunch(), title);\r\n    }\r\n    public deleteTopQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_topNavigationBar(), title);\r\n    }\r\n    \r\n    public setCurrentNavigation(web: SP.Web, navigationType: NavigationType, showSubsites: boolean = true, showPages:boolean = true): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        const siblingsPropertyName = \"__NavigationShowSiblings\";\r\n        const includeTypesPropertyName = \"__CurrentNavigationIncludeTypes\";\r\n        var allProperties = web.get_allProperties();\r\n        this.context.load(web);\r\n        this.context.load(allProperties);\r\n        var setOptions = () => {\r\n            if (showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"3\");\r\n            } else if (showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"2\");\r\n            }\r\n            else if (!showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"1\");\r\n            }\r\n            else if (!showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"0\");\r\n            }\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var nav = new SP.Publishing.Navigation.WebNavigationSettings(this.context, web);\r\n                switch (navigationType) {\r\n                    case NavigationType.Inherit:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.inheritFromParentWeb);\r\n                        break;\r\n                    case NavigationType.Managed:\r\n                        common.reject(deferred, \"Not implemented\");\r\n                        break;\r\n                    case NavigationType.StructuralWithSiblings:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"True\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    case NavigationType.StructuralChildrenOnly:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"False\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    default:\r\n                        common.reject(deferred, \"Unknown Navigation Type\");\r\n                }   \r\n                nav.update(null);\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n\r\n    private deleteNodes(nav: SP.NavigationNodeCollection): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    itemsToDelete.push(enumerator.get_current());\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    private deleteNode(nav: SP.NavigationNodeCollection, title: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    var node = enumerator.get_current();\r\n                    if (node.get_title() === title) {\r\n                        itemsToDelete.push(node);\r\n                    }\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public createQuicklaunchNode(web: SP.Web, title:string, url:string, asLastNode:boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_quickLaunch(), title, url, asLastNode);\r\n    }\r\n    public createTopNavigationNode(web: SP.Web, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_topNavigationBar(), title, url, asLastNode);\r\n    }\r\n    private createNode(nav:SP.NavigationNodeCollection, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        var info = new SP.NavigationNodeCreationInformation();\r\n        info.set_title(title);\r\n        info.set_url(url);\r\n        info.set_asLastNode(asLastNode);\r\n        var node = nav.add(info);\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(node);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.NavigationNode>;\r\n    }\r\n}","import common from \"./common\"\r\nimport NavigationHelper from \"./helper/navigationHelper\";\r\nimport { Fluent, NavigationLocation, NavigationType, Dependency } from \"./fluent\"\r\nexport default class Navigation {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.navigationHelper = new NavigationHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private navigationHelper = null as NavigationHelper;\r\n    private readonly _helperName: string = \"navigation\";\r\n\r\n    /**\r\n    * Create new navigation node\r\n    * Result: SP.NavigationNode\r\n    * Example: createNode(context.get_web(), NavigationLocation.Quicklaunch, \"Test Node\", \"/sites/mysite/pages/default.aspx\")\r\n    */\r\n    public createNode(web: SP.Web, location: NavigationLocation, title: string, url: string, asLastNode: boolean = true): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.createQuicklaunchNode(web, title, url, asLastNode);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.createTopNavigationNode(web, title, url, asLastNode);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes for the web\r\n    * Result: void\r\n    * Example: deleteAllNodes(context.get_web(), NavigationLocation.Quicklaunch)\r\n    */\r\n    public deleteAllNodes(web: SP.Web, location: NavigationLocation): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteAllNodes`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNodes(web);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopNavigationNodes(web);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n\r\n\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes that match the supplied title for the web\r\n    * Result: void\r\n    * Example: deleteNode(context.get_web(), NavigationLocation.Quicklaunch, \"My link title\")\r\n    */\r\n    public deleteNode(web: SP.Web, location: NavigationLocation, title:string ): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNode(web, title);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopQuicklaunchNode(web, title);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Set navigation for the web\r\n    * Result: void\r\n    * Example: setCurrentNavigation(context.get_web(), 3, true, true)\r\n    * Note: showSubsites and showPages is only applicable for NavigationType.StructuralChildrenOnly (3)\r\n    */\r\n    public setCurrentNavigation(web: SP.Web, type: NavigationType, showSubsites: boolean = false, showPages:boolean = false): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.setCurrentNavigation`, () => {\r\n            return this.navigationHelper.setCurrentNavigation(web, type, showSubsites, showPages);\r\n        });\r\n        \r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class PageHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createPublishingPage(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<SP.Publishing.PublishingPage> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        var pageInfo = new SP.Publishing.PublishingPageInformation();\r\n        pageInfo.set_name(name);\r\n        pageInfo.set_pageLayoutListItem(listItem);\r\n        var publishingWeb = SP.Publishing.PublishingWeb.getPublishingWeb(this.context, web);\r\n        this.context.load(publishingWeb);\r\n        var publishingPage = publishingWeb.addPublishingPage(pageInfo);\r\n        this.context.load(publishingPage);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(publishingPage);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.Publishing.PublishingPage>;\r\n    }\r\n    public getPublishingLayout(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    \r\n\r\n}","import { Fluent, Dependency } from \"./fluent\"\r\nimport PageHelper from \"./helper/pageHelper\"\r\n\r\nexport default class PublishingPage {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.pageHelper = new PageHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private readonly _helperName: string = \"publishingPage\";\r\n    private pageHelper: PageHelper;\r\n    /**\r\n    * Creates a new publishing page.\r\n    * Result: SP.Publishing.PublishingPage\r\n    * Example: .publishingPage.create(SP.ClientContext.get_current().get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    */\r\n    public create(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.pageHelper.createPublishingPage(web, name, layoutUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Gets a page layout.\r\n    * Result: SP.ListItem\r\n    * Example: .publishingPage.getLayout(_spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    * \r\n    */\r\n    public getLayout(serverRelativeUrl:string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getLayout`, () => {\r\n            return this.pageHelper.getPublishingLayout(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n\r\n}","// spJsom - Fluent\r\nimport Web from \"./web\"\r\nimport Permission from \"./permission\"\r\nimport List from \"./list\"\r\nimport ListItem from \"./listitem\"\r\nimport File from \"./file\"\r\nimport User from \"./user\"\r\nimport Navigation from \"./navigation\"\r\nimport PublishingPage from \"./publishingpage\"\r\nimport common from \"./common\"\r\n\r\nexport class Fluent  {\r\n    public context: SP.ClientContext;\r\n    private commands: Array<FluentCommand> = [];\r\n    private results: Array<ActionResult> = [];\r\n    private resultPromise: JQueryDeferred<any>;\r\n    private onExecuting: any;\r\n    private onExecuted: any;\r\n    private dependencies: Array<Dependency> = [];\r\n    public settings: ISettings = { timeoutMilliseconds: 5000, enableDependencyTimeout: true };\r\n    private totalCommands = 0;\r\n    withContext(context: SP.ClientContext): Fluent {\r\n        this.context = context;\r\n        return this;\r\n    }\r\n    withSettings(settings: ISettings): Fluent {\r\n        for (var setting in settings) {\r\n            if (typeof (this.settings[setting]) !== typeof (undefined)) {\r\n                this.settings[setting] = settings[setting];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    get promise(): JQueryPromise<any> {\r\n        return this.resultPromise.promise();\r\n    }\r\n    get permission(): Permission {\r\n        return new Permission(this);\r\n    }\r\n    get list(): List {\r\n        return new List(this);\r\n    }\r\n    get listItem(): ListItem {\r\n        return new ListItem(this);\r\n    }\r\n    get file(): File {\r\n        return new File(this);\r\n    }\r\n    get publishingPage(): PublishingPage {\r\n        return new PublishingPage(this);\r\n    }\r\n    get web(): Web {\r\n        return new Web(this);\r\n    }\r\n    get user(): User{\r\n        return new User(this);\r\n    }\r\n    get navigation(): Navigation {\r\n        return new Navigation(this);\r\n    }\r\n\r\n    public execute(): JQueryPromise<Array<ActionResult>> {\r\n        this.resultPromise = $.Deferred();\r\n        //The dependency timeout is fired if it takes too long to load to avoid promise never completing.\r\n        if (this.settings.enableDependencyTimeout) {\r\n            var expiry = setTimeout(() => {\r\n                common.reject(this.resultPromise, \"Timeout waiting for dependencies to load\");\r\n            }, this.settings.timeoutMilliseconds);\r\n        }\r\n        //To track progress\r\n        this.totalCommands = this.getAvailableActionCommandCount();\r\n        this.loadDependencies()\r\n            .done(() => {\r\n                this.continue();\r\n            })\r\n            .always(() => {\r\n                if (this.settings.enableDependencyTimeout) {\r\n                    clearTimeout(expiry);\r\n                }\r\n            });\r\n        return this.resultPromise.promise() as JQueryPromise<Array<ActionResult>>;\r\n    }\r\n    public onActionExecuted(onExecuted: any): Fluent {\r\n        this.onExecuted = onExecuted;\r\n        return this;\r\n    }\r\n    public onActionExecuting(onExecuting: any): Fluent {\r\n        this.onExecuting = onExecuting;\r\n        return this;\r\n    }\r\n    public when(predicate: any) {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(...command.result)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for when\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    //Similar to when, but all previous results are passed into the predicate\r\n    public whenAll(predicate: any) : Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(this.results)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenAll\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenTrue(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not true\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenTrue\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenFalse(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && !command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenFalse\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chainAction(name: string, action: any) : Fluent {\r\n        var command = new ActionCommand();\r\n        command.name = name;\r\n        command.action = action;\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chain(command: ActionCommand): Fluent {\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public static executeQuery(context: SP.ClientContext) {\r\n        return common.executeQuery(context);\r\n    }\r\n    public registerDependency(dependency: Dependency) {\r\n        if (this.dependencies.indexOf(dependency) === -1) {\r\n            this.dependencies.push(dependency);\r\n        }\r\n    }\r\n    private continue() {\r\n        if (!this.context) {\r\n            throw \"context not set, you must call withContext\";\r\n        }\r\n        var command = this.commands.shift();\r\n        if (command && command.action) {\r\n            if (command.constructor === ActionCommand) {\r\n                if (this.onExecuting) {\r\n                    let step = this.totalCommands - (this.getAvailableActionCommandCount());\r\n                    this.onExecuting((command as ActionCommand).name, step, this.totalCommands);\r\n                }\r\n            }\r\n            var promise = command.action() as JQueryPromise<any>;\r\n            promise.done((arg1, arg2, arg3, arg4, arg5, arg6, arg7) => {\r\n                if (command.constructor === ActionCommand) {\r\n                    let results = [];\r\n                    this.storeResult(arg1, results);\r\n                    this.storeResult(arg2, results);\r\n                    this.storeResult(arg3, results);\r\n                    this.storeResult(arg4, results);\r\n                    this.storeResult(arg5, results);\r\n                    this.storeResult(arg6, results);\r\n                    this.storeResult(arg7, results);\r\n                    this.addResult(command as ActionCommand, true, results);\r\n                    if (this.onExecuted) {\r\n                        this.onExecuted((command as ActionCommand).name, true, results);\r\n                    }\r\n                }\r\n                if (this.commands.length) {\r\n                    this.continue();\r\n                }\r\n                else {\r\n                    this.resolveChain();\r\n                }\r\n            })\r\n                .fail((sender, args) => {\r\n                    if (command.constructor === ActionCommand) {\r\n                        let results = [];\r\n                        this.storeResult(sender, results);\r\n                        this.storeResult(args, results);\r\n                        this.addResult(command as ActionCommand, false, results);\r\n                        if (this.onExecuted) {\r\n                            this.onExecuted((command as ActionCommand).name, false, {sender:sender, args:args});\r\n                        }\r\n                        this.failChain(sender, args);\r\n                        return;\r\n                    }\r\n                    this.resolveChain();\r\n                });\r\n        } else {\r\n            this.resolveChain();\r\n        }\r\n    }\r\n    private storeResult(arg: any, results: Array<any>) {\r\n        if (typeof (arg) !== typeof (undefined)) {\r\n            results.push(arg);\r\n        }\r\n    }\r\n    private resolveChain() {\r\n        this.resultPromise.resolve(this.results);\r\n    }\r\n    private failChain(sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        this.resultPromise.reject(sender, args);\r\n    }\r\n    private reject(deferred: JQueryDeferred<any>, sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        deferred.reject(sender, args);\r\n    }\r\n    private addResult(command: ActionCommand, success: boolean, results: Array<any>) {\r\n        var result = new ActionResult();\r\n        result.name = command.name;\r\n        result.success = success;\r\n        result.result = results;\r\n        this.results.push(result);\r\n    }\r\n    private loadDependencies(): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        let spDependencies = [\"SP.js\", \"SP.Runtime.js\"];\r\n        for (let i = 0; i < this.dependencies.length; i++) {\r\n            switch (this.dependencies[i]) {\r\n                case Dependency.UserProfile:\r\n                    (<any>window).LoadSodByKey(\"userprofile\");\r\n                    spDependencies.push(\"userprofile\");\r\n                    break;\r\n                case Dependency.Publishing:\r\n                    SP.SOD.registerSod('SP.Publishing.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.publishing.js'));\r\n                    spDependencies.push(\"SP.Publishing.js\");\r\n                    break;\r\n                case Dependency.Taxonomy:\r\n                    SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));\r\n                    spDependencies.push(\"sp.taxonomy.js\");\r\n                    break;\r\n                default:\r\n                    throw \"Depenency not implemented\";\r\n            }\r\n        }\r\n        SP.SOD.loadMultiple(spDependencies, () => {\r\n            deferred.resolve();\r\n        });\r\n        return deferred.promise();\r\n    }\r\n    private peekLastCommand() {\r\n        if (this.commands.length) {\r\n            return this.commands[this.commands.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private peekLastResult() {\r\n        if (this.results.length) {\r\n            return this.results[this.results.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private getAvailableActionCommandCount(): number {\r\n        var count = 0;\r\n        for (var i = 0; i < this.commands.length; i++) {\r\n            if (this.commands[i].constructor === ActionCommand) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\nexport enum NavigationLocation {\r\n    TopNavigation,\r\n    Quicklaunch\r\n}\r\nexport enum NavigationType {\r\n    Inherit,\r\n    Managed,\r\n    StructuralWithSiblings,\r\n    StructuralChildrenOnly\r\n}\r\nexport enum Dependency {\r\n    Publishing,\r\n    UserProfile,\r\n    Taxonomy\r\n}\r\nexport interface ISettings {\r\n    timeoutMilliseconds?: number,\r\n    enableDependencyTimeout?: boolean\r\n}\r\nexport class FluentCommand {\r\n    action: any;\r\n}\r\nexport class ActionCommand extends FluentCommand {\r\n    name: string;\r\n}\r\nexport class ActionResult {\r\n    name: string;\r\n    success: boolean;\r\n    result: Array<any>;\r\n}\r\nexport interface KeyValuePair {\r\n    key: string;\r\n    value: any;\r\n}\r\nexport class WhenCommand extends FluentCommand { }\r\n\r\n","import * as spJsom from \"../src/fluent\"\r\nvar examples = {\r\n    run: () => {\r\n        examples.getUser();\r\n        //examples.createListAndItem();\r\n        //examples.provisionWebWithProgress();\r\n        //examples.query();\r\n        //examples.provisionWebWithProgress();\r\n        //examples.getListItem();\r\n        //examples.createListAndItem();\r\n        //examples.createListItem();\r\n        //examples.setWelcomePage();\r\n        //examples.createPublishingPage();\r\n        //examples.customActionCommands();\r\n        //examples.customActionCommandsChain();\r\n    },\r\n    deleteListItem: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.deleteById(context.get_web(), \"MyList\", 7)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    query: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.query(context.get_web(), \"MyList\", \"<View><Query><Where><In><FieldRef Name='ID' /><Values><Value Type='Number'>1</Value><Value Type='Number'>2</Value></Values></In></View></Query></Where>\")\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    provisionWebWithProgress: () => {\r\n        var subSitePath = \"testsite1\";\r\n        var url = (`${_spPageContextInfo.webServerRelativeUrl}/${subSitePath}`).replace(\"//\", \"/\");\r\n        var context = SP.ClientContext.get_current();\r\n        var newSiteContext = new SP.ClientContext(url);  //Web doesn't exist yet, but we can create a context for it\r\n\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .onActionExecuting((actionName, current, total) => {\r\n                let progress = Math.ceil(100 * current / total);\r\n                console.log(`Executing: ${actionName}, we are ${progress}% through.`);\r\n            })\r\n            .onActionExecuted((actionName, success, results: Array<any>) => {\r\n                console.log(`Executed: ${actionName}:${success}`);\r\n                if (!success) {\r\n                    console.error(actionName, results);\r\n                }\r\n            })\r\n            .permission.hasWebPermission(SP.PermissionKind.createSSCSite, context.get_web())\r\n            .whenTrue() //stops executing the chain if the user doesn't have permission\r\n            .web.exists(url)\r\n            .whenFalse() //stops executing the chain if the web already exists\r\n            .web.create(subSitePath, context.get_web(), \"Test Site\", \"CMSPUBLISHING#0\") //Create a sub site\r\n            .withContext(newSiteContext) //Switch to the new site context\r\n            .publishingPage.create(newSiteContext.get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n            .web.setWelcomePage(newSiteContext.get_web(), \"pages/home.aspx\")\r\n            .execute().done((results: Array<spJsom.ActionResult>) => {\r\n                var lastAction = results[results.length - 1];\r\n                console.log(\"The last action was \" + lastAction.name + \" and success was: \" + lastAction.success, lastAction.result);\r\n                if (lastAction.name === \"web.exists\" && lastAction.result[0] === true) {\r\n                    console.warn(\"The web already exists.\");\r\n                }\r\n            })\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            });\r\n    },\r\n    getListItem: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.get(context.get_web(), \"MyList\", 7, [\"ID\", \"Title\"])\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    createListAndItem: () => {\r\n        var listName = \"MyList1\";\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .permission.hasWebPermission(SP.PermissionKind.manageLists, context.get_web())\r\n            .whenTrue() \r\n            .list.exists(context.get_web(), listName)\r\n            .whenFalse() \r\n            .list.create(context.get_web(), listName, 100)\r\n            .listItem.create(context.get_web(), listName, { Title: \"Created by spJsom\" })\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    createListItem: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var personValue = new SP.FieldUserValue();\r\n        personValue.set_lookupId(_spPageContextInfo.userId);\r\n        var properties = {\r\n            Title: \"My title\",\r\n            PersonOrGroupField: personValue,\r\n            MultiChoiceField: [\"Second\", \"Third\"],\r\n            ChoiceField: \"Second\",\r\n            NumberField: 12.45\r\n        };\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.create(context.get_web(), \"SomeList\", properties)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    deleteList: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var listName = \"MyList1\";\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .list.exists(context.get_web(), listName)\r\n            .whenTrue()  //stops here if the list doesn't exist\r\n            .list.delete(context.get_web(), listName)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    getUser: () => {\r\n        //Shows various ways to get a user and the profile properties.\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .user.getById(_spPageContextInfo.userId)\r\n            .user.get(_spPageContextInfo.userEmail)\r\n            .user.getCurrentUser()\r\n            .user.getCurrentUserProfileProperties()\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n                console.log(`Your name is: ${results[0].result[0].get_title()}`);\r\n                console.log(\"Your profile properties\", results[3].result[0]);\r\n            });\r\n    },\r\n    setWelcomePage: () => {\r\n        new spJsom.Fluent()\r\n            .withContext(SP.ClientContext.get_current())\r\n            .web.setWelcomePage(SP.ClientContext.get_current().get_web(), 'pages/MyPage.aspx')\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    createPublishingPage: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var webUrl = _spPageContextInfo.webServerRelativeUrl;\r\n        var filename = \"MyPage.aspx\";\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .publishingPage.create(context.get_web(), filename, `${webUrl}/_catalogs/masterpage/blankwebpartpage.aspx`)\r\n            .file.checkIn(context.get_web(), `${webUrl}/pages/${filename}`, \"Checked in by spJsomFluent\", SP.CheckinType.majorCheckIn)\r\n            .web.setWelcomePage(context.get_web(), `pages/${filename}`)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    customActionCommands: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .chainAction(\"myCustomCommand\", () => {\r\n                var deferred = $.Deferred();\r\n                context.get_web().set_title(\"My new title\");\r\n                context.get_web().update();\r\n                spJsom.Fluent.executeQuery(context)\r\n                    .fail((sender, args) => {\r\n                        deferred.reject(sender, args);\r\n                    })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n                return deferred.promise();\r\n            })\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    customActionCommandsChain: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var customAction = new spJsom.ActionCommand();\r\n        customAction.name = \"myCustomCommand\";\r\n        customAction.action = () => {\r\n            var deferred = $.Deferred();\r\n            context.get_web().set_title(\"My alternate title\");\r\n            context.get_web().update();\r\n            spJsom.Fluent.executeQuery(context)\r\n                .fail((sender, args) => {\r\n                    deferred.reject(sender, args);\r\n                })\r\n                .done(() => {\r\n                    deferred.resolve();\r\n                });\r\n            return deferred.promise();\r\n        };\r\n\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .chain(customAction)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    }\r\n};\r\nSP.SOD.loadMultiple([\"SP.js\"], () => {\r\n    console.log(\"Executing examples\");\r\n    examples.run();\r\n});\r\n"],"sourceRoot":""}
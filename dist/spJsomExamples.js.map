{"version":3,"sources":["webpack://spJsom/webpack/bootstrap","webpack://spJsom/./src/common.ts","webpack://spJsom/./src/helper/Client.CamlBuilder.ts","webpack://spJsom/./src/helper/webHelper.ts","webpack://spJsom/./src/web.ts","webpack://spJsom/./src/helper/permissionHelper.ts","webpack://spJsom/./src/permission.ts","webpack://spJsom/./src/helper/listHelper.ts","webpack://spJsom/./src/list.ts","webpack://spJsom/./src/listitem.ts","webpack://spJsom/./src/file.ts","webpack://spJsom/./src/helper/userHelper.ts","webpack://spJsom/./src/user.ts","webpack://spJsom/./src/helper/navigationHelper.ts","webpack://spJsom/./src/navigation.ts","webpack://spJsom/./src/helper/pageHelper.ts","webpack://spJsom/./src/publishingpage.ts","webpack://spJsom/./src/fluent.ts","webpack://spJsom/./examples/spJsomExamples-typescript.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CamlOperator","EventRecurranceOverlap","AggregationType","common","reject","deferred","reason","this","get_message","notImplementedPromise","$","Deferred","promise","FilterArray","items","predicate","output","length","push","executeQuery","clientContext","executeQueryAsync","sender","args","resolve","webHelper_WebHelper","WebHelper","context","setWelcomePage","web","url","rootFolder","get_rootFolder","load","set_welcomePage","update","fail","done","createWeb","parentWeb","title","template","useSamePermissionsAsParent","info","SP","WebCreationInformation","set_url","set_title","set_webTemplate","set_useSamePermissionsAsParentSite","newWeb","get_webs","add","doesWebExist","getAllWebs","get_site","get_rootWeb","toLowerCase","get_serverRelativeUrl","get_url","getWebs","fromWeb","_this","webs","promises","get_count","subWeb","getItemAtIndex","when","apply","web_Web","Web","fluent","_fluent","_helperName","webHelper","chainAction","exists","permissionHelper_PermissionHelper","PermissionHelper","hasWebPermission","permission","get_effectiveBasePermissions","has","hasListPermission","list","hasItemPermission","item","permission_Permission","Permission","permissionHelper","listHelper_ListHelper","ListHelper","createList","listName","templateId","ListCreationInformation","set_templateType","get_lists","setAlerts","enabled","getByTitle","set_enableAssignToEmail","setListItemProperties","listItem","properties","propertyName","set_item","lists","get_title","createListItemWithContentTypeName","contentTypeName","itemCreateInfo","ListItemCreationInformation","listContentTypes","get_contentTypes","contentTypeId","contentType","get_name","get_id","get_stringValue","addItem","createListItem","loadListItem","viewFields","getFile","serverRelativeUrl","file","getFileByServerRelativeUrl","checkInFile","comment","checkInType","checkIn","checkOutFile","checkOut","getList","deleteList","deleteObject","getFileListItem","get_listItemAllFields","getListItemById","id","getItemById","deleteListItemById","getListItems","viewXml","query","CamlQuery","set_viewXml","listItems","getItems","addContentTypeListAssociation","listCts","contentTypes","findContentType","collection","listCt","get_contentTypesEnabled","set_contentTypesEnabled","associatedCt","addExistingContentType","removeContentTypeListAssociation","setDefaultValueOnList","fieldInternalName","defaultValue","fields","get_fields","field","get_internalName","findField","set_defaultValue","list_List","List","listHelper","delete","listitem_ListItem","ListItem","createWithContentType","deleteById","getAll","file_File","File","getListItem","userHelper_UserHelper","UserHelper","getUserByEmail","email","loadUser","get_web","ensureUser","getUserById","get_siteUsers","getById","user","console","error","getCurrentUser","get_currentUser","getCurrentUserProfileProperties","SOD","executeFunc","currentUser","profile","UserProfiles","PeopleManager","getMyProperties","get_userProfileProperties","getCurrentUserManager","peopleManager","user_email","get_email","userProfilePropertiesForUser","UserProfilePropertiesForUser","userProfileProps","getUserProfilePropertiesFor","user_User","User","userHelper","emailOrAccountName","registerDependency","Dependency","UserProfile","navigationHelper_NavigationHelper","NavigationHelper","deleteQuicklaunchNodes","deleteNodes","get_navigation","get_quickLaunch","deleteTopNavigationNodes","get_topNavigationBar","deleteQuicklaunchNode","deleteNode","deleteTopQuicklaunchNode","setCurrentNavigation","navigationType","showSubsites","showPages","allProperties","get_allProperties","setOptions","nav","Publishing","Navigation","WebNavigationSettings","NavigationType","Inherit","get_currentNavigation","set_source","StandardNavigationSource","inheritFromParentWeb","Managed","StructuralWithSiblings","portalProvider","StructuralChildrenOnly","enumerator","getEnumerator","itemsToDelete","moveNext","get_current","node","createQuicklaunchNode","asLastNode","createNode","createTopNavigationNode","NavigationNodeCreationInformation","set_asLastNode","navigation_Navigation","navigationHelper","location","NavigationLocation","Quicklaunch","TopNavigation","deleteAllNodes","type","StringBuilder","toString","CamlBuilder","camlClauses","orderByFields","requireAll","viewFieldsString","groupByFieldsString","aggregationFieldsString","begin","buildQuery","setFilter","caml","hasWhereClause","indexOf","sb","directCaml","recurrence","totalCamlPairs","openOperators","clausesAdded","fieldRef","ascending","groupBy","orderBy","aggregations","queryOptionText","queryOptions","viewScope","totalClauses","rowLimit","getNullClause","retVal","getClause","operation","valueType","getDateTimeClause","includeTime","addNullClause","addTextClause","addBooleanClause","addNumberClause","addDateTimeClause","addLookupClause","clause","addAggregation","aggregationType","replace","recurrenceQuery","overlapType","addViewField","addViewFields","fieldRefs","addGroupByField","addGroupByFields","addOrderBy","OrderBy","addDaysToDate","date","days","setDate","getDate","pageHelper_PageHelper","PageHelper","createPublishingPage","layoutUrl","pageInfo","PublishingPageInformation","set_name","set_pageLayoutListItem","publishingWeb","PublishingWeb","getPublishingWeb","publishingPage","addPublishingPage","getPublishingLayout","setLayout","camlBuilder","Eq","pages","page","publishingpage_PublishingPage","PublishingPage","pageHelper","getLayout","fluent_Fluent","Fluent","commands","results","dependencies","settings","timeoutMilliseconds","enableDependencyTimeout","totalCommands","withContext","withSettings","setting","withDependency","dependency","resultPromise","execute","expiry","setTimeout","getAvailableActionCommandCount","loadDependencies","continue","always","clearTimeout","onActionExecuted","onExecuted","onActionExecuting","onExecuting","peekLastCommand","constructor","ActionCommand","command","WhenCommand","action","peekLastResult","success","result","failChain","whenAll","whenTrue","whenFalse","chain","shift","step","arg1","arg2","arg3","arg4","arg5","arg6","arg7","storeResult","addResult","resolveChain","arg","ActionResult","spDependencies","window","LoadSodByKey","registerSod","Utilities","Utility","getLayoutsPageUrl","Taxonomy","loadMultiple","count","FluentCommand","_super","__extends","__webpack_exports__","_src_fluent__WEBPACK_IMPORTED_MODULE_0__","examples","run","getUser","deleteListItem","ClientContext","log","provisionWebWithProgress","_spPageContextInfo","webServerRelativeUrl","newSiteContext","actionName","current","total","progress","Math","ceil","PermissionKind","createSSCSite","siteServerRelativeUrl","lastAction","warn","createListAndItem","manageLists","Title","personValue","FieldUserValue","set_lookupId","userId","PersonOrGroupField","MultiChoiceField","ChoiceField","NumberField","userEmail","webUrl","CheckinType","majorCheckIn","customActionCommands","customActionCommandsChain","customAction"],"mappings":"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","file":"spJsomExamples.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\r\nexport class common {\r\n    public static reject(deferred: JQueryDeferred<any>, reason:string) {\r\n        deferred.reject(this, { get_message: function () { return reason; } } );\r\n    }\r\n    public static notImplementedPromise() : JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        common.reject(deferred, \"Not Implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public static executeQuery = (clientContext: SP.ClientContext) => {\r\n        var deferred = $.Deferred();\r\n        clientContext.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(sender, args);\r\n            },\r\n            (sender, args) => {\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise();\r\n    };\r\n    public static FilterArray<T>(items: Array<T>, predicate: any): Array<T> {\r\n        let output = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i], i)) {\r\n                output.push(items[i]);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}","\"use strict\";   \r\n/*  Script: Client.CamlBuilder\r\n    By: Tim Wheeler\r\n    Version: v7 - Mar 2019\r\n        \r\n    Notes: Date rage overlap query and scope not tested.\r\n        \r\n    TypeScript Example:\r\n        var myAppData = myAppData || {};\r\n(data => {\r\n    var queryContext;\r\n    var listName = \"Tasks\";\r\n    data.query = () => {\r\n        queryContext = {};\r\n        var camlBuilder = new CamlBuilder();\r\n        camlBuilder.addViewFields([\"Title\", \"Priority\"]);\r\n        camlBuilder.addOrderBy(\"DueDate\", false);\r\n        camlBuilder.rowLimit = 4;\r\n        camlBuilder.addDateTimeClause(CamlOperator.Geq, \"DueDate\", camlBuilder.addDaysToDate(new Date(), -7).toISOString(), false);\r\n        camlBuilder.addDateTimeClause(CamlOperator.Leq, \"DueDate\", camlBuilder.addDaysToDate(new Date(), 7).toISOString(), false);\r\n    \r\n        var clientContext = SP.ClientContext.get_current();\r\n        var ctx = clientContext;\r\n        var list = ctx.get_web().get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        query.set_viewXml(camlBuilder.viewXml);\r\n        queryContext.items = list.getItems(query);\r\n        ctx.load(queryContext.items);\r\n        queryContext.list = list;\r\n        queryContext.clientContext = clientContext;\r\n        clientContext.executeQueryAsync(onQuerySucceeded, onQueryFailed);\r\n    \r\n    };\r\n    \r\n    function onQuerySucceeded() {\r\n        var items = queryContext.items;\r\n        var listItemInfo = \"\";\r\n        var listItemEnumerator = items.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n            var listItem = listItemEnumerator.get_current();\r\n    \r\n            listItemInfo += '\\nTitle: ' + listItem.get_item('Title');\r\n            listItemInfo += ' Overdue: ' + listItem.get_item('Overdue');\r\n        }\r\n        console.log('success ' + listItemInfo);\r\n    }\r\n    function onQueryFailed(sender, args) {\r\n        alert('Request failed. ' + args.get_message() + '\\n' + args.get_stackTrace());\r\n    }\r\n})(myAppData);\r\n*/\r\nexport interface ICamlBuilder {\r\n    query: string;\r\n    viewXml: string;\r\n    viewScope: string;\r\n    viewFields: string;\r\n    totalClauses: number;\r\n    rowLimit: number;\r\n    begin(requireAll: boolean);\r\n    addNullClause(fieldRef: string);\r\n    addTextClause(operation: CamlOperator, fieldRef: string, value: string);\r\n    addNumberClause(operation: CamlOperator, fieldRef: string, value: number);\r\n    addDateTimeClause(operation: CamlOperator, fieldRef: string, value: string, includeTime: boolean);\r\n    addLookupClause(operation: CamlOperator, fieldRef: string, value: string, valueType: string);\r\n    recurrenceQuery(overlapType: EventRecurranceOverlap);\r\n    addViewField(fieldRef: string);\r\n    addViewFields(fieldRefs: Array<string>);\r\n    addGroupByField(fieldRef: string);\r\n    addGroupByFields(fieldRefs: Array<string>);\r\n    addOrderBy(fieldRef: string, ascending: boolean);\r\n    addDaysToDate(date, days);\r\n}\r\n\r\n/// <summary>\r\n///     CAML Operations\r\n/// </summary>\r\nexport enum CamlOperator {\r\n    Contains,\r\n    BeginsWith,\r\n    Eq,\r\n    Geq,\r\n    Leq,\r\n    Lt,\r\n    Gt,\r\n    Neq,\r\n    DateRangesOverlap,\r\n    IsNotNull,\r\n    IsNull\r\n}\r\n\r\nexport enum EventRecurranceOverlap {\r\n    Now,\r\n    Today,\r\n    Week,\r\n    Month,\r\n    Year\r\n}\r\nexport enum AggregationType {\r\n    SUM,\r\n    COUNT,\r\n    AVG,\r\n    MAX,\r\n    MIN,\r\n    STDEV,\r\n    VAR\r\n}\r\nexport class StringBuilder {\r\n    value: string = \"\";\r\n    add(value: string) {\r\n        this.value += value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\nexport interface OdataItem {\r\n    property: string;\r\n    name: string;\r\n    value: any;\r\n}\r\nexport interface OdataPair {\r\n    left: OdataPair;\r\n    right: OdataPair;\r\n    type: string;\r\n    func: string;\r\n    property: string;\r\n    name: string;\r\n    value: any;\r\n    args: Array<OdataPair>;\r\n}\r\nexport class CamlBuilder implements ICamlBuilder {\r\n    constructor() {\r\n        this.begin(true);\r\n    }\r\n    private camlClauses: Array<string> = [];\r\n    private orderByFields: Array<OrderBy> = [];\r\n    private requireAll: boolean = true;\r\n    private viewFieldsString: string = \"\";\r\n    private groupByFieldsString: string = \"\";\r\n    private aggregationFieldsString: string = \"\";\r\n    private recurrence: string;\r\n    private directCaml: string;\r\n    private queryOptions: string;\r\n    rowLimit: number;\r\n    viewScope: string;\r\n\r\n    get query(): string {\r\n        return this.buildQuery();\r\n    }\r\n    get viewFields(): string {\r\n        return this.viewFieldsString;\r\n    }\r\n    get totalClauses(): number {\r\n        return this.camlClauses.length;\r\n    }\r\n    setFilter(caml: string) {\r\n            \r\n        var hasWhereClause = caml.indexOf(\"<Where>\") === 0;\r\n        var sb = new StringBuilder();\r\n        if (!hasWhereClause) {\r\n            sb.add(\"<Where>\");\r\n        }\r\n        sb.add(caml);\r\n        if (!hasWhereClause) {\r\n            sb.add(\"</Where>\");\r\n        }\r\n        this.directCaml = sb.toString();\r\n    }\r\n    private buildQuery(): string {\r\n        if (this.recurrence) {\r\n            return `<Where>${this.recurrence}</Where>`;\r\n        }\r\n        var query = \"\";\r\n        var openOperators = 0;\r\n        if (this.directCaml) {\r\n            query += this.directCaml;\r\n        } else if (!this.directCaml && this.camlClauses.length > 0) {\r\n            query += \"<Where>\";\r\n\r\n            //When we have just one clause we can't use AND or OR.\r\n            if (this.camlClauses.length > 1) {\r\n                let totalCamlPairs = this.camlClauses.length - 1;\r\n                while (totalCamlPairs > 0) {\r\n                    query += (this.requireAll ? \"<And>\" : \"<Or>\");\r\n                    totalCamlPairs--;\r\n                    openOperators++;\r\n                }\r\n            }\r\n            var clausesAdded = 0;\r\n\r\n            for (let i = 0; i < this.camlClauses.length; i++) {\r\n                const clause = this.camlClauses[i];\r\n                query += clause;\r\n                clausesAdded++;\r\n                if (clausesAdded > 1) {\r\n                    query += this.requireAll ? \"</And>\" : \"</Or>\";\r\n                    openOperators--;\r\n                }\r\n            }\r\n            query += \"</Where>\";\r\n        }\r\n        if (this.orderByFields.length > 0) {\r\n            query += \"<OrderBy>\";\r\n            for (let i = 0; i < this.orderByFields.length; i++) {\r\n                var item = this.orderByFields[i];\r\n                query += `<FieldRef Name=\"${item.fieldRef}\" Ascending=\"${item.ascending ? \"TRUE\" : \"FALSE\"}\" />`;\r\n            }\r\n            query += \"</OrderBy>\";\r\n        }\r\n        return query;\r\n    }\r\n    get viewXml(): string {\r\n        var viewFields = \"\";\r\n        if (this.viewFields) {\r\n            viewFields = `<ViewFields>${this.viewFields}</ViewFields>`;\r\n        }\r\n        var groupBy = \"\";\r\n        if (this.groupByFieldsString) {\r\n            groupBy = `<GroupBy Collapse=\"TRUE\" GroupLimit=\"1999\">${this.groupByFieldsString}</GroupBy>`;\r\n        }\r\n        var orderBy = \"\";\r\n        if (this.orderByFields && this.orderByFields.length) {\r\n            orderBy = `<OrderBy>`;\r\n            for (let i = 0; i < this.orderByFields.length; i++) {\r\n                orderBy += `<FieldRef Name=\"${this.orderByFields[i].fieldRef}\" Ascending=\"${this.orderByFields[i].ascending ? 'TRUE' : 'FALSE'}\"/>`;\r\n            }\r\n            orderBy += `</OrderBy>`;\r\n        }\r\n        var aggregations = \"\";\r\n        if (this.aggregationFieldsString) {\r\n            aggregations = `<Aggregations Value=\"On\">${this.aggregationFieldsString}</Aggregations>`;\r\n        }\r\n        var queryOptionText = \"\";\r\n        if (this.queryOptions) {\r\n            queryOptionText = `<QueryOptions>\r\n                ${this.queryOptions}\r\n            </QueryOptions>`;\r\n        }\r\n        return `<View${this.viewScope ? \" \" + this.viewScope : \"\"}>${viewFields}<Query>${groupBy}${(this.orderByFields && this.orderByFields.length > 0) || this.totalClauses > 0 || this.directCaml ? this.query : \"\"}${orderBy}</Query>${queryOptionText}${aggregations}${this.rowLimit ? \"<RowLimit>\" + this.rowLimit + \"</RowLimit>\" : \"\"}</View>`;\r\n    }\r\n\r\n    begin(requireAll: boolean) {\r\n        this.camlClauses = [];\r\n        this.requireAll = requireAll;\r\n        this.recurrence = null;\r\n        this.viewFieldsString = \"\";\r\n        this.orderByFields = [];\r\n        this.directCaml = null;\r\n    }\r\n\r\n    getNullClause(fieldRef: string) {\r\n        var retVal = \"\";\r\n        if (fieldRef) {\r\n            retVal = `<IsNull><FieldRef Name=\"${fieldRef}\" /></IsNull>`;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    getClause(operation: CamlOperator, fieldRef: string, value: string, valueType: string): string {\r\n        var retVal = `<${CamlOperator[operation]}><FieldRef Name=\"${fieldRef}\" /><Value Type=\"${valueType}\">${value}</Value></${CamlOperator[operation]}>`;\r\n        return retVal;\r\n    }\r\n    getDateTimeClause(operation: CamlOperator, fieldRef: string, value: string, includeTime: boolean) {\r\n        var retVal = `<${CamlOperator[operation]}><FieldRef Name=\"${fieldRef}\" /><Value Type=\"DateTime\" ${includeTime ? \"IncludeTimeValue='TRUE'\" : \"\"}>${value}</Value></${CamlOperator[operation]}>`;\r\n        return retVal;\r\n    }\r\n    addNullClause(fieldRef: string) {\r\n        this.camlClauses.push(this.getNullClause(fieldRef));\r\n    }\r\n    addTextClause(operation: CamlOperator, fieldRef: string, value: string) {\r\n        this.camlClauses.push(this.getClause(operation, fieldRef, value, \"Text\"));\r\n    }\r\n    addBooleanClause(operation: CamlOperator, fieldRef: string, value: boolean) {\r\n        this.camlClauses.push(this.getClause(operation, fieldRef, value ? \"1\" : \"0\", \"Integer\"));\r\n    }\r\n    addNumberClause(operation: CamlOperator, fieldRef: string, value: number) {\r\n        this.camlClauses.push(this.getClause(operation, fieldRef, value.toString(), \"Number\")); //TODO: verify type\r\n    }\r\n    addDateTimeClause(operation: CamlOperator, fieldRef: string, value: string, includeTime: boolean) {\r\n        this.camlClauses.push(this.getDateTimeClause(operation, fieldRef, value, includeTime));\r\n    }\r\n\r\n    addLookupClause(operation: CamlOperator, fieldRef: string, value: string, valueType: string) {\r\n        var clause = `<${CamlOperator[operation]}><FieldRef Name=\"${fieldRef}\" LookupId=\"True\" /><Value Type=\"${valueType}\">${value}</Value></${CamlOperator[operation]}>`;\r\n        this.camlClauses.push(clause);\r\n    }\r\n    addAggregation(fieldRef: string, aggregationType: AggregationType) {\r\n        this.aggregationFieldsString = this.aggregationFieldsString + `<FieldRef Name=\"${fieldRef.replace(\" \", \"_x0020_\")}\" Type=\"${AggregationType[aggregationType]}\" />`;\r\n    }\r\n    recurrenceQuery(overlapType: EventRecurranceOverlap) {\r\n        this.recurrence = `<DateRangesOverlap><FieldRef Name=\"EventDate\"/><FieldRef Name=\"EndDate\"/><FieldRef Name=\"RecurrenceID\"/><Value><${EventRecurranceOverlap[overlapType]}/></Value></DateRangesOverlap>`;\r\n        this.queryOptions += \r\n            `<CalendarDate>2018-01-01T12:00:00Z</CalendarDate>\r\n            <RecurrencePatternXMLVersion>v3</RecurrencePatternXMLVersion>\r\n            <ExpandRecurrence>TRUE</ExpandRecurrence>`;\r\n    }\r\n    addViewField(fieldRef: string) {\r\n        this.viewFieldsString = this.viewFieldsString + `<FieldRef Name=\"${fieldRef.replace(\" \", \"_x0020_\")}\"/>`;\r\n    }\r\n    addViewFields(fieldRefs: Array<string>) {\r\n        for (var i = 0; i < fieldRefs.length; i++) {\r\n            this.addViewField(fieldRefs[i]);\r\n        }\r\n    }\r\n    addGroupByField(fieldRef: string) {\r\n        this.groupByFieldsString = this.groupByFieldsString + `<FieldRef Name=\"${fieldRef.replace(\" \", \"_x0020_\")}\"/>`;\r\n    }\r\n    addGroupByFields(fieldRefs: Array<string>) {\r\n        for (var i = 0; i < fieldRefs.length; i++) {\r\n            this.addGroupByField(fieldRefs[i]);\r\n        }\r\n    }\r\n    addOrderBy(fieldRef: string, ascending: boolean) {\r\n        var orderBy = new OrderBy();\r\n        orderBy.fieldRef = fieldRef;\r\n        orderBy.ascending = ascending;\r\n        this.orderByFields.push(orderBy);\r\n    }\r\n    addDaysToDate(date, days) {\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    }\r\n        \r\n}\r\nexport class OrderBy {\r\n    fieldRef: string;\r\n    ascending: boolean;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { common } from \"../common\"\r\n\r\nexport class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public setWelcomePage(web: SP.Web, url: string): JQueryPromise<SP.Folder> {\r\n            var deferred = $.Deferred();\r\n            var rootFolder = web.get_rootFolder();\r\n            this.context.load(web);\r\n            this.context.load(rootFolder);\r\n            rootFolder.set_welcomePage(url);\r\n            rootFolder.update();\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(rootFolder);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Folder>;\r\n    }\r\n    public createWeb(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent:boolean = true): JQueryPromise<SP.Web> {\r\n            var deferred = $.Deferred();\r\n            var info = new SP.WebCreationInformation();\r\n            info.set_url(name);\r\n            info.set_title(title);\r\n            info.set_webTemplate(template);\r\n            info.set_useSamePermissionsAsParentSite(useSamePermissionsAsParent);\r\n            var newWeb = parentWeb.get_webs().add(info);\r\n            this.context.load(newWeb);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(newWeb);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Web>;\r\n    }\r\n    public doesWebExist(url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, this.context.get_site().get_rootWeb(), output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    for (var i = 0; i < output.length; i++) {\r\n                        if (url.toLowerCase() === output[i].get_serverRelativeUrl() || url.toLowerCase() === output[i].get_url()) {\r\n                            deferred.resolve(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                    deferred.resolve(false);\r\n                });\r\n            return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public getWebs(fromWeb: SP.Web): JQueryPromise<Array<SP.Web>> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, fromWeb, output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(output);\r\n                });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n    private getAllWebs(context: SP.ClientContext, web: SP.Web, output: Array<SP.Web>): JQueryPromise<Array<SP.Web>> {\r\n        var deferred = $.Deferred();\r\n        var webs = web.get_webs();\r\n        context.load(webs);\r\n        common.executeQuery(context)\r\n            .fail((sender, args) => {\r\n                deferred.reject(sender, args);\r\n            })\r\n            .done(() => {\r\n                var promises = [];\r\n                for (var i = 0; i < webs.get_count(); i++) {\r\n                    var subWeb = webs.getItemAtIndex(i);\r\n                    output.push(subWeb);\r\n                    promises.push(this.getAllWebs(context, subWeb, output));\r\n                }\r\n                if (promises.length) {\r\n                    $.when.apply($, promises)\r\n                        .fail((sender, args) => {\r\n                            deferred.reject(sender, args);\r\n                        })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                } else {\r\n                    deferred.resolve();\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n\r\n}","import { WebHelper } from \"./helper/webHelper\";\r\nimport { Fluent } from \"./fluent\"\r\n\r\nexport class Web {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.webHelper = new WebHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"web\";\r\n    private webHelper = null as WebHelper;\r\n    /**\r\n      * Set the web welcome page.  The url should be relative to the root folder of the web. \r\n      * Result: SP.Folder\r\n      * Example: setWelcomePage(context.get_web(), \"pages/default.aspx\")\r\n      */\r\n    public setWelcomePage(web: SP.Web, url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.setWelcomePage`, () => {\r\n            return this.webHelper.setWelcomePage(web, url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Create a new sub web.\r\n      * Result: SP.Web\r\n      * name: Forms part of the URL, don't include slash\r\n      * template: template id and configuration value\r\n      * Example: create(\"SubWebName\", SP.ClientContext.get_current().get_rootWeb(), \"My Web Name\", \"CMSPUBLISHING#0\")\r\n      * \r\n      * @remarks\r\n      * For templates See: https://blogs.technet.microsoft.com/praveenh/2010/10/21/sharepoint-templates-and-their-ids/\r\n      */\r\n    public create(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent: boolean = true): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.webHelper.createWeb(name, parentWeb, title, template, useSamePermissionsAsParent);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Check if a web exists\r\n      * Result: boolean\r\n      * url: server relative url\r\n      * Example: .exists(\"/sites/mysubweb\")\r\n      */\r\n    public exists(url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.webHelper.doesWebExist(url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Get and load all webs starting from a web and its children\r\n      * Result: Array<SP.Web>\r\n      * Example: getWebs(SP.ClientContext.get_current().get_rootWeb()))\r\n      */\r\n    public getWebs(fromWeb: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getWebs`, () => {\r\n            return this.webHelper.getWebs(fromWeb);\r\n        });\r\n        \r\n    }\r\n    \r\n}","import { common } from \"../common\"\r\n\r\nexport class PermissionHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(web, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(web.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(list, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(item, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(item.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n}","import { Fluent } from \"./fluent\"\r\nimport { PermissionHelper } from \"./helper/permissionHelper\";\r\n\r\nexport class Permission {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.permissionHelper = new PermissionHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"permission\";\r\n    private permissionHelper = null as PermissionHelper;\r\n    /**\r\n    * Check if the current user has specified Web permission\r\n    * Result: boolean\r\n    * Example: hasWebPermission(SP.PermissionKind.createSSCSite, context.get_web())\r\n    */\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasWebPermission`, () => {\r\n            return this.permissionHelper.hasWebPermission(permission, web);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified List permission\r\n    * Result: boolean\r\n    * Example: hasListPermission(SP.PermissionKind.addListItems, context.get_web().get_lists().getByTitle(\"MyList\"))\r\n    */\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasListPermission`, () => {\r\n            return this.permissionHelper.hasListPermission(permission, list);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified ListItem permission\r\n    * Result: boolean\r\n    * Example: hasItemPermission(SP.PermissionKind.editListItems, context.get_web().get_lists().getByTitle(\"MyList\").getItemById(0))\r\n    */\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasItemPermission`, () => {\r\n            return this.permissionHelper.hasItemPermission(permission, item);\r\n        });\r\n        \r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class ListHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n\r\n    public createList(web: SP.Web, listName: string, templateId: number): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = null as SP.List;\r\n        var info = new SP.ListCreationInformation();\r\n        info.set_title(listName);\r\n        info.set_templateType(templateId);\r\n        var list = web.get_lists().add(info);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public setAlerts(web: SP.Web, listName: string, enabled:boolean): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        (<any>list).set_enableAssignToEmail(enabled); //Not in typescript definitions currently.  //TODO: test \r\n        list.update();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public setListItemProperties(listItem: SP.ListItem, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public exists(web: SP.Web, listName: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var lists = web.get_lists();\r\n        this.context.load(lists);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                for (var i = 0; i < lists.get_count(); i++) {\r\n                    if (lists.getItemAtIndex(i).get_title().toLowerCase() === listName.toLowerCase()) {\r\n                        deferred.resolve(true);\r\n                        return;\r\n                    }\r\n                }\r\n                deferred.resolve(false);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public createListItemWithContentTypeName(web: SP.Web, listName: string, contentTypeName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n        var listContentTypes = list.get_contentTypes();\r\n        clientContext.load(listContentTypes);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var contentTypeId = null;\r\n                for (let i = 0; i < listContentTypes.get_count(); i++) {\r\n                    let contentType = listContentTypes.getItemAtIndex(i) as SP.ContentType;\r\n                    if (contentType.get_name() === contentTypeName) {\r\n                        contentTypeId = contentType.get_id().get_stringValue();\r\n                        break;\r\n                    }\r\n                }\r\n                var listItem = list.addItem(itemCreateInfo);\r\n                if (contentTypeId) {\r\n                    listItem.set_item('ContentTypeId', contentTypeId);\r\n                }\r\n                for (var propertyName in properties) {\r\n                    if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                        listItem.set_item(propertyName, properties[propertyName]);\r\n                    }\r\n                }\r\n                listItem.update();\r\n                clientContext.load(listItem);\r\n                common.executeQuery(clientContext)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve(listItem);\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n\r\n    }\r\n    public createListItem(web: SP.Web, listName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n        var contentTypeId = null;\r\n        var listItem = list.addItem(itemCreateInfo);\r\n        //TODO: validate this works with People, taxonomy and lookup fields.\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        clientContext.load(listItem);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n   \r\n    private loadListItem(listItem: SP.ListItem, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        if (viewFields && viewFields.length) {\r\n            this.context.load(listItem, viewFields as any);\r\n        } else {\r\n            this.context.load(listItem);\r\n        }\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFile(serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkInFile(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkIn(comment, checkInType);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkOutFile(web: SP.Web, serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkOut();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public getList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public deleteList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        list.deleteObject();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        return this.loadListItem(listItem);\r\n    }\r\n    public getListItemById(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        return this.loadListItem(listItem, viewFields);\r\n    }\r\n\r\n    public deleteListItemById(web: SP.Web, listName: string, id: number): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        this.context.load(listItem);\r\n        listItem.deleteObject(); \r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public getListItems(web: SP.Web, listName: string, viewXml: string): JQueryPromise<SP.ListItemCollection> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        if (!viewXml) {\r\n            viewXml = \"<View><Query></Query></Where>\";\r\n        }\r\n        query.set_viewXml(viewXml);\r\n        var listItems = list.getItems(query);\r\n        this.context.load(listItems);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItems);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItemCollection>;\r\n    }\r\n    \r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<SP.ContentType> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        \r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var contentTypes = this.context.get_site().get_rootWeb().get_contentTypes();\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        this.context.load(contentTypes);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let contentType = findContentType(contentTypes, contentTypeName) as SP.ContentType;\r\n                if (!contentType) {\r\n                    common.reject(deferred, `Content Type ${contentTypeName} not found`);\r\n                    return;\r\n                }\r\n                //check if the CT is already associated\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    //already associated\r\n                    deferred.resolve(listCt);\r\n                }\r\n                else {\r\n                    if (!list.get_contentTypesEnabled()) {\r\n                        list.set_contentTypesEnabled(true);//enable custom cts on the list.\r\n                    }\r\n                    var associatedCt = list.get_contentTypes().addExistingContentType(contentType);\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve(associatedCt);\r\n                        });\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ContentType>;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    listCt.deleteObject();\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    deferred.resolve(); //not found, nothing to do.\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var fields = list.get_fields();\r\n        this.context.load(list);\r\n        this.context.load(fields);\r\n        var findField = (collection: SP.FieldCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_internalName().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let field = findField(fields, fieldInternalName) as SP.Field;\r\n                if (field) {\r\n                    field.set_defaultValue(defaultValue);\r\n                    field.update()\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    common.reject(deferred, `Field ${fieldInternalName} not found`);\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class List {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"list\";\r\n    /**\r\n    * Create new list \r\n    * Example: create(context.get_web(), \"My Task List\", 107)\r\n    * templateId - See: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee541191(v%3Doffice.15)#remarks\r\n    */\r\n    public create(web: SP.Web, listName: string, templateId: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createList(web, listName, templateId);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the list exists\r\n    * Result: boolean\r\n    * Example: exists(context.get_web(), \"My List\")\r\n    */\r\n    public exists(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.listHelper.exists(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete a list\r\n    * Result: void\r\n    * Example: delete(context.get_web(), \"My List\")\r\n    */\r\n    public delete(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.delete`, () => {\r\n            return this.listHelper.deleteList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a list\r\n    * Result: SP.List\r\n    * Example: get(context.get_web(), \"My List\")\r\n    */\r\n    public get(web: SP.Web, listName: string): Fluent {\r\n        //TODO: test\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Adds a Content Type to a List.  Resolves the new associated list content type.\r\n    * Result: SP.ContentType\r\n    * Example: addContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.addContentTypeListAssociation`, () => {\r\n            return this.listHelper.addContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Removes a Content Type associated from a list.\r\n    * Result: void\r\n    * Example: removeContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.removeContentTypeListAssociation`, () => {\r\n            return this.listHelper.removeContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Sets a default value on a field in a list\r\n    * Result: void\r\n    * Example: setDefaultValueOnList(context.get_web(), \"My Task List\", \"ClientId\", 123)\r\n    */\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setDefaultValueOnList`, () => {\r\n            return this.listHelper.setDefaultValueOnList(web, listName, fieldInternalName, defaultValue);\r\n        });\r\n        \r\n    }\r\n     /**\r\n    * Enable email alerts on a list \r\n    * Result: void\r\n    * Example: setAlerts(context.get_web(), \"My Task List\", true)\r\n    * Note: will not work for 2010/2013\r\n    */\r\n    public setAlerts(web: SP.Web, listName: string, enabled: boolean): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setAlerts`, () => {\r\n            return this.listHelper.setAlerts(web, listName, enabled);\r\n        });\r\n        \r\n    }\r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class ListItem {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"listItem\";\r\n    /**\r\n    * Update a list item with properties\r\n    * Result: SP.ListItem\r\n    * Example: update(listItem, { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public update(listItem: SP.ListItem, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.update`, () => {\r\n            return this.listHelper.setListItemProperties(listItem, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create a list item, specifying the Content Type\r\n    * Result: SP.ListItem\r\n    * Example: createWithContentType(context.get_web(), \"My list\", \"My Content Type Name\", { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public createWithContentType(web: SP.Web, listName: string, contentTypeName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createWithContentType`, () => {\r\n            return this.listHelper.createListItemWithContentTypeName(web, listName, contentTypeName, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create new list item with optional property values\r\n    * Example: create(context.get_web(), \"MyList\", properties)\r\n    * Note: Properties are an object with Property/Value, where property\r\n    *       is the internal field name.\r\n    *       Eg; var properties = {\r\n                Title: \"My title\",\r\n                PersonOrGroupField: personValue,\r\n                MultiChoiceField: [\"Second\", \"Third\"],\r\n                ChoiceField: \"Second\",\r\n                NumberField: 1234\r\n            };\r\n            For personValue you can pass through the user Id or a SP.UserFieldValue such as:\r\n            var personValue = new SP.FieldUserValue();\r\n            personValue.set_lookupId(_spPageContextInfo.userId);\r\n    */\r\n    public create(web: SP.Web, listName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createListItem(web, listName, properties);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Get the listitem using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: get(context.get_web(), \"MyList\", 1, [\"ID\", \"Title\"])\r\n    */\r\n    public get(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getListItemById(web, listName, id, viewFields);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the listitem for a File using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: getFileListItem(\"/sites/site/documents/mydoc.docx\", [\"ID\", \"Title\", \"FileLeafRef\"])\r\n    */\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getFileListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl, viewFields);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Delete List Item\r\n    * Result: void\r\n    * Example: deleteById(context.get_web(), \"MyList\", 7)\r\n    */\r\n    public deleteById(web: SP.Web, listName: string, id: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteById`, () => {\r\n            return this.listHelper.deleteListItemById(web, listName, id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Execute a query using supplied CAML.  \r\n    * Returns: SP.ListItemCollection\r\n    * Example: query(context.get_web(), \"MyList\", \"<View><Query><Where><In><FieldRef Name='ID' /><Values><Value Type='Number'>1</Value><Value Type='Number'>2</Value></Values></In></View></Query></Where>\")\r\n    */\r\n    public query(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, viewXml);\r\n        });\r\n    }\r\n    /**\r\n    * Get all list items in a list\r\n    * Returns: SP.ListItemCollection\r\n    * Example: getAll(context.get_web(), \"MyList\")\r\n    */\r\n    public getAll(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, \"<View></View>\");\r\n        });\r\n    }\r\n    \r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class File {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"file\";\r\n\r\n    /**\r\n    * Get a file from a document library\r\n    * Result: SP.File\r\n    * Example: get(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public get(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFile(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the list item for the file\r\n    * Result: SP.ListItem\r\n    * Example: getListItem(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public getListItem(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check in a file\r\n    * Result: SP.File\r\n    * Example: checkIn(SP.ClientContext.get_current().get_web(), _spPageContextInfo.webServerRelativeUrl + '/pages/mypage.aspx', \"Checked in by spJsomFluent\", SP.CheckinType.majorCheckIn)\r\n    */\r\n    public checkIn(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.checkInFile`, () => {\r\n            return this.listHelper.checkInFile(web, serverRelativeUrl, comment, checkInType);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check out a file\r\n    * Result: SP.File\r\n    * Example: checkOut(SP.ClientContext.get_current().get_web(), _spPageContextInfo.webServerRelativeUrl + '/pages/mypage.aspx', \"Checked in by spJsomFluent\", SP.CheckinType.majorCheckIn)\r\n    */\r\n    public checkOut(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.checkOutFile`, () => {\r\n            return this.listHelper.checkOutFile(web, serverRelativeUrl);\r\n        });\r\n\r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class UserHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    \r\n    public getUserByEmail(email: string): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().ensureUser(email));\r\n    }\r\n    public getUserById(id: number): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().get_siteUsers().getById(id));\r\n    }\r\n    private loadUser(user: SP.User): JQueryPromise<SP.User> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n    public getCurrentUser(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n        var deferred = $.Deferred();\r\n        var user = this.context.get_web().get_currentUser();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserProfileProperties(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n            var deferred = $.Deferred();\r\n            SP.SOD.executeFunc('userprofile', 'SP.UserProfiles.PeopleManager', () => {\r\n                var clientContext = this.context;\r\n                var currentUser = clientContext.get_web().get_currentUser();\r\n                var peopleManager = new SP.UserProfiles.PeopleManager(clientContext);\r\n                var profile = peopleManager.getMyProperties();\r\n                clientContext.load(currentUser);\r\n                clientContext.load(profile);\r\n                clientContext.executeQueryAsync(\r\n                    (sender, args) => {\r\n                        deferred.resolve(profile.get_userProfileProperties());\r\n                    },\r\n                    (sender, args) => {\r\n                        console.error(args.get_message());\r\n                        deferred.reject(sender, args);\r\n                    }\r\n                );\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserManager(): JQueryPromise<SP.User> {\r\n            var deferred = $.Deferred();\r\n            var peopleManager = new SP.UserProfiles.PeopleManager(this.context);\r\n            var profilePropertyNames = [\"Manager\"];\r\n            var user_email = this.context.get_web().get_currentUser().get_email();\r\n            var userProfilePropertiesForUser = new SP.UserProfiles.UserProfilePropertiesForUser(this.context,\r\n                \"i:0#.f|membership|\" + user_email,\r\n                profilePropertyNames);  //TODO: check for better mechanism to constructure login\r\n            var userProfileProps = peopleManager.getUserProfilePropertiesFor(userProfilePropertiesForUser);\r\n\r\n            this.context.load(userProfilePropertiesForUser);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    if (userProfileProps[0]) {\r\n                        var user = this.context.get_web().ensureUser(userProfileProps[0]);\r\n                        this.context.load(user);\r\n                        common.executeQuery(this.context)\r\n                            .fail((sender, args) => { deferred.reject(sender, args); })\r\n                            .done(() => {\r\n                                deferred.resolve(user);\r\n                            });\r\n                    } else {\r\n                        deferred.resolve(null);\r\n                    }\r\n            })\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n}","import { UserHelper } from \"./helper/userHelper\";\r\nimport { Fluent, Dependency } from \"./fluent\"\r\nimport { common } from \"./common\";\r\n\r\nexport class User {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.userHelper = new UserHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"userProfile\";\r\n    private userHelper = null as UserHelper;\r\n    /**\r\n    * Get User by email or account name\r\n    * Result: SP.User\r\n    * Example: get(\"my@email.address\")\r\n    * Example: get(\"i:0#.f|membership|my@email.address\")\r\n    */\r\n    public get(emailOrAccountName:string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.userHelper.getUserByEmail(emailOrAccountName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a user by their Id\r\n    * Result: SP.User\r\n    * Example: getById(15)\r\n    */\r\n    public getById(id: number): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getById`, () => {\r\n            return this.userHelper.getUserById(id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUser()\r\n    */\r\n    public getCurrentUser(): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUser`, () => {\r\n            return this.userHelper.getCurrentUser();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the profile properties for the current user\r\n    * Result: SP.UserProfiles.PersonProperties\r\n    * Example: getCurrentUserProfileProperties()\r\n    */\r\n    public getCurrentUserProfileProperties(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserProfileProperties`, () => {\r\n            return this.userHelper.getCurrentUserProfileProperties();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the manager for the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUserManager()\r\n    */\r\n    public getCurrentUserManager(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserManager`, () => {\r\n            return this.userHelper.getCurrentUserManager();\r\n        });\r\n        \r\n    }\r\n}","import { common } from \"../common\"\r\nimport { NavigationType } from \"../fluent\";\r\n\r\nexport class NavigationHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public deleteQuicklaunchNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_quickLaunch());\r\n    }\r\n    public deleteTopNavigationNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_topNavigationBar());\r\n    }\r\n    public deleteQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_quickLaunch(), title);\r\n    }\r\n    public deleteTopQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_topNavigationBar(), title);\r\n    }\r\n    \r\n    public setCurrentNavigation(web: SP.Web, navigationType: NavigationType, showSubsites: boolean = true, showPages:boolean = true): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        const siblingsPropertyName = \"__NavigationShowSiblings\";\r\n        const includeTypesPropertyName = \"__CurrentNavigationIncludeTypes\";\r\n        var allProperties = web.get_allProperties();\r\n        this.context.load(web);\r\n        this.context.load(allProperties);\r\n        var setOptions = () => {\r\n            if (showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"3\");\r\n            } else if (showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"2\");\r\n            }\r\n            else if (!showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"1\");\r\n            }\r\n            else if (!showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"0\");\r\n            }\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var nav = new SP.Publishing.Navigation.WebNavigationSettings(this.context, web);\r\n                switch (navigationType) {\r\n                    case NavigationType.Inherit:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.inheritFromParentWeb);\r\n                        break;\r\n                    case NavigationType.Managed:\r\n                        common.reject(deferred, \"Not implemented\");\r\n                        break;\r\n                    case NavigationType.StructuralWithSiblings:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"True\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    case NavigationType.StructuralChildrenOnly:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"False\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    default:\r\n                        common.reject(deferred, \"Unknown Navigation Type\");\r\n                }   \r\n                nav.update(null);\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n\r\n    private deleteNodes(nav: SP.NavigationNodeCollection): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    itemsToDelete.push(enumerator.get_current());\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    private deleteNode(nav: SP.NavigationNodeCollection, title: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    var node = enumerator.get_current();\r\n                    if (node.get_title() === title) {\r\n                        itemsToDelete.push(node);\r\n                    }\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public createQuicklaunchNode(web: SP.Web, title:string, url:string, asLastNode:boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_quickLaunch(), title, url, asLastNode);\r\n    }\r\n    public createTopNavigationNode(web: SP.Web, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_topNavigationBar(), title, url, asLastNode);\r\n    }\r\n    private createNode(nav:SP.NavigationNodeCollection, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        var info = new SP.NavigationNodeCreationInformation();\r\n        info.set_title(title);\r\n        info.set_url(url);\r\n        info.set_asLastNode(asLastNode);\r\n        var node = nav.add(info);\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(node);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.NavigationNode>;\r\n    }\r\n}","import { NavigationHelper } from \"./helper/navigationHelper\";\r\nimport { Fluent, NavigationLocation, NavigationType, Dependency } from \"./fluent\"\r\nexport class Navigation {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.navigationHelper = new NavigationHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private navigationHelper = null as NavigationHelper;\r\n    private readonly _helperName: string = \"navigation\";\r\n\r\n    /**\r\n    * Create new navigation node\r\n    * Result: SP.NavigationNode\r\n    * Example: createNode(context.get_web(), NavigationLocation.Quicklaunch, \"Test Node\", \"/sites/mysite/pages/default.aspx\")\r\n    */\r\n    public createNode(web: SP.Web, location: NavigationLocation, title: string, url: string, asLastNode: boolean = true): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.createQuicklaunchNode(web, title, url, asLastNode);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.createTopNavigationNode(web, title, url, asLastNode);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes for the web\r\n    * Result: void\r\n    * Example: deleteAllNodes(context.get_web(), NavigationLocation.Quicklaunch)\r\n    */\r\n    public deleteAllNodes(web: SP.Web, location: NavigationLocation): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteAllNodes`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNodes(web);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopNavigationNodes(web);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n\r\n\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes that match the supplied title for the web\r\n    * Result: void\r\n    * Example: deleteNode(context.get_web(), NavigationLocation.Quicklaunch, \"My link title\")\r\n    */\r\n    public deleteNode(web: SP.Web, location: NavigationLocation, title:string ): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNode(web, title);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopQuicklaunchNode(web, title);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Set navigation for the web\r\n    * Result: void\r\n    * Example: setCurrentNavigation(context.get_web(), 3, true, true)\r\n    * Note: showSubsites and showPages is only applicable for NavigationType.StructuralChildrenOnly (3)\r\n    */\r\n    public setCurrentNavigation(web: SP.Web, type: NavigationType, showSubsites: boolean = false, showPages:boolean = false): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.setCurrentNavigation`, () => {\r\n            return this.navigationHelper.setCurrentNavigation(web, type, showSubsites, showPages);\r\n        });\r\n        \r\n    }\r\n}","import { common } from \"../common\"\r\nimport * as spData from \"./Client.CamlBuilder\"\r\nexport class PageHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createPublishingPage(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<SP.Publishing.PublishingPage> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        var pageInfo = new SP.Publishing.PublishingPageInformation();\r\n        pageInfo.set_name(name);\r\n        pageInfo.set_pageLayoutListItem(listItem);\r\n        var publishingWeb = SP.Publishing.PublishingWeb.getPublishingWeb(this.context, web);\r\n        this.context.load(publishingWeb);\r\n        var publishingPage = publishingWeb.addPublishingPage(pageInfo);\r\n        this.context.load(publishingPage);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(publishingPage);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.Publishing.PublishingPage>;\r\n    }\r\n    public getPublishingLayout(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public setLayout(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n\r\n        var camlBuilder = new spData.CamlBuilder();\r\n        camlBuilder.addTextClause(spData.CamlOperator.Eq, \"FileLeafRef\", name);\r\n        var list = web.get_lists().getByTitle(\"Pages\");\r\n        var query = new SP.CamlQuery();\r\n        query.set_viewXml(camlBuilder.viewXml);\r\n        var pages = list.getItems(query);\r\n        this.context.load(pages);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                if (pages.get_count() === 0) {\r\n                    deferred.reject(this, { get_message: () => { return \"Page not found\" } });\r\n                }\r\n                var page = pages.getItemAtIndex(0);\r\n                page.set_item(\"PublishingPageLayout\", layoutUrl);\r\n                page.update();\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n\r\n}","import { Fluent, Dependency } from \"./fluent\"\r\nimport { PageHelper } from \"./helper/pageHelper\"\r\n\r\nexport class PublishingPage {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.pageHelper = new PageHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private readonly _helperName: string = \"publishingPage\";\r\n    private pageHelper: PageHelper;\r\n    /**\r\n    * Creates a new publishing page.\r\n    * Result: SP.Publishing.PublishingPage\r\n    * Example: .publishingPage.create(SP.ClientContext.get_current().get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    */\r\n    public create(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.pageHelper.createPublishingPage(web, name, layoutUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Gets a page layout.\r\n    * Result: SP.ListItem\r\n    * Example: .publishingPage.getLayout(_spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    * \r\n    */\r\n    public getLayout(serverRelativeUrl:string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getLayout`, () => {\r\n            return this.pageHelper.getPublishingLayout(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Changes layout for a publishing page.\r\n    * Result: void\r\n    * Example: .publishingPage.setLayout(SP.ClientContext.get_current().get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    */\r\n    public setLayout(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.setLayout`, () => {\r\n            return this.pageHelper.setLayout(web, name, layoutUrl);\r\n        });\r\n    }\r\n}","// spJsom - Fluent\r\nimport { Web } from \"./web\"\r\nimport { Permission } from \"./permission\"\r\nimport { List } from \"./list\"\r\nimport { ListItem } from \"./listitem\"\r\nimport { File } from \"./file\"\r\nimport { User } from \"./user\"\r\nimport { Navigation } from \"./navigation\"\r\nimport { PublishingPage } from \"./publishingpage\"\r\nimport { common } from \"./common\"\r\n\r\nexport class Fluent  {\r\n    public context: SP.ClientContext;\r\n    private commands: Array<FluentCommand> = [];\r\n    private results: Array<ActionResult> = [];\r\n    private resultPromise: JQueryDeferred<any>;\r\n    private onExecuting: any;\r\n    private onExecuted: any;\r\n    private dependencies: Array<Dependency> = [];\r\n    public settings: ISettings = { timeoutMilliseconds: 5000, enableDependencyTimeout: true };\r\n    private totalCommands = 0;\r\n    public withContext(context: SP.ClientContext): Fluent {\r\n        this.context = context;\r\n        return this;\r\n    }\r\n    public withSettings(settings: ISettings): Fluent {\r\n        for (var setting in settings) {\r\n            if (typeof (this.settings[setting]) !== typeof (undefined)) {\r\n                this.settings[setting] = settings[setting];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    public withDependency(dependency: Dependency): Fluent {\r\n        this.registerDependency(dependency);\r\n        return this;\r\n    }\r\n    get promise(): JQueryPromise<any> {\r\n        return this.resultPromise.promise();\r\n    }\r\n    get permission(): Permission {\r\n        return new Permission(this);\r\n    }\r\n    get list(): List {\r\n        return new List(this);\r\n    }\r\n    get listItem(): ListItem {\r\n        return new ListItem(this);\r\n    }\r\n    get file(): File {\r\n        return new File(this);\r\n    }\r\n    get publishingPage(): PublishingPage {\r\n        return new PublishingPage(this);\r\n    }\r\n    get web(): Web {\r\n        return new Web(this);\r\n    }\r\n    get user(): User{\r\n        return new User(this);\r\n    }\r\n    get navigation(): Navigation {\r\n        return new Navigation(this);\r\n    }\r\n\r\n    public execute(): JQueryPromise<Array<ActionResult>> {\r\n        this.resultPromise = $.Deferred();\r\n        //The dependency timeout is fired if it takes too long to load to avoid promise never completing.\r\n        if (this.settings.enableDependencyTimeout) {\r\n            var expiry = setTimeout(() => {\r\n                common.reject(this.resultPromise, \"Timeout waiting for dependencies to load\");\r\n            }, this.settings.timeoutMilliseconds);\r\n        }\r\n        //To track progress\r\n        this.totalCommands = this.getAvailableActionCommandCount();\r\n        this.loadDependencies()\r\n            .done(() => {\r\n                this.continue();\r\n            })\r\n            .always(() => {\r\n                if (this.settings.enableDependencyTimeout) {\r\n                    clearTimeout(expiry);\r\n                }\r\n            });\r\n        return this.resultPromise.promise() as JQueryPromise<Array<ActionResult>>;\r\n    }\r\n    public onActionExecuted(onExecuted: any): Fluent {\r\n        this.onExecuted = onExecuted;\r\n        return this;\r\n    }\r\n    public onActionExecuting(onExecuting: any): Fluent {\r\n        this.onExecuting = onExecuting;\r\n        return this;\r\n    }\r\n    public when(predicate: any) {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(...command.result)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for when\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    //Similar to when, but all previous results are passed into the predicate\r\n    public whenAll(predicate: any) : Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(this.results)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenAll\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenTrue(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not true\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenTrue\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenFalse(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && !command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenFalse\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chainAction(name: string, action: any) : Fluent {\r\n        var command = new ActionCommand();\r\n        command.name = name;\r\n        command.action = action;\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chain(command: ActionCommand): Fluent {\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public static executeQuery(context: SP.ClientContext) {\r\n        return common.executeQuery(context);\r\n    }\r\n    public registerDependency(dependency: Dependency) {\r\n        if (this.dependencies.indexOf(dependency) === -1) {\r\n            this.dependencies.push(dependency);\r\n        }\r\n    }\r\n    private continue() {\r\n        if (!this.context) {\r\n            throw \"context not set, you must call withContext\";\r\n        }\r\n        var command = this.commands.shift();\r\n        if (command && command.action) {\r\n            if (command.constructor === ActionCommand) {\r\n                if (this.onExecuting) {\r\n                    let step = this.totalCommands - (this.getAvailableActionCommandCount());\r\n                    this.onExecuting((command as ActionCommand).name, step, this.totalCommands);\r\n                }\r\n            }\r\n            var promise = command.action() as JQueryPromise<any>;\r\n            promise.done((arg1, arg2, arg3, arg4, arg5, arg6, arg7) => {\r\n                if (command.constructor === ActionCommand) {\r\n                    let results = [];\r\n                    this.storeResult(arg1, results);\r\n                    this.storeResult(arg2, results);\r\n                    this.storeResult(arg3, results);\r\n                    this.storeResult(arg4, results);\r\n                    this.storeResult(arg5, results);\r\n                    this.storeResult(arg6, results);\r\n                    this.storeResult(arg7, results);\r\n                    this.addResult(command as ActionCommand, true, results);\r\n                    if (this.onExecuted) {\r\n                        this.onExecuted((command as ActionCommand).name, true, results);\r\n                    }\r\n                }\r\n                if (this.commands.length) {\r\n                    this.continue();\r\n                }\r\n                else {\r\n                    this.resolveChain();\r\n                }\r\n            })\r\n                .fail((sender, args) => {\r\n                    if (command.constructor === ActionCommand) {\r\n                        let results = [];\r\n                        this.storeResult(sender, results);\r\n                        this.storeResult(args, results);\r\n                        this.addResult(command as ActionCommand, false, results);\r\n                        if (this.onExecuted) {\r\n                            this.onExecuted((command as ActionCommand).name, false, {sender:sender, args:args});\r\n                        }\r\n                        this.failChain(sender, args);\r\n                        return;\r\n                    }\r\n                    this.resolveChain();\r\n                });\r\n        } else {\r\n            this.resolveChain();\r\n        }\r\n    }\r\n    private storeResult(arg: any, results: Array<any>) {\r\n        if (typeof (arg) !== typeof (undefined)) {\r\n            results.push(arg);\r\n        }\r\n    }\r\n    private resolveChain() {\r\n        this.resultPromise.resolve(this.results);\r\n    }\r\n    private failChain(sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        this.resultPromise.reject(sender, args);\r\n    }\r\n    private reject(deferred: JQueryDeferred<any>, sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        deferred.reject(sender, args);\r\n    }\r\n    private addResult(command: ActionCommand, success: boolean, results: Array<any>) {\r\n        var result = new ActionResult();\r\n        result.name = command.name;\r\n        result.success = success;\r\n        result.result = results;\r\n        this.results.push(result);\r\n    }\r\n    private loadDependencies(): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        let spDependencies = [\"SP.js\", \"SP.Runtime.js\"];\r\n        for (let i = 0; i < this.dependencies.length; i++) {\r\n            switch (this.dependencies[i]) {\r\n                case Dependency.UserProfile:\r\n                    (<any>window).LoadSodByKey(\"userprofile\");\r\n                    spDependencies.push(\"userprofile\");\r\n                    break;\r\n                case Dependency.Publishing:\r\n                    SP.SOD.registerSod('SP.Publishing.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.publishing.js'));\r\n                    spDependencies.push(\"SP.Publishing.js\");\r\n                    break;\r\n                case Dependency.Taxonomy:\r\n                    SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));\r\n                    spDependencies.push(\"sp.taxonomy.js\");\r\n                    break;\r\n                default:\r\n                    throw \"Depenency not implemented\";\r\n            }\r\n        }\r\n        SP.SOD.loadMultiple(spDependencies, () => {\r\n            deferred.resolve();\r\n        });\r\n        return deferred.promise();\r\n    }\r\n    private peekLastCommand() {\r\n        if (this.commands.length) {\r\n            return this.commands[this.commands.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private peekLastResult() {\r\n        if (this.results.length) {\r\n            return this.results[this.results.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private getAvailableActionCommandCount(): number {\r\n        var count = 0;\r\n        for (var i = 0; i < this.commands.length; i++) {\r\n            if (this.commands[i].constructor === ActionCommand) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\nexport enum NavigationLocation {\r\n    TopNavigation,\r\n    Quicklaunch\r\n}\r\nexport enum NavigationType {\r\n    Inherit,\r\n    Managed,\r\n    StructuralWithSiblings,\r\n    StructuralChildrenOnly\r\n}\r\nexport enum Dependency {\r\n    Publishing,\r\n    UserProfile,\r\n    Taxonomy\r\n}\r\nexport interface ISettings {\r\n    timeoutMilliseconds?: number,\r\n    enableDependencyTimeout?: boolean\r\n}\r\nexport class FluentCommand {\r\n    action: any;\r\n}\r\nexport class ActionCommand extends FluentCommand {\r\n    name: string;\r\n}\r\nexport class ActionResult {\r\n    name: string;\r\n    success: boolean;\r\n    result: Array<any>;\r\n}\r\nexport interface KeyValuePair {\r\n    key: string;\r\n    value: any;\r\n}\r\nexport class WhenCommand extends FluentCommand { }\r\n\r\n","import * as spJsom from \"../src/fluent\"\r\nvar examples = {\r\n    run: () => {\r\n        examples.getUser();\r\n        //examples.createListAndItem();\r\n        //examples.provisionWebWithProgress();\r\n        //examples.query();\r\n        //examples.provisionWebWithProgress();\r\n        //examples.getListItem();\r\n        //examples.createListAndItem();\r\n        //examples.createListItem();\r\n        //examples.setWelcomePage();\r\n        //examples.createPublishingPage();\r\n        //examples.customActionCommands();\r\n        //examples.customActionCommandsChain();\r\n    },\r\n    deleteListItem: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.deleteById(context.get_web(), \"MyList\", 7)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    query: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.query(context.get_web(), \"MyList\", \"<View><Query><Where><In><FieldRef Name='ID' /><Values><Value Type='Number'>1</Value><Value Type='Number'>2</Value></Values></In></View></Query></Where>\")\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    provisionWebWithProgress: () => {\r\n        var subSitePath = \"testsite1\";\r\n        var url = (`${_spPageContextInfo.webServerRelativeUrl}/${subSitePath}`).replace(\"//\", \"/\");\r\n        var context = SP.ClientContext.get_current();\r\n        var newSiteContext = new SP.ClientContext(url);  //Web doesn't exist yet, but we can create a context for it\r\n\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .onActionExecuting((actionName, current, total) => {\r\n                let progress = Math.ceil(100 * current / total);\r\n                console.log(`Executing: ${actionName}, we are ${progress}% through.`);\r\n            })\r\n            .onActionExecuted((actionName, success, results: Array<any>) => {\r\n                console.log(`Executed: ${actionName}:${success}`);\r\n                if (!success) {\r\n                    console.error(actionName, results);\r\n                }\r\n            })\r\n            .permission.hasWebPermission(SP.PermissionKind.createSSCSite, context.get_web())\r\n            .whenTrue() //stops executing the chain if the user doesn't have permission\r\n            .web.exists(url)\r\n            .whenFalse() //stops executing the chain if the web already exists\r\n            .web.create(subSitePath, context.get_web(), \"Test Site\", \"CMSPUBLISHING#0\") //Create a sub site\r\n            .withContext(newSiteContext) //Switch to the new site context\r\n            .publishingPage.create(newSiteContext.get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n            .web.setWelcomePage(newSiteContext.get_web(), \"pages/home.aspx\")\r\n            .execute().done((results: Array<spJsom.ActionResult>) => {\r\n                var lastAction = results[results.length - 1];\r\n                console.log(\"The last action was \" + lastAction.name + \" and success was: \" + lastAction.success, lastAction.result);\r\n                if (lastAction.name === \"web.exists\" && lastAction.result[0] === true) {\r\n                    console.warn(\"The web already exists.\");\r\n                }\r\n            })\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            });\r\n    },\r\n    getListItem: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.get(context.get_web(), \"MyList\", 7, [\"ID\", \"Title\"])\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    createListAndItem: () => {\r\n        var listName = \"MyList1\";\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .permission.hasWebPermission(SP.PermissionKind.manageLists, context.get_web())\r\n            .whenTrue() \r\n            .list.exists(context.get_web(), listName)\r\n            .whenFalse() \r\n            .list.create(context.get_web(), listName, 100)\r\n            .listItem.create(context.get_web(), listName, { Title: \"Created by spJsom\" })\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    createListItem: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var personValue = new SP.FieldUserValue();\r\n        personValue.set_lookupId(_spPageContextInfo.userId);\r\n        var properties = {\r\n            Title: \"My title\",\r\n            PersonOrGroupField: personValue,\r\n            MultiChoiceField: [\"Second\", \"Third\"],\r\n            ChoiceField: \"Second\",\r\n            NumberField: 12.45\r\n        };\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .listItem.create(context.get_web(), \"SomeList\", properties)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    deleteList: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var listName = \"MyList1\";\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .list.exists(context.get_web(), listName)\r\n            .whenTrue()  //stops here if the list doesn't exist\r\n            .list.delete(context.get_web(), listName)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    getUser: () => {\r\n        //Shows various ways to get a user and the profile properties.\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .user.getById(_spPageContextInfo.userId)\r\n            .user.get(_spPageContextInfo.userEmail)\r\n            .user.getCurrentUser()\r\n            .user.getCurrentUserProfileProperties()\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n                console.log(`Your name is: ${results[0].result[0].get_title()}`);\r\n                console.log(\"Your profile properties\", results[3].result[0]);\r\n            });\r\n    },\r\n    setWelcomePage: () => {\r\n        new spJsom.Fluent()\r\n            .withContext(SP.ClientContext.get_current())\r\n            .web.setWelcomePage(SP.ClientContext.get_current().get_web(), 'pages/MyPage.aspx')\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    createPublishingPage: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var webUrl = _spPageContextInfo.webServerRelativeUrl;\r\n        var filename = \"MyPage.aspx\";\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .publishingPage.create(context.get_web(), filename, `${webUrl}/_catalogs/masterpage/blankwebpartpage.aspx`)\r\n            .file.checkIn(context.get_web(), `${webUrl}/pages/${filename}`, \"Checked in by spJsomFluent\", SP.CheckinType.majorCheckIn)\r\n            .web.setWelcomePage(context.get_web(), `pages/${filename}`)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    customActionCommands: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .chainAction(\"myCustomCommand\", () => {\r\n                var deferred = $.Deferred();\r\n                context.get_web().set_title(\"My new title\");\r\n                context.get_web().update();\r\n                spJsom.Fluent.executeQuery(context)\r\n                    .fail((sender, args) => {\r\n                        deferred.reject(sender, args);\r\n                    })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n                return deferred.promise();\r\n            })\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    },\r\n    customActionCommandsChain: () => {\r\n        var context = SP.ClientContext.get_current();\r\n        var customAction = new spJsom.ActionCommand();\r\n        customAction.name = \"myCustomCommand\";\r\n        customAction.action = () => {\r\n            var deferred = $.Deferred();\r\n            context.get_web().set_title(\"My alternate title\");\r\n            context.get_web().update();\r\n            spJsom.Fluent.executeQuery(context)\r\n                .fail((sender, args) => {\r\n                    deferred.reject(sender, args);\r\n                })\r\n                .done(() => {\r\n                    deferred.resolve();\r\n                });\r\n            return deferred.promise();\r\n        };\r\n\r\n        new spJsom.Fluent()\r\n            .withContext(context)\r\n            .chain(customAction)\r\n            .execute()\r\n            .fail((sender, args) => {\r\n                console.error(args.get_message());\r\n            })\r\n            .done((results) => {\r\n                console.log(results);\r\n            });\r\n    }\r\n};\r\nSP.SOD.loadMultiple([\"SP.js\"], () => {\r\n    console.log(\"Executing examples\");\r\n    examples.run();\r\n});\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://spJsom/webpack/bootstrap","webpack://spJsom/./src/common.ts","webpack://spJsom/./src/helper/webHelper.ts","webpack://spJsom/./src/web.ts","webpack://spJsom/./src/helper/permissionHelper.ts","webpack://spJsom/./src/permission.ts","webpack://spJsom/./src/helper/listHelper.ts","webpack://spJsom/./src/list.ts","webpack://spJsom/./src/listitem.ts","webpack://spJsom/./src/file.ts","webpack://spJsom/./src/helper/userHelper.ts","webpack://spJsom/./src/user.ts","webpack://spJsom/./src/helper/navigationHelper.ts","webpack://spJsom/./src/navigation.ts","webpack://spJsom/./src/helper/pageHelper.ts","webpack://spJsom/./src/publishingpage.ts","webpack://spJsom/./src/fluent.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","common","reject","deferred","reason","this","get_message","notImplementedPromise","$","Deferred","promise","FilterArray","items","predicate","output","length","push","executeQuery","clientContext","executeQueryAsync","sender","args","resolve","webHelper_WebHelper","WebHelper","context","setWelcomePage","web","url","rootFolder","get_rootFolder","load","set_welcomePage","update","fail","done","createWeb","parentWeb","title","template","useSamePermissionsAsParent","info","SP","WebCreationInformation","set_url","set_title","set_webTemplate","set_useSamePermissionsAsParentSite","newWeb","get_webs","add","doesWebExist","getAllWebs","get_site","get_rootWeb","toLowerCase","get_serverRelativeUrl","get_url","getWebs","fromWeb","_this","webs","promises","get_count","subWeb","getItemAtIndex","when","apply","web_Web","Web","fluent","_fluent","_helperName","webHelper","chainAction","exists","permissionHelper_PermissionHelper","PermissionHelper","hasWebPermission","permission","get_effectiveBasePermissions","has","hasListPermission","list","hasItemPermission","item","permission_Permission","Permission","permissionHelper","listHelper_ListHelper","ListHelper","createList","listName","templateId","ListCreationInformation","set_templateType","get_lists","setAlerts","enabled","getByTitle","set_enableAssignToEmail","setListItemProperties","listItem","properties","propertyName","set_item","lists","get_title","createListItemWithContentTypeName","contentTypeName","itemCreateInfo","ListItemCreationInformation","listContentTypes","get_contentTypes","contentTypeId","contentType","get_name","get_id","get_stringValue","addItem","createListItem","loadListItem","viewFields","getFile","serverRelativeUrl","file","getFileByServerRelativeUrl","checkInFile","comment","checkInType","checkIn","getList","deleteList","deleteObject","getFileListItem","get_listItemAllFields","getListItemById","id","getItemById","deleteListItemById","getListItems","viewXml","query","CamlQuery","set_viewXml","listItems","getItems","addContentTypeListAssociation","listCts","contentTypes","findContentType","collection","listCt","get_contentTypesEnabled","set_contentTypesEnabled","associatedCt","addExistingContentType","removeContentTypeListAssociation","setDefaultValueOnList","fieldInternalName","defaultValue","fields","get_fields","field","get_internalName","findField","set_defaultValue","list_List","List","listHelper","delete","listitem_ListItem","ListItem","createWithContentType","deleteById","getAll","file_File","File","getListItem","userHelper_UserHelper","UserHelper","getUserByEmail","email","loadUser","get_web","ensureUser","getUserById","get_siteUsers","getById","user","console","error","getCurrentUser","get_currentUser","getCurrentUserProfileProperties","SOD","executeFunc","currentUser","profile","UserProfiles","PeopleManager","getMyProperties","get_userProfileProperties","getCurrentUserManager","peopleManager","user_email","get_email","userProfilePropertiesForUser","UserProfilePropertiesForUser","userProfileProps","getUserProfilePropertiesFor","user_User","User","userHelper","emailOrAccountName","registerDependency","Dependency","UserProfile","navigationHelper_NavigationHelper","NavigationHelper","deleteQuicklaunchNodes","deleteNodes","get_navigation","get_quickLaunch","deleteTopNavigationNodes","get_topNavigationBar","deleteQuicklaunchNode","deleteNode","deleteTopQuicklaunchNode","setCurrentNavigation","navigationType","showSubsites","showPages","allProperties","get_allProperties","setOptions","nav","Publishing","Navigation","WebNavigationSettings","NavigationType","Inherit","get_currentNavigation","set_source","StandardNavigationSource","inheritFromParentWeb","Managed","StructuralWithSiblings","portalProvider","StructuralChildrenOnly","enumerator","getEnumerator","itemsToDelete","moveNext","get_current","node","createQuicklaunchNode","asLastNode","createNode","createTopNavigationNode","NavigationNodeCreationInformation","set_asLastNode","navigation_Navigation","navigationHelper","location","NavigationLocation","Quicklaunch","TopNavigation","deleteAllNodes","type","pageHelper_PageHelper","PageHelper","createPublishingPage","layoutUrl","pageInfo","PublishingPageInformation","set_name","set_pageLayoutListItem","publishingWeb","PublishingWeb","getPublishingWeb","publishingPage","addPublishingPage","getPublishingLayout","publishingpage_PublishingPage","PublishingPage","pageHelper","getLayout","fluent_Fluent","Fluent","commands","results","dependencies","settings","timeoutMilliseconds","enableDependencyTimeout","totalCommands","withContext","withSettings","setting","withDependency","dependency","resultPromise","execute","expiry","setTimeout","getAvailableActionCommandCount","loadDependencies","continue","always","clearTimeout","onActionExecuted","onExecuted","onActionExecuting","onExecuting","peekLastCommand","constructor","ActionCommand","command","WhenCommand","action","peekLastResult","success","result","failChain","whenAll","whenTrue","whenFalse","chain","indexOf","shift","step","arg1","arg2","arg3","arg4","arg5","arg6","arg7","storeResult","addResult","resolveChain","arg","ActionResult","spDependencies","window","LoadSodByKey","registerSod","Utilities","Utility","getLayoutsPageUrl","Taxonomy","loadMultiple","count","FluentCommand","_super","__extends"],"mappings":"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","file":"spJsomFluent.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nexport class common {\r\n    public static reject(deferred: JQueryDeferred<any>, reason:string) {\r\n        deferred.reject(this, { get_message: function () { return reason; } } );\r\n    }\r\n    public static notImplementedPromise() : JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        common.reject(deferred, \"Not Implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public static executeQuery = (clientContext: SP.ClientContext) => {\r\n        var deferred = $.Deferred();\r\n        clientContext.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(sender, args);\r\n            },\r\n            (sender, args) => {\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise();\r\n    };\r\n    public static FilterArray<T>(items: Array<T>, predicate: any): Array<T> {\r\n        let output = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i], i)) {\r\n                output.push(items[i]);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public setWelcomePage(web: SP.Web, url: string): JQueryPromise<SP.Folder> {\r\n            var deferred = $.Deferred();\r\n            var rootFolder = web.get_rootFolder();\r\n            this.context.load(web);\r\n            this.context.load(rootFolder);\r\n            rootFolder.set_welcomePage(url);\r\n            rootFolder.update();\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(rootFolder);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Folder>;\r\n    }\r\n    public createWeb(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent:boolean = true): JQueryPromise<SP.Web> {\r\n            var deferred = $.Deferred();\r\n            var info = new SP.WebCreationInformation();\r\n            info.set_url(name);\r\n            info.set_title(title);\r\n            info.set_webTemplate(template);\r\n            info.set_useSamePermissionsAsParentSite(useSamePermissionsAsParent);\r\n            var newWeb = parentWeb.get_webs().add(info);\r\n            this.context.load(newWeb);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(newWeb);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Web>;\r\n    }\r\n    public doesWebExist(url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, this.context.get_site().get_rootWeb(), output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    for (var i = 0; i < output.length; i++) {\r\n                        if (url.toLowerCase() === output[i].get_serverRelativeUrl() || url.toLowerCase() === output[i].get_url()) {\r\n                            deferred.resolve(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                    deferred.resolve(false);\r\n                });\r\n            return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public getWebs(fromWeb: SP.Web): JQueryPromise<Array<SP.Web>> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, fromWeb, output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(output);\r\n                });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n    private getAllWebs(context: SP.ClientContext, web: SP.Web, output: Array<SP.Web>): JQueryPromise<Array<SP.Web>> {\r\n        var deferred = $.Deferred();\r\n        var webs = web.get_webs();\r\n        context.load(webs);\r\n        common.executeQuery(context)\r\n            .fail((sender, args) => {\r\n                deferred.reject(sender, args);\r\n            })\r\n            .done(() => {\r\n                var promises = [];\r\n                for (var i = 0; i < webs.get_count(); i++) {\r\n                    var subWeb = webs.getItemAtIndex(i);\r\n                    output.push(subWeb);\r\n                    promises.push(this.getAllWebs(context, subWeb, output));\r\n                }\r\n                if (promises.length) {\r\n                    $.when.apply($, promises)\r\n                        .fail((sender, args) => {\r\n                            deferred.reject(sender, args);\r\n                        })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                } else {\r\n                    deferred.resolve();\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n\r\n}","import { WebHelper } from \"./helper/webHelper\";\r\nimport { Fluent } from \"./fluent\"\r\n\r\nexport class Web {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.webHelper = new WebHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"web\";\r\n    private webHelper = null as WebHelper;\r\n    /**\r\n      * Set the web welcome page.  The url should be relative to the root folder of the web. \r\n      * Result: SP.Folder\r\n      * Example: setWelcomePage(context.get_web(), \"pages/default.aspx\")\r\n      */\r\n    public setWelcomePage(web: SP.Web, url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.setWelcomePage`, () => {\r\n            return this.webHelper.setWelcomePage(web, url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Create a new sub web.\r\n      * Result: SP.Web\r\n      * name: Forms part of the URL, don't include slash\r\n      * template: template id and configuration value\r\n      * Example: create(\"SubWebName\", SP.ClientContext.get_current().get_rootWeb(), \"My Web Name\", \"CMSPUBLISHING#0\")\r\n      * \r\n      * @remarks\r\n      * For templates See: https://blogs.technet.microsoft.com/praveenh/2010/10/21/sharepoint-templates-and-their-ids/\r\n      */\r\n    public create(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent: boolean = true): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.webHelper.createWeb(name, parentWeb, title, template, useSamePermissionsAsParent);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Check if a web exists\r\n      * Result: boolean\r\n      * url: server relative url\r\n      * Example: .exists(\"/sites/mysubweb\")\r\n      */\r\n    public exists(url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.webHelper.doesWebExist(url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Get and load all webs starting from a web and its children\r\n      * Result: Array<SP.Web>\r\n      * Example: getWebs(SP.ClientContext.get_current().get_rootWeb()))\r\n      */\r\n    public getWebs(fromWeb: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getWebs`, () => {\r\n            return this.webHelper.getWebs(fromWeb);\r\n        });\r\n        \r\n    }\r\n    \r\n}","import { common } from \"../common\"\r\n\r\nexport class PermissionHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(web, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(web.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(list, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(item, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(item.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n}","import { Fluent } from \"./fluent\"\r\nimport { PermissionHelper } from \"./helper/permissionHelper\";\r\n\r\nexport class Permission {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.permissionHelper = new PermissionHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"permission\";\r\n    private permissionHelper = null as PermissionHelper;\r\n    /**\r\n    * Check if the current user has specified Web permission\r\n    * Result: boolean\r\n    * Example: hasWebPermission(SP.PermissionKind.createSSCSite, context.get_web())\r\n    */\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasWebPermission`, () => {\r\n            return this.permissionHelper.hasWebPermission(permission, web);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified List permission\r\n    * Result: boolean\r\n    * Example: hasListPermission(SP.PermissionKind.addListItems, context.get_web().get_lists().getByTitle(\"MyList\"))\r\n    */\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasListPermission`, () => {\r\n            return this.permissionHelper.hasListPermission(permission, list);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified ListItem permission\r\n    * Result: boolean\r\n    * Example: hasItemPermission(SP.PermissionKind.editListItems, context.get_web().get_lists().getByTitle(\"MyList\").getItemById(0))\r\n    */\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasItemPermission`, () => {\r\n            return this.permissionHelper.hasItemPermission(permission, item);\r\n        });\r\n        \r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class ListHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n\r\n    public createList(web: SP.Web, listName: string, templateId: number): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = null as SP.List;\r\n        var info = new SP.ListCreationInformation();\r\n        info.set_title(listName);\r\n        info.set_templateType(templateId);\r\n        var list = web.get_lists().add(info);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public setAlerts(web: SP.Web, listName: string, enabled:boolean): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        (<any>list).set_enableAssignToEmail(enabled); //Not in typescript definitions currently.  //TODO: test \r\n        list.update();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public setListItemProperties(listItem: SP.ListItem, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public exists(web: SP.Web, listName: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var lists = web.get_lists();\r\n        this.context.load(lists);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                for (var i = 0; i < lists.get_count(); i++) {\r\n                    if (lists.getItemAtIndex(i).get_title().toLowerCase() === listName.toLowerCase()) {\r\n                        deferred.resolve(true);\r\n                        return;\r\n                    }\r\n                }\r\n                deferred.resolve(false);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public createListItemWithContentTypeName(web: SP.Web, listName: string, contentTypeName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n        var listContentTypes = list.get_contentTypes();\r\n        clientContext.load(listContentTypes);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var contentTypeId = null;\r\n                for (let i = 0; i < listContentTypes.get_count(); i++) {\r\n                    let contentType = listContentTypes.getItemAtIndex(i) as SP.ContentType;\r\n                    if (contentType.get_name() === contentTypeName) {\r\n                        contentTypeId = contentType.get_id().get_stringValue();\r\n                        break;\r\n                    }\r\n                }\r\n                var listItem = list.addItem(itemCreateInfo);\r\n                if (contentTypeId) {\r\n                    listItem.set_item('ContentTypeId', contentTypeId);\r\n                }\r\n                for (var propertyName in properties) {\r\n                    if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                        listItem.set_item(propertyName, properties[propertyName]);\r\n                    }\r\n                }\r\n                listItem.update();\r\n                clientContext.load(listItem);\r\n                common.executeQuery(clientContext)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve(listItem);\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n\r\n    }\r\n    public createListItem(web: SP.Web, listName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n        var contentTypeId = null;\r\n        var listItem = list.addItem(itemCreateInfo);\r\n        //TODO: validate this works with People, taxonomy and lookup fields.\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        clientContext.load(listItem);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n   \r\n    private loadListItem(listItem: SP.ListItem, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        if (viewFields && viewFields.length) {\r\n            this.context.load(listItem, viewFields as any);\r\n        } else {\r\n            this.context.load(listItem);\r\n        }\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFile(serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkInFile(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkIn(comment, checkInType);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public getList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public deleteList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        list.deleteObject();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        return this.loadListItem(listItem);\r\n    }\r\n    public getListItemById(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        return this.loadListItem(listItem, viewFields);\r\n    }\r\n\r\n    public deleteListItemById(web: SP.Web, listName: string, id: number): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        this.context.load(listItem);\r\n        listItem.deleteObject(); \r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public getListItems(web: SP.Web, listName: string, viewXml: string): JQueryPromise<SP.ListItemCollection> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        if (!viewXml) {\r\n            viewXml = \"<View><Query></Query></Where>\";\r\n        }\r\n        query.set_viewXml(viewXml);\r\n        var listItems = list.getItems(query);\r\n        this.context.load(listItems);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItems);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItemCollection>;\r\n    }\r\n    \r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<SP.ContentType> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        \r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var contentTypes = this.context.get_site().get_rootWeb().get_contentTypes();\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        this.context.load(contentTypes);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let contentType = findContentType(contentTypes, contentTypeName) as SP.ContentType;\r\n                if (!contentType) {\r\n                    common.reject(deferred, `Content Type ${contentTypeName} not found`);\r\n                    return;\r\n                }\r\n                //check if the CT is already associated\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    //already associated\r\n                    deferred.resolve(listCt);\r\n                }\r\n                else {\r\n                    if (!list.get_contentTypesEnabled()) {\r\n                        list.set_contentTypesEnabled(true);//enable custom cts on the list.\r\n                    }\r\n                    var associatedCt = list.get_contentTypes().addExistingContentType(contentType);\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve(associatedCt);\r\n                        });\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ContentType>;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    listCt.deleteObject();\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    deferred.resolve(); //not found, nothing to do.\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var fields = list.get_fields();\r\n        this.context.load(list);\r\n        this.context.load(fields);\r\n        var findField = (collection: SP.FieldCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_internalName().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let field = findField(fields, fieldInternalName) as SP.Field;\r\n                if (field) {\r\n                    field.set_defaultValue(defaultValue);\r\n                    field.update()\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    common.reject(deferred, `Field ${fieldInternalName} not found`);\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class List {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"list\";\r\n    /**\r\n    * Create new list \r\n    * Example: create(context.get_web(), \"My Task List\", 107)\r\n    * templateId - See: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee541191(v%3Doffice.15)#remarks\r\n    */\r\n    public create(web: SP.Web, listName: string, templateId: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createList(web, listName, templateId);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the list exists\r\n    * Result: boolean\r\n    * Example: exists(context.get_web(), \"My List\")\r\n    */\r\n    public exists(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.listHelper.exists(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete a list\r\n    * Result: void\r\n    * Example: delete(context.get_web(), \"My List\")\r\n    */\r\n    public delete(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.delete`, () => {\r\n            return this.listHelper.deleteList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a list\r\n    * Result: SP.List\r\n    * Example: get(context.get_web(), \"My List\")\r\n    */\r\n    public get(web: SP.Web, listName: string): Fluent {\r\n        //TODO: test\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Adds a Content Type to a List.  Resolves the new associated list content type.\r\n    * Result: SP.ContentType\r\n    * Example: addContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.addContentTypeListAssociation`, () => {\r\n            return this.listHelper.addContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Removes a Content Type associated from a list.\r\n    * Result: void\r\n    * Example: removeContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.removeContentTypeListAssociation`, () => {\r\n            return this.listHelper.removeContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Sets a default value on a field in a list\r\n    * Result: void\r\n    * Example: setDefaultValueOnList(context.get_web(), \"My Task List\", \"ClientId\", 123)\r\n    */\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setDefaultValueOnList`, () => {\r\n            return this.listHelper.setDefaultValueOnList(web, listName, fieldInternalName, defaultValue);\r\n        });\r\n        \r\n    }\r\n     /**\r\n    * Enable email alerts on a list \r\n    * Result: void\r\n    * Example: setAlerts(context.get_web(), \"My Task List\", true)\r\n    * Note: will not work for 2010/2013\r\n    */\r\n    public setAlerts(web: SP.Web, listName: string, enabled: boolean): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setAlerts`, () => {\r\n            return this.listHelper.setAlerts(web, listName, enabled);\r\n        });\r\n        \r\n    }\r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class ListItem {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"listItem\";\r\n    /**\r\n    * Update a list item with properties\r\n    * Result: SP.ListItem\r\n    * Example: update(listItem, { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public update(listItem: SP.ListItem, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.update`, () => {\r\n            return this.listHelper.setListItemProperties(listItem, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create a list item, specifying the Content Type\r\n    * Result: SP.ListItem\r\n    * Example: createWithContentType(context.get_web(), \"My list\", \"My Content Type Name\", { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public createWithContentType(web: SP.Web, listName: string, contentTypeName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createWithContentType`, () => {\r\n            return this.listHelper.createListItemWithContentTypeName(web, listName, contentTypeName, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create new list item with optional property values\r\n    * Example: create(context.get_web(), \"MyList\", properties)\r\n    * Note: Properties are an object with Property/Value, where property\r\n    *       is the internal field name.\r\n    *       Eg; var properties = {\r\n                Title: \"My title\",\r\n                PersonOrGroupField: personValue,\r\n                MultiChoiceField: [\"Second\", \"Third\"],\r\n                ChoiceField: \"Second\",\r\n                NumberField: 1234\r\n            };\r\n            For personValue you can pass through the user Id or a SP.UserFieldValue such as:\r\n            var personValue = new SP.FieldUserValue();\r\n            personValue.set_lookupId(_spPageContextInfo.userId);\r\n    */\r\n    public create(web: SP.Web, listName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createListItem(web, listName, properties);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Get the listitem using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: get(context.get_web(), \"MyList\", 1, [\"ID\", \"Title\"])\r\n    */\r\n    public get(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getListItemById(web, listName, id, viewFields);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the listitem for a File using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: getFileListItem(\"/sites/site/documents/mydoc.docx\", [\"ID\", \"Title\", \"FileLeafRef\"])\r\n    */\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getFileListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl, viewFields);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Delete List Item\r\n    * Result: void\r\n    * Example: deleteById(context.get_web(), \"MyList\", 7)\r\n    */\r\n    public deleteById(web: SP.Web, listName: string, id: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteById`, () => {\r\n            return this.listHelper.deleteListItemById(web, listName, id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Execute a query using supplied CAML.  \r\n    * Returns: SP.ListItemCollection\r\n    * Example: query(context.get_web(), \"MyList\", \"<View><Query><Where><In><FieldRef Name='ID' /><Values><Value Type='Number'>1</Value><Value Type='Number'>2</Value></Values></In></View></Query></Where>\")\r\n    */\r\n    public query(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, viewXml);\r\n        });\r\n    }\r\n    /**\r\n    * Get all list items in a list\r\n    * Returns: SP.ListItemCollection\r\n    * Example: getAll(context.get_web(), \"MyList\")\r\n    */\r\n    public getAll(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, \"<View></View>\");\r\n        });\r\n    }\r\n    \r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class File {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"file\";\r\n\r\n    /**\r\n    * Get a file from a document library\r\n    * Result: SP.File\r\n    * Example: get(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public get(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFile(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the list item for the file\r\n    * Result: SP.ListItem\r\n    * Example: getListItem(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public getListItem(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check in a file\r\n    * Result: SP.File\r\n    * Example: checkIn(SP.ClientContext.get_current().get_web(), _spPageContextInfo.webServerRelativeUrl + '/pages/mypage.aspx', \"Checked in by spJsomFluent\", SP.CheckinType.majorCheckIn)\r\n    */\r\n    public checkIn(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.checkInFile`, () => {\r\n            return this.listHelper.checkInFile(web, serverRelativeUrl, comment, checkInType);\r\n        });\r\n        \r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class UserHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    \r\n    public getUserByEmail(email: string): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().ensureUser(email));\r\n    }\r\n    public getUserById(id: number): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().get_siteUsers().getById(id));\r\n    }\r\n    private loadUser(user: SP.User): JQueryPromise<SP.User> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n    public getCurrentUser(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n        var deferred = $.Deferred();\r\n        var user = this.context.get_web().get_currentUser();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserProfileProperties(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n            var deferred = $.Deferred();\r\n            SP.SOD.executeFunc('userprofile', 'SP.UserProfiles.PeopleManager', () => {\r\n                var clientContext = this.context;\r\n                var currentUser = clientContext.get_web().get_currentUser();\r\n                var peopleManager = new SP.UserProfiles.PeopleManager(clientContext);\r\n                var profile = peopleManager.getMyProperties();\r\n                clientContext.load(currentUser);\r\n                clientContext.load(profile);\r\n                clientContext.executeQueryAsync(\r\n                    (sender, args) => {\r\n                        deferred.resolve(profile.get_userProfileProperties());\r\n                    },\r\n                    (sender, args) => {\r\n                        console.error(args.get_message());\r\n                        deferred.reject(sender, args);\r\n                    }\r\n                );\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserManager(): JQueryPromise<SP.User> {\r\n            var deferred = $.Deferred();\r\n            var peopleManager = new SP.UserProfiles.PeopleManager(this.context);\r\n            var profilePropertyNames = [\"Manager\"];\r\n            var user_email = this.context.get_web().get_currentUser().get_email();\r\n            var userProfilePropertiesForUser = new SP.UserProfiles.UserProfilePropertiesForUser(this.context,\r\n                \"i:0#.f|membership|\" + user_email,\r\n                profilePropertyNames);  //TODO: check for better mechanism to constructure login\r\n            var userProfileProps = peopleManager.getUserProfilePropertiesFor(userProfilePropertiesForUser);\r\n\r\n            this.context.load(userProfilePropertiesForUser);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    if (userProfileProps[0]) {\r\n                        var user = this.context.get_web().ensureUser(userProfileProps[0]);\r\n                        this.context.load(user);\r\n                        common.executeQuery(this.context)\r\n                            .fail((sender, args) => { deferred.reject(sender, args); })\r\n                            .done(() => {\r\n                                deferred.resolve(user);\r\n                            });\r\n                    } else {\r\n                        deferred.resolve(null);\r\n                    }\r\n            })\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n}","import { UserHelper } from \"./helper/userHelper\";\r\nimport { Fluent, Dependency } from \"./fluent\"\r\nimport { common } from \"./common\";\r\n\r\nexport class User {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.userHelper = new UserHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"userProfile\";\r\n    private userHelper = null as UserHelper;\r\n    /**\r\n    * Get User by email or account name\r\n    * Result: SP.User\r\n    * Example: get(\"my@email.address\")\r\n    * Example: get(\"i:0#.f|membership|my@email.address\")\r\n    */\r\n    public get(emailOrAccountName:string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.userHelper.getUserByEmail(emailOrAccountName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a user by their Id\r\n    * Result: SP.User\r\n    * Example: getById(15)\r\n    */\r\n    public getById(id: number): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getById`, () => {\r\n            return this.userHelper.getUserById(id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUser()\r\n    */\r\n    public getCurrentUser(): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUser`, () => {\r\n            return this.userHelper.getCurrentUser();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the profile properties for the current user\r\n    * Result: SP.UserProfiles.PersonProperties\r\n    * Example: getCurrentUserProfileProperties()\r\n    */\r\n    public getCurrentUserProfileProperties(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserProfileProperties`, () => {\r\n            return this.userHelper.getCurrentUserProfileProperties();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the manager for the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUserManager()\r\n    */\r\n    public getCurrentUserManager(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserManager`, () => {\r\n            return this.userHelper.getCurrentUserManager();\r\n        });\r\n        \r\n    }\r\n}","import { common } from \"../common\"\r\nimport { NavigationType } from \"../fluent\";\r\n\r\nexport class NavigationHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public deleteQuicklaunchNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_quickLaunch());\r\n    }\r\n    public deleteTopNavigationNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_topNavigationBar());\r\n    }\r\n    public deleteQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_quickLaunch(), title);\r\n    }\r\n    public deleteTopQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_topNavigationBar(), title);\r\n    }\r\n    \r\n    public setCurrentNavigation(web: SP.Web, navigationType: NavigationType, showSubsites: boolean = true, showPages:boolean = true): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        const siblingsPropertyName = \"__NavigationShowSiblings\";\r\n        const includeTypesPropertyName = \"__CurrentNavigationIncludeTypes\";\r\n        var allProperties = web.get_allProperties();\r\n        this.context.load(web);\r\n        this.context.load(allProperties);\r\n        var setOptions = () => {\r\n            if (showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"3\");\r\n            } else if (showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"2\");\r\n            }\r\n            else if (!showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"1\");\r\n            }\r\n            else if (!showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"0\");\r\n            }\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var nav = new SP.Publishing.Navigation.WebNavigationSettings(this.context, web);\r\n                switch (navigationType) {\r\n                    case NavigationType.Inherit:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.inheritFromParentWeb);\r\n                        break;\r\n                    case NavigationType.Managed:\r\n                        common.reject(deferred, \"Not implemented\");\r\n                        break;\r\n                    case NavigationType.StructuralWithSiblings:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"True\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    case NavigationType.StructuralChildrenOnly:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"False\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    default:\r\n                        common.reject(deferred, \"Unknown Navigation Type\");\r\n                }   \r\n                nav.update(null);\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n\r\n    private deleteNodes(nav: SP.NavigationNodeCollection): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    itemsToDelete.push(enumerator.get_current());\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    private deleteNode(nav: SP.NavigationNodeCollection, title: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    var node = enumerator.get_current();\r\n                    if (node.get_title() === title) {\r\n                        itemsToDelete.push(node);\r\n                    }\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public createQuicklaunchNode(web: SP.Web, title:string, url:string, asLastNode:boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_quickLaunch(), title, url, asLastNode);\r\n    }\r\n    public createTopNavigationNode(web: SP.Web, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_topNavigationBar(), title, url, asLastNode);\r\n    }\r\n    private createNode(nav:SP.NavigationNodeCollection, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        var info = new SP.NavigationNodeCreationInformation();\r\n        info.set_title(title);\r\n        info.set_url(url);\r\n        info.set_asLastNode(asLastNode);\r\n        var node = nav.add(info);\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(node);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.NavigationNode>;\r\n    }\r\n}","import { NavigationHelper } from \"./helper/navigationHelper\";\r\nimport { Fluent, NavigationLocation, NavigationType, Dependency } from \"./fluent\"\r\nexport class Navigation {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.navigationHelper = new NavigationHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private navigationHelper = null as NavigationHelper;\r\n    private readonly _helperName: string = \"navigation\";\r\n\r\n    /**\r\n    * Create new navigation node\r\n    * Result: SP.NavigationNode\r\n    * Example: createNode(context.get_web(), NavigationLocation.Quicklaunch, \"Test Node\", \"/sites/mysite/pages/default.aspx\")\r\n    */\r\n    public createNode(web: SP.Web, location: NavigationLocation, title: string, url: string, asLastNode: boolean = true): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.createQuicklaunchNode(web, title, url, asLastNode);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.createTopNavigationNode(web, title, url, asLastNode);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes for the web\r\n    * Result: void\r\n    * Example: deleteAllNodes(context.get_web(), NavigationLocation.Quicklaunch)\r\n    */\r\n    public deleteAllNodes(web: SP.Web, location: NavigationLocation): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteAllNodes`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNodes(web);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopNavigationNodes(web);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n\r\n\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes that match the supplied title for the web\r\n    * Result: void\r\n    * Example: deleteNode(context.get_web(), NavigationLocation.Quicklaunch, \"My link title\")\r\n    */\r\n    public deleteNode(web: SP.Web, location: NavigationLocation, title:string ): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNode(web, title);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopQuicklaunchNode(web, title);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Set navigation for the web\r\n    * Result: void\r\n    * Example: setCurrentNavigation(context.get_web(), 3, true, true)\r\n    * Note: showSubsites and showPages is only applicable for NavigationType.StructuralChildrenOnly (3)\r\n    */\r\n    public setCurrentNavigation(web: SP.Web, type: NavigationType, showSubsites: boolean = false, showPages:boolean = false): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.setCurrentNavigation`, () => {\r\n            return this.navigationHelper.setCurrentNavigation(web, type, showSubsites, showPages);\r\n        });\r\n        \r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class PageHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createPublishingPage(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<SP.Publishing.PublishingPage> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        var pageInfo = new SP.Publishing.PublishingPageInformation();\r\n        pageInfo.set_name(name);\r\n        pageInfo.set_pageLayoutListItem(listItem);\r\n        var publishingWeb = SP.Publishing.PublishingWeb.getPublishingWeb(this.context, web);\r\n        this.context.load(publishingWeb);\r\n        var publishingPage = publishingWeb.addPublishingPage(pageInfo);\r\n        this.context.load(publishingPage);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(publishingPage);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.Publishing.PublishingPage>;\r\n    }\r\n    public getPublishingLayout(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    \r\n\r\n}","import { Fluent, Dependency } from \"./fluent\"\r\nimport { PageHelper } from \"./helper/pageHelper\"\r\n\r\nexport class PublishingPage {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.pageHelper = new PageHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private readonly _helperName: string = \"publishingPage\";\r\n    private pageHelper: PageHelper;\r\n    /**\r\n    * Creates a new publishing page.\r\n    * Result: SP.Publishing.PublishingPage\r\n    * Example: .publishingPage.create(SP.ClientContext.get_current().get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    */\r\n    public create(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.pageHelper.createPublishingPage(web, name, layoutUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Gets a page layout.\r\n    * Result: SP.ListItem\r\n    * Example: .publishingPage.getLayout(_spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    * \r\n    */\r\n    public getLayout(serverRelativeUrl:string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getLayout`, () => {\r\n            return this.pageHelper.getPublishingLayout(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n\r\n}","// spJsom - Fluent\r\nimport { Web } from \"./web\"\r\nimport { Permission } from \"./permission\"\r\nimport { List } from \"./list\"\r\nimport { ListItem } from \"./listitem\"\r\nimport { File } from \"./file\"\r\nimport { User } from \"./user\"\r\nimport { Navigation } from \"./navigation\"\r\nimport { PublishingPage } from \"./publishingpage\"\r\nimport { common } from \"./common\"\r\n\r\nexport class Fluent  {\r\n    public context: SP.ClientContext;\r\n    private commands: Array<FluentCommand> = [];\r\n    private results: Array<ActionResult> = [];\r\n    private resultPromise: JQueryDeferred<any>;\r\n    private onExecuting: any;\r\n    private onExecuted: any;\r\n    private dependencies: Array<Dependency> = [];\r\n    public settings: ISettings = { timeoutMilliseconds: 5000, enableDependencyTimeout: true };\r\n    private totalCommands = 0;\r\n    public withContext(context: SP.ClientContext): Fluent {\r\n        this.context = context;\r\n        return this;\r\n    }\r\n    public withSettings(settings: ISettings): Fluent {\r\n        for (var setting in settings) {\r\n            if (typeof (this.settings[setting]) !== typeof (undefined)) {\r\n                this.settings[setting] = settings[setting];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    public withDependency(dependency: Dependency): Fluent {\r\n        this.registerDependency(dependency);\r\n        return this;\r\n    }\r\n    get promise(): JQueryPromise<any> {\r\n        return this.resultPromise.promise();\r\n    }\r\n    get permission(): Permission {\r\n        return new Permission(this);\r\n    }\r\n    get list(): List {\r\n        return new List(this);\r\n    }\r\n    get listItem(): ListItem {\r\n        return new ListItem(this);\r\n    }\r\n    get file(): File {\r\n        return new File(this);\r\n    }\r\n    get publishingPage(): PublishingPage {\r\n        return new PublishingPage(this);\r\n    }\r\n    get web(): Web {\r\n        return new Web(this);\r\n    }\r\n    get user(): User{\r\n        return new User(this);\r\n    }\r\n    get navigation(): Navigation {\r\n        return new Navigation(this);\r\n    }\r\n\r\n    public execute(): JQueryPromise<Array<ActionResult>> {\r\n        this.resultPromise = $.Deferred();\r\n        //The dependency timeout is fired if it takes too long to load to avoid promise never completing.\r\n        if (this.settings.enableDependencyTimeout) {\r\n            var expiry = setTimeout(() => {\r\n                common.reject(this.resultPromise, \"Timeout waiting for dependencies to load\");\r\n            }, this.settings.timeoutMilliseconds);\r\n        }\r\n        //To track progress\r\n        this.totalCommands = this.getAvailableActionCommandCount();\r\n        this.loadDependencies()\r\n            .done(() => {\r\n                this.continue();\r\n            })\r\n            .always(() => {\r\n                if (this.settings.enableDependencyTimeout) {\r\n                    clearTimeout(expiry);\r\n                }\r\n            });\r\n        return this.resultPromise.promise() as JQueryPromise<Array<ActionResult>>;\r\n    }\r\n    public onActionExecuted(onExecuted: any): Fluent {\r\n        this.onExecuted = onExecuted;\r\n        return this;\r\n    }\r\n    public onActionExecuting(onExecuting: any): Fluent {\r\n        this.onExecuting = onExecuting;\r\n        return this;\r\n    }\r\n    public when(predicate: any) {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(...command.result)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for when\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    //Similar to when, but all previous results are passed into the predicate\r\n    public whenAll(predicate: any) : Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(this.results)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenAll\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenTrue(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not true\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenTrue\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenFalse(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && !command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenFalse\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chainAction(name: string, action: any) : Fluent {\r\n        var command = new ActionCommand();\r\n        command.name = name;\r\n        command.action = action;\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chain(command: ActionCommand): Fluent {\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public static executeQuery(context: SP.ClientContext) {\r\n        return common.executeQuery(context);\r\n    }\r\n    public registerDependency(dependency: Dependency) {\r\n        if (this.dependencies.indexOf(dependency) === -1) {\r\n            this.dependencies.push(dependency);\r\n        }\r\n    }\r\n    private continue() {\r\n        if (!this.context) {\r\n            throw \"context not set, you must call withContext\";\r\n        }\r\n        var command = this.commands.shift();\r\n        if (command && command.action) {\r\n            if (command.constructor === ActionCommand) {\r\n                if (this.onExecuting) {\r\n                    let step = this.totalCommands - (this.getAvailableActionCommandCount());\r\n                    this.onExecuting((command as ActionCommand).name, step, this.totalCommands);\r\n                }\r\n            }\r\n            var promise = command.action() as JQueryPromise<any>;\r\n            promise.done((arg1, arg2, arg3, arg4, arg5, arg6, arg7) => {\r\n                if (command.constructor === ActionCommand) {\r\n                    let results = [];\r\n                    this.storeResult(arg1, results);\r\n                    this.storeResult(arg2, results);\r\n                    this.storeResult(arg3, results);\r\n                    this.storeResult(arg4, results);\r\n                    this.storeResult(arg5, results);\r\n                    this.storeResult(arg6, results);\r\n                    this.storeResult(arg7, results);\r\n                    this.addResult(command as ActionCommand, true, results);\r\n                    if (this.onExecuted) {\r\n                        this.onExecuted((command as ActionCommand).name, true, results);\r\n                    }\r\n                }\r\n                if (this.commands.length) {\r\n                    this.continue();\r\n                }\r\n                else {\r\n                    this.resolveChain();\r\n                }\r\n            })\r\n                .fail((sender, args) => {\r\n                    if (command.constructor === ActionCommand) {\r\n                        let results = [];\r\n                        this.storeResult(sender, results);\r\n                        this.storeResult(args, results);\r\n                        this.addResult(command as ActionCommand, false, results);\r\n                        if (this.onExecuted) {\r\n                            this.onExecuted((command as ActionCommand).name, false, {sender:sender, args:args});\r\n                        }\r\n                        this.failChain(sender, args);\r\n                        return;\r\n                    }\r\n                    this.resolveChain();\r\n                });\r\n        } else {\r\n            this.resolveChain();\r\n        }\r\n    }\r\n    private storeResult(arg: any, results: Array<any>) {\r\n        if (typeof (arg) !== typeof (undefined)) {\r\n            results.push(arg);\r\n        }\r\n    }\r\n    private resolveChain() {\r\n        this.resultPromise.resolve(this.results);\r\n    }\r\n    private failChain(sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        this.resultPromise.reject(sender, args);\r\n    }\r\n    private reject(deferred: JQueryDeferred<any>, sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        deferred.reject(sender, args);\r\n    }\r\n    private addResult(command: ActionCommand, success: boolean, results: Array<any>) {\r\n        var result = new ActionResult();\r\n        result.name = command.name;\r\n        result.success = success;\r\n        result.result = results;\r\n        this.results.push(result);\r\n    }\r\n    private loadDependencies(): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        let spDependencies = [\"SP.js\", \"SP.Runtime.js\"];\r\n        for (let i = 0; i < this.dependencies.length; i++) {\r\n            switch (this.dependencies[i]) {\r\n                case Dependency.UserProfile:\r\n                    (<any>window).LoadSodByKey(\"userprofile\");\r\n                    spDependencies.push(\"userprofile\");\r\n                    break;\r\n                case Dependency.Publishing:\r\n                    SP.SOD.registerSod('SP.Publishing.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.publishing.js'));\r\n                    spDependencies.push(\"SP.Publishing.js\");\r\n                    break;\r\n                case Dependency.Taxonomy:\r\n                    SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));\r\n                    spDependencies.push(\"sp.taxonomy.js\");\r\n                    break;\r\n                default:\r\n                    throw \"Depenency not implemented\";\r\n            }\r\n        }\r\n        SP.SOD.loadMultiple(spDependencies, () => {\r\n            deferred.resolve();\r\n        });\r\n        return deferred.promise();\r\n    }\r\n    private peekLastCommand() {\r\n        if (this.commands.length) {\r\n            return this.commands[this.commands.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private peekLastResult() {\r\n        if (this.results.length) {\r\n            return this.results[this.results.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private getAvailableActionCommandCount(): number {\r\n        var count = 0;\r\n        for (var i = 0; i < this.commands.length; i++) {\r\n            if (this.commands[i].constructor === ActionCommand) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\nexport enum NavigationLocation {\r\n    TopNavigation,\r\n    Quicklaunch\r\n}\r\nexport enum NavigationType {\r\n    Inherit,\r\n    Managed,\r\n    StructuralWithSiblings,\r\n    StructuralChildrenOnly\r\n}\r\nexport enum Dependency {\r\n    Publishing,\r\n    UserProfile,\r\n    Taxonomy\r\n}\r\nexport interface ISettings {\r\n    timeoutMilliseconds?: number,\r\n    enableDependencyTimeout?: boolean\r\n}\r\nexport class FluentCommand {\r\n    action: any;\r\n}\r\nexport class ActionCommand extends FluentCommand {\r\n    name: string;\r\n}\r\nexport class ActionResult {\r\n    name: string;\r\n    success: boolean;\r\n    result: Array<any>;\r\n}\r\nexport interface KeyValuePair {\r\n    key: string;\r\n    value: any;\r\n}\r\nexport class WhenCommand extends FluentCommand { }\r\n\r\n"],"sourceRoot":""}
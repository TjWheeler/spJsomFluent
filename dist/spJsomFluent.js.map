{"version":3,"sources":["webpack://spJsom/webpack/bootstrap","webpack://spJsom/./src/common.ts","webpack://spJsom/./src/core.ts","webpack://spJsom/./src/helper/webHelper.ts","webpack://spJsom/./src/web.ts","webpack://spJsom/./src/helper/permissionHelper.ts","webpack://spJsom/./src/permission.ts","webpack://spJsom/./src/helper/listHelper.ts","webpack://spJsom/./src/list.ts","webpack://spJsom/./src/listitem.ts","webpack://spJsom/./src/file.ts","webpack://spJsom/./src/helper/pageHelper.ts","webpack://spJsom/./src/publishingpage.ts","webpack://spJsom/./src/fluent.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Dependency","src_common","common","reject","deferred","reason","this","get_message","notImplementedPromise","$","Deferred","promise","FilterArray","items","predicate","output","length","push","executeQuery","clientContext","executeQueryAsync","sender","args","resolve","WebHelper","context","setWelcomePage","web","url","rootFolder","get_rootFolder","load","set_welcomePage","update","fail","done","createWeb","parentWeb","title","template","info","SP","WebCreationInformation","set_url","set_title","set_webTemplate","newWeb","get_webs","add","doesWebExist","getAllWebs","get_site","get_rootWeb","toLowerCase","get_serverRelativeUrl","get_url","getWebs","fromWeb","_this","webs","promises","get_count","subWeb","getItemAtIndex","when","apply","Web","fluent","_fluent","_helperName","webHelper","chainAction","exists","PermissionHelper","hasWebPermission","permission","get_effectiveBasePermissions","has","hasListPermission","list","hasItemPermission","item","Permission","permissionHelper","ListHelper","createList","listName","setListItemProperties","listItem","properties","propertyName","set_item","createListItemWithContentTypeName","contentTypeName","get_lists","getByTitle","itemCreateInfo","ListItemCreationInformation","listContentTypes","get_contentTypes","contentTypeId","contentType","get_name","get_id","get_stringValue","addItem","createListItem","getFileListItem","serverRelativeUrl","getFileByServerRelativeUrl","get_listItemAllFields","getFile","file","checkInFile","comment","checkInType","checkIn","getList","getListItemById","id","getItemById","deleteListItemById","deleteObject","getListItems","viewXml","query","CamlQuery","set_viewXml","listItems","getItems","getListItemCount","addContentTypeListAssociation","removeContentTypeListAssociation","setDefaultValueOnList","fieldInternalName","defaultValue","List","listHelper","delete","ListItem","createWithContentType","deleteById","count","File","FluentCommand","ActionCommand","_super","__extends","ActionResult","WhenCommand","createPublishingPage","layoutUrl","pageInfo","Publishing","PublishingPageInformation","set_name","set_pageLayoutListItem","publishingWeb","PublishingWeb","getPublishingWeb","publishingPage","addPublishingPage","getPublishingLayout","PublishingPage","pageHelper","registerDependency","getLayout","__webpack_exports__","fluent_Fluent","Fluent","commands","results","dependencies","settings","timeoutMilliseconds","enableDependencyTimeout","withContext","withSettings","setting","resultPromise","src_permission","src_list","listitem","src_file","publishingpage","src_web","execute","expiry","setTimeout","loadDependencies","continue","always","clearTimeout","onActionExecuted","onExecuted","onActionExecuting","onExecuting","peekLastCommand","constructor","command","action","peekLastResult","success","result","failChain","whenAll","whenTrue","whenFalse","dependency","indexOf","shift","arg1","arg2","arg3","arg4","arg5","arg6","arg7","storeResult","addResult","resolveChain","arg","spDependencies","UserProfile","window","LoadSodByKey","SOD","registerSod","Utilities","Utility","getLayoutsPageUrl","Taxonomy","loadMultiple"],"mappings":"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","file":"spJsomFluent.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/// <reference path=\"../typings/@types/all.ts\" />\r\n\r\nexport default class common {\r\n    public static reject(deferred: JQueryDeferred<any>, reason:string) {\r\n        deferred.reject(this, { get_message: function () { return reason; } } );\r\n    }\r\n    public static notImplementedPromise() : JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        common.reject(deferred, \"Not Implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public static executeQuery = (clientContext: SP.ClientContext) => {\r\n        var deferred = $.Deferred();\r\n        clientContext.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(sender, args);\r\n            },\r\n            (sender, args) => {\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise();\r\n    };\r\n    public static FilterArray<T>(items: Array<T>, predicate: any): Array<T> {\r\n        let output = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i], i)) {\r\n                output.push(items[i]);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}","/// <reference path=\"../typings/@types/all.ts\" />\r\n\r\nexport class FluentCommand {\r\n    action: any;\r\n}\r\nexport class ActionCommand extends FluentCommand {\r\n    name: string;\r\n}\r\nexport class ActionResult {\r\n    name: string;\r\n    success: boolean;\r\n    result: Array<any>;\r\n}\r\nexport interface KeyValuePair {\r\n    key: string;\r\n    value: any;\r\n}\r\nexport class WhenCommand extends FluentCommand { }\r\nexport enum Dependency {\r\n    Publishing,\r\n    UserProfile,\r\n    Taxonomy\r\n}\r\n//export interface IFluentInternal extends IFluent {\r\n//    chainAction(name: string, action: any);\r\n//    registerDependency(dependency: Dependency);\r\n//}\r\n//export interface IFluent {\r\n//    context: SP.ClientContext;\r\n//    withContext(context: SP.ClientContext): IFluent;\r\n//    withSettings(settings: ISettings): IFluent;\r\n//    settings: ISettings;\r\n//    promise: JQueryPromise<any>;\r\n//    execute(): JQueryPromise<Array<ActionResult>>;\r\n//    onActionExecuted(onExecuted: any): IFluent;\r\n//    onActionExecuting(onExecuting: any): IFluent;\r\n//    when(predicate: any);\r\n//    whenAll(predicate: any);\r\n//    whenTrue(): IFluent;\r\n//    whenFalse(): IFluent;\r\n//}\r\nexport interface ISettings {\r\n    timeoutMilliseconds?: number,\r\n    enableDependencyTimeout?: boolean\r\n}","import common from \"../common\"\r\n\r\nexport default class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public setWelcomePage(web: SP.Web, url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var rootFolder = web.get_rootFolder();\r\n            this.context.load(web);\r\n            this.context.load(rootFolder);\r\n            rootFolder.set_welcomePage(url);\r\n            rootFolder.update();\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(rootFolder);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    public createWeb(name: string, parentWeb: SP.Web, title: string, template: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var info = new SP.WebCreationInformation();\r\n            info.set_url(name);\r\n            info.set_title(title);\r\n            info.set_webTemplate(template);\r\n            var newWeb = parentWeb.get_webs().add(info);\r\n            this.context.load(newWeb);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(newWeb);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    public doesWebExist(url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, this.context.get_site().get_rootWeb(), output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    for (var i = 0; i < output.length; i++) {\r\n                        if (url.toLowerCase() === output[i].get_serverRelativeUrl() || url.toLowerCase() === output[i].get_url()) {\r\n                            deferred.resolve(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                    deferred.resolve(false);\r\n                });\r\n            return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public getWebs(fromWeb: SP.Web): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, fromWeb, output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(output);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    private getAllWebs(context: SP.ClientContext, web: SP.Web, output: Array<SP.Web>): JQueryPromise<Array<SP.Web>> {\r\n        var deferred = $.Deferred();\r\n        var webs = web.get_webs();\r\n        context.load(webs);\r\n        common.executeQuery(context)\r\n            .fail((sender, args) => {\r\n                deferred.reject(sender, args);\r\n            })\r\n            .done(() => {\r\n                var promises = [];\r\n                for (var i = 0; i < webs.get_count(); i++) {\r\n                    var subWeb = webs.getItemAtIndex(i);\r\n                    output.push(subWeb);\r\n                    promises.push(this.getAllWebs(context, subWeb, output));\r\n                }\r\n                if (promises.length) {\r\n                    $.when.apply($, promises)\r\n                        .fail((sender, args) => {\r\n                            deferred.reject(sender, args);\r\n                        })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                } else {\r\n                    deferred.resolve();\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n\r\n}","/// <reference path=\"../typings/@types/all.ts\" />\r\nimport WebHelper from \"./helper/webHelper\";\r\nimport { Fluent } from \"./fluent\"\r\n\r\nexport default class Web {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.webHelper = new WebHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"web\";\r\n    private webHelper = null as WebHelper;\r\n    /**\r\n      * Set the web welcome page.  The url should be relative to the root folder of the web. \r\n      * Example: setWelcomePage(context.get_web(), \"pages/default.aspx\")\r\n      */\r\n    public setWelcomePage(web: SP.Web, url: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.setWelcomePage`, () => {\r\n            return this.webHelper.setWelcomePage(web, url);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Create a new sub web.\r\n      * name: Forms part of the URL, don't include slash\r\n      * template: template id and configuration value\r\n      * Example: create(\"SubWebName\", SP.ClientContext.get_current().get_rootWeb(), \"My Web Name\", \"CMSPUBLISHING#0\")\r\n      * \r\n      * @remarks\r\n      * For templates See: https://blogs.technet.microsoft.com/praveenh/2010/10/21/sharepoint-templates-and-their-ids/\r\n      */\r\n    public create(name: string, parentWeb: SP.Web, title: string, template: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.webHelper.createWeb(name, parentWeb, title, template);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Check if a web exists\r\n      * url: server relative url\r\n      * Example: .exists(\"/sites/mysubweb\")\r\n      */\r\n    public exists(url: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.webHelper.doesWebExist(url);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Get and load all webs starting from a web\r\n      * Example: getWebs(SP.ClientContext.get_current().get_rootWeb()))\r\n      */\r\n    public getWebs(fromWeb: SP.Web): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.getWebs`, () => {\r\n            return this.webHelper.getWebs(fromWeb);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    \r\n}","import common from \"../common\"\r\n\r\nexport default class PermissionHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(web, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(web.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(list, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(list.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(item, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(item.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n}","import { Fluent } from \"./fluent\"\r\nimport PermissionHelper from \"./helper/permissionHelper\";\r\n\r\nexport default class Permission {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.permissionHelper = new PermissionHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"permission\";\r\n    private permissionHelper = null as PermissionHelper;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasWebPermission`, () => {\r\n            return this.permissionHelper.hasWebPermission(permission, web);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasSitePermission`, () => {\r\n            return this.permissionHelper.hasListPermission(permission, list);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasItemPermission`, () => {\r\n            return this.permissionHelper.hasItemPermission(permission, item);\r\n        });\r\n        return this._fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class ListHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createList(web: SP.Web, listName: string, template: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = null as SP.List;\r\n        //TODO:\r\n        common.reject(deferred, \"Not implemented\");\r\n        deferred.resolve(list);\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public setListItemProperties(listItem: SP.ListItem, properties: any):  JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public createListItemWithContentTypeName(web: SP.Web, listName: string, contentTypeName: string, properties: any):  JQueryPromise<SP.ListItem> {\r\n            var deferred = $.Deferred();\r\n            var clientContext = this.context;\r\n            var list = web.get_lists().getByTitle(listName) as SP.List;\r\n            var itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n            var listContentTypes = list.get_contentTypes();\r\n            clientContext.load(listContentTypes);\r\n            common.executeQuery(clientContext)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    var contentTypeId = null;\r\n                    for (let i = 0; i < listContentTypes.get_count(); i++) {\r\n                        let contentType = listContentTypes.getItemAtIndex(i) as SP.ContentType;\r\n                        if (contentType.get_name() === contentTypeName) {\r\n                            contentTypeId = contentType.get_id().get_stringValue();\r\n                            break;\r\n                        }\r\n                    }\r\n                    var listItem = list.addItem(itemCreateInfo);\r\n                    if (contentTypeId) {\r\n                        listItem.set_item('ContentTypeId', contentTypeId);\r\n                    }\r\n                    for (var propertyName in properties) {\r\n                        if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                            listItem.set_item(propertyName, properties[propertyName]);\r\n                        }\r\n                    }\r\n                    listItem.update();\r\n                    clientContext.load(listItem);\r\n                    common.executeQuery(clientContext)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve(listItem);\r\n                        });\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n        \r\n    }\r\n    public createListItem(web: SP.Web, listName: string, properties: any):  JQueryPromise<SP.ListItem> {\r\n            var deferred = $.Deferred();\r\n            var clientContext = this.context;\r\n            var list = web.get_lists().getByTitle(listName) as SP.List;\r\n            var itemCreateInfo = new SP.ListItemCreationInformation();\r\n            var contentTypeId = null;\r\n            var listItem = list.addItem(itemCreateInfo);\r\n            //TODO: validate this works with People, taxonomy and lookup fields.\r\n            for (var propertyName in properties) {\r\n                if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                    listItem.set_item(propertyName, properties[propertyName]);\r\n                }\r\n            }\r\n            listItem.update();\r\n            clientContext.load(listItem);\r\n            common.executeQuery(clientContext)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(listItem);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFileListItem(serverRelativeUrl:string) : JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFile(serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkInFile(web:SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkIn(comment, checkInType);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public getList(web: SP.Web, listName: string):  JQueryPromise<SP.List> {\r\n        //TODO: test\r\n            var deferred = $.Deferred();\r\n            var list = web.get_lists().getByTitle(listName);\r\n            this.context.load(list);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(list);\r\n                });\r\n            return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public getListItemById(web: SP.Web, listName: string, id: number):  JQueryPromise<SP.ListItem> {\r\n        //TODO: test\r\n            var deferred = $.Deferred();\r\n            var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n            this.context.load(listItem);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(listItem);\r\n                });\r\n            return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n\r\n    public deleteListItemById(web: SP.Web, listName: string, id: number):  JQueryPromise<any> {\r\n        //TODO: test\r\n            var deferred = $.Deferred();\r\n            var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n            this.context.load(listItem);\r\n            listItem.deleteObject(); //TODO: verify this works before executeQuery\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve();\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    public getListItems(web: SP.Web, listName: string, viewXml: string):  JQueryPromise<SP.ListItemCollection> {\r\n        //TODO: test\r\n            var deferred = $.Deferred();\r\n            var list = web.get_lists().getByTitle(listName);\r\n            var query = new SP.CamlQuery();\r\n            query.set_viewXml(viewXml);\r\n            var listItems = list.getItems(query);\r\n            this.context.load(listItems);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(listItems);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.ListItemCollection>;\r\n    }\r\n    public getListItemCount(web: SP.Web, listName: string, viewXml: string):  JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            //TODO:\r\n            common.reject(deferred, \"Not implemented\");\r\n            return deferred.promise();\r\n    }\r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string):  JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            //TODO:\r\n            common.reject(deferred, \"Not implemented\");\r\n            return deferred.promise();\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string):  JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            //TODO:\r\n            common.reject(deferred, \"Not implemented\");\r\n            return deferred.promise();\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any):  JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            //TODO:\r\n            common.reject(deferred, \"Not implemented\");\r\n            return deferred.promise();\r\n    }\r\n}","import common from \"./common\"\r\nimport ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class List {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"list\";\r\n    public create(web: SP.Web, listName: string, template: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createList(web, listName, template);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public delete(web: SP.Web, listName: string, template: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.delete`, () => {\r\n            return common.notImplementedPromise();\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public get(web: SP.Web, listName: string): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getList(web, listName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.addContentTypeListAssociation`, () => {\r\n            return this.listHelper.addContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.removeContentTypeListAssociation`, () => {\r\n            return this.listHelper.removeContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.setDefaultValueOnList`, () => {\r\n            return this.listHelper.setDefaultValueOnList(web, listName, fieldInternalName, defaultValue);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class ListItem {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"listItem\";\r\n    public update(listItem: SP.ListItem, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.update`, () => {\r\n            return this.listHelper.setListItemProperties(listItem, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public createWithContentType(web: SP.Web, listName: string, contentTypeName: string, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.createWithContentType`, () => {\r\n            return this.listHelper.createListItemWithContentTypeName(web, listName, contentTypeName, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public create(web: SP.Web, listName: string, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createListItem(web, listName, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public getListItemById(web: SP.Web, listName: string, id: number): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.getListItemById`, () => {\r\n            return this.listHelper.getListItemById(web, listName, id);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getFileListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public deleteById(web: SP.Web, listName: string, id: number): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.deleteById`, () => {\r\n            return this.listHelper.deleteListItemById(web, listName, id);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public query(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, viewXml);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public count(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.count`, () => {\r\n            return this.listHelper.getListItemCount(web, listName, viewXml);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class File {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"file\";\r\n\r\n    public getFile(serverRelativeUrl: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getFile`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public checkInFile(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.checkInFile`, () => {\r\n            return this.listHelper.checkInFile(web, serverRelativeUrl, comment, checkInType);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createPublishingPage(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        var pageInfo = new SP.Publishing.PublishingPageInformation();\r\n        pageInfo.set_name(name);\r\n        pageInfo.set_pageLayoutListItem(listItem);\r\n        var publishingWeb = SP.Publishing.PublishingWeb.getPublishingWeb(this.context, web);\r\n        this.context.load(publishingWeb);\r\n        var publishingPage = publishingWeb.addPublishingPage(pageInfo);\r\n        this.context.load(publishingPage);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(publishingPage);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getPublishingLayout(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    \r\n\r\n}","import * as core from \"./core\"\r\nimport { Fluent } from \"./fluent\"\r\nimport PageHelper from \"./helper/pageHelper\"\r\n\r\nexport default class PublishingPage {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.pageHelper = new PageHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private readonly _helperName: string = \"publishingPage\";\r\n    private pageHelper: PageHelper;\r\n    public create(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(core.Dependency.Publishing);\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.pageHelper.createPublishingPage(web, name, layoutUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public getLayout(serverRelativeUrl:string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getLayout`, () => {\r\n            return this.pageHelper.getPublishingLayout(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n\r\n}","// spJsom - Fluent\r\n/// <reference path=\"../typings/@types/all.ts\" />\r\nimport Web from \"./web\"\r\nimport Permission from \"./permission\"\r\nimport List from \"./list\"\r\nimport ListItem from \"./listitem\"\r\nimport File from \"./file\"\r\nimport User from \"./web\"\r\nimport PublishingPage from \"./publishingpage\"\r\nimport * as core from \"./core\"\r\nimport common from \"./common\"\r\n\r\n\r\nexport class Fluent  {\r\n    public context: SP.ClientContext;\r\n    private commands: Array<core.FluentCommand> = [];\r\n    private results: Array<core.ActionResult> = [];\r\n    private resultPromise: JQueryDeferred<any>;\r\n    private onExecuting: any;\r\n    private onExecuted: any;\r\n    private dependencies: Array<core.Dependency> = [];\r\n    public settings: core.ISettings = { timeoutMilliseconds: 5000, enableDependencyTimeout: true };\r\n    withContext(context: SP.ClientContext): Fluent {\r\n        this.context = context;\r\n        return this;\r\n    }\r\n    withSettings(settings: core.ISettings): Fluent {\r\n        for (var setting in settings) {\r\n            if (typeof (this.settings[setting]) !== typeof (undefined)) {\r\n                this.settings[setting] = settings[setting];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    get promise(): JQueryPromise<any> {\r\n        return this.resultPromise.promise();\r\n    }\r\n    get permission(): Permission {\r\n        return new Permission(this);\r\n    }\r\n    get list(): List {\r\n        return new List(this);\r\n    }\r\n    get listItem(): ListItem {\r\n        return new ListItem(this);\r\n    }\r\n    get file(): File {\r\n        return new File(this);\r\n    }\r\n    get publishingPage(): PublishingPage {\r\n        return new PublishingPage(this);\r\n    }\r\n    get web(): Web {\r\n        return new Web(this);\r\n    }\r\n    get user(): User{\r\n        return new User(this);\r\n    }\r\n\r\n    public execute(): JQueryPromise<Array<core.ActionResult>> {\r\n        this.resultPromise = $.Deferred();\r\n        if (this.settings.enableDependencyTimeout) {\r\n            var expiry = setTimeout(() => {\r\n                common.reject(this.resultPromise, \"Timeout waiting for dependencies to load\");\r\n            }, this.settings.timeoutMilliseconds);\r\n        }\r\n        this.loadDependencies()\r\n            .done(() => {\r\n                this.continue();\r\n            })\r\n            .always(() => {\r\n                if (this.settings.enableDependencyTimeout) {\r\n                    clearTimeout(expiry);\r\n                }\r\n            });\r\n        return this.resultPromise.promise() as JQueryPromise<Array<core.ActionResult>>;\r\n    }\r\n    public onActionExecuted(onExecuted: any): Fluent {\r\n        this.onExecuted = onExecuted;\r\n        return this;\r\n    }\r\n    public onActionExecuting(onExecuting: any): Fluent {\r\n        this.onExecuting = onExecuting;\r\n        return this;\r\n    }\r\n    public when(predicate: any) {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(...command.result)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for when\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    //Similar to when, but all previous results are passed into the predicate\r\n    public whenAll(predicate: any) : Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(this.results)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenAll\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenTrue(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not true\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenTrue\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenFalse(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && !command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenFalse\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    chainAction(name: string, action: any) {\r\n        var command = new core.ActionCommand();\r\n        command.name = name;\r\n        command.action = action;\r\n        this.commands.push(command);\r\n    }\r\n    registerDependency(dependency: core.Dependency) {\r\n        if (this.dependencies.indexOf(dependency) === -1) {\r\n            this.dependencies.push(dependency);\r\n        }\r\n    }\r\n    private continue() {\r\n        if (!this.context) {\r\n            throw \"context not set, you must call withContext\";\r\n        }\r\n        var command = this.commands.shift();\r\n        if (command && command.action) {\r\n            if (command.constructor === core.ActionCommand) {\r\n                if (this.onExecuting) {\r\n                    this.onExecuting((command as core.ActionCommand).name);\r\n                }\r\n            }\r\n            var promise = command.action() as JQueryPromise<any>;\r\n            promise.done((arg1, arg2, arg3, arg4, arg5, arg6, arg7) => {\r\n                if (command.constructor === core.ActionCommand) {\r\n                    let results = [];\r\n                    this.storeResult(arg1, results);\r\n                    this.storeResult(arg2, results);\r\n                    this.storeResult(arg3, results);\r\n                    this.storeResult(arg4, results);\r\n                    this.storeResult(arg5, results);\r\n                    this.storeResult(arg6, results);\r\n                    this.storeResult(arg7, results);\r\n                    this.addResult(command as core.ActionCommand, true, results);\r\n                    if (this.onExecuted) {\r\n                        this.onExecuted((command as core.ActionCommand).name, true, results);\r\n                    }\r\n                }\r\n                if (this.commands.length) {\r\n                    this.continue();\r\n                }\r\n                else {\r\n                    this.resolveChain();\r\n                }\r\n            })\r\n                .fail((sender, args) => {\r\n                    if (command.constructor === core.ActionCommand) {\r\n                        let results = [];\r\n                        this.storeResult(sender, results);\r\n                        this.storeResult(args, results);\r\n                        this.addResult(command as core.ActionCommand, false, results);\r\n                        this.failChain(sender, args);\r\n                        return;\r\n                    }\r\n                    this.resolveChain();\r\n                });\r\n        } else {\r\n            this.resolveChain();\r\n        }\r\n    }\r\n    private storeResult(arg: any, results: Array<any>) {\r\n        if (typeof (arg) !== typeof (undefined)) {\r\n            results.push(arg);\r\n        }\r\n    }\r\n    private resolveChain() {\r\n        this.resultPromise.resolve(this.results);\r\n    }\r\n    private failChain(sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        this.resultPromise.reject(sender, args);\r\n    }\r\n    private reject(deferred: JQueryDeferred<any>, sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        deferred.reject(sender, args);\r\n    }\r\n    private addResult(command: core.ActionCommand, success: boolean, results: Array<any>) {\r\n        var result = new core.ActionResult();\r\n        result.name = command.name;\r\n        result.success = success;\r\n        result.result = results;\r\n        this.results.push(result);\r\n    }\r\n    private loadDependencies(): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        let spDependencies = [\"SP.js\", \"SP.Runtime.js\"];\r\n        for (let i = 0; i < this.dependencies.length; i++) {\r\n            switch (this.dependencies[i]) {\r\n                case core.Dependency.UserProfile:\r\n                    (<any>window).LoadSodByKey(\"userprofile\");\r\n                    spDependencies.push(\"userprofile\");\r\n                    break;\r\n                case core.Dependency.Publishing:\r\n                    SP.SOD.registerSod('SP.Publishing.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.publishing.js'));\r\n                    spDependencies.push(\"SP.Publishing.js\");\r\n                    break;\r\n                case core.Dependency.Taxonomy:\r\n                    SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));\r\n                    spDependencies.push(\"sp.taxonomy.js\");\r\n                    break;\r\n                default:\r\n                    throw \"Depenency not implemented\";\r\n            }\r\n        }\r\n        SP.SOD.loadMultiple(spDependencies, () => {\r\n            deferred.resolve();\r\n        });\r\n        return deferred.promise();\r\n    }\r\n    private peekLastCommand() {\r\n        if (this.commands.length) {\r\n            return this.commands[this.commands.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private peekLastResult() {\r\n        if (this.results.length) {\r\n            return this.results[this.results.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n}\r\n"],"sourceRoot":""}
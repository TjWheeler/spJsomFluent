{"version":3,"sources":["webpack://spJsom/webpack/bootstrap","webpack://spJsom/./src/common.ts","webpack://spJsom/./src/core.ts","webpack://spJsom/./src/helper/webHelper.ts","webpack://spJsom/./src/web.ts","webpack://spJsom/./src/helper/permissionHelper.ts","webpack://spJsom/./src/permission.ts","webpack://spJsom/./src/helper/listHelper.ts","webpack://spJsom/./src/list.ts","webpack://spJsom/./src/listitem.ts","webpack://spJsom/./src/file.ts","webpack://spJsom/./src/helper/navigationHelper.ts","webpack://spJsom/./src/navigation.ts","webpack://spJsom/./src/helper/pageHelper.ts","webpack://spJsom/./src/publishingpage.ts","webpack://spJsom/./src/fluent.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Dependency","NavigationLocation","src_common","common","reject","deferred","reason","this","get_message","notImplementedPromise","$","Deferred","promise","FilterArray","items","predicate","output","length","push","executeQuery","clientContext","executeQueryAsync","sender","args","resolve","WebHelper","context","setWelcomePage","web","url","rootFolder","get_rootFolder","load","set_welcomePage","update","fail","done","createWeb","parentWeb","title","template","info","SP","WebCreationInformation","set_url","set_title","set_webTemplate","newWeb","get_webs","add","doesWebExist","getAllWebs","get_site","get_rootWeb","toLowerCase","get_serverRelativeUrl","get_url","getWebs","fromWeb","_this","webs","promises","get_count","subWeb","getItemAtIndex","when","apply","Web","fluent","_fluent","_helperName","webHelper","chainAction","exists","PermissionHelper","hasWebPermission","permission","get_effectiveBasePermissions","has","hasListPermission","list","hasItemPermission","item","Permission","permissionHelper","ListHelper","createList","listName","templateId","ListCreationInformation","set_templateType","get_lists","setAlerts","enabled","getByTitle","set_enableAssignToEmail","setListItemProperties","listItem","properties","propertyName","set_item","createListItemWithContentTypeName","contentTypeName","itemCreateInfo","ListItemCreationInformation","listContentTypes","get_contentTypes","contentTypeId","contentType","get_name","get_id","get_stringValue","addItem","createListItem","getFileListItem","serverRelativeUrl","getFileByServerRelativeUrl","get_listItemAllFields","getFile","file","checkInFile","comment","checkInType","checkIn","getList","getListItemById","id","getItemById","deleteListItemById","deleteObject","getListItems","viewXml","query","CamlQuery","set_viewXml","listItems","getItems","getListItemCount","addContentTypeListAssociation","listCts","contentTypes","findContentType","collection","listCt","get_contentTypesEnabled","set_contentTypesEnabled","associatedCt","addExistingContentType","removeContentTypeListAssociation","setDefaultValueOnList","fieldInternalName","defaultValue","fields","get_fields","field","get_internalName","findField","set_defaultValue","List","listHelper","delete","ListItem","createWithContentType","deleteById","count","File","NavigationHelper","deleteQuicklaunchNodes","deleteNodes","get_navigation","get_quickLaunch","deleteTopNavigationNodes","get_topNavigationBar","deleteQuicklaunchNode","deleteNode","deleteTopQuicklaunchNode","nav","enumerator","getEnumerator","itemsToDelete","moveNext","get_current","node","get_title","createQuicklaunchNode","asLastNode","createNode","createTopNavigationNode","NavigationNodeCreationInformation","set_asLastNode","FluentCommand","ActionCommand","_super","__extends","ActionResult","WhenCommand","Navigation","navigationHelper","location","Quicklaunch","TopNavigation","deleteAllNodes","PageHelper","createPublishingPage","layoutUrl","pageInfo","Publishing","PublishingPageInformation","set_name","set_pageLayoutListItem","publishingWeb","PublishingWeb","getPublishingWeb","publishingPage","addPublishingPage","getPublishingLayout","PublishingPage","pageHelper","registerDependency","getLayout","__webpack_exports__","fluent_Fluent","Fluent","commands","results","dependencies","settings","timeoutMilliseconds","enableDependencyTimeout","withContext","withSettings","setting","resultPromise","src_permission","src_list","listitem","src_file","publishingpage","src_web","navigation","execute","expiry","setTimeout","loadDependencies","continue","always","clearTimeout","onActionExecuted","onExecuted","onActionExecuting","onExecuting","peekLastCommand","constructor","command","action","peekLastResult","success","result","failChain","whenAll","whenTrue","whenFalse","dependency","indexOf","shift","arg1","arg2","arg3","arg4","arg5","arg6","arg7","storeResult","addResult","resolveChain","arg","spDependencies","UserProfile","window","LoadSodByKey","SOD","registerSod","Utilities","Utility","getLayoutsPageUrl","Taxonomy","loadMultiple"],"mappings":"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","file":"spJsomFluent.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/// <reference path=\"../typings/@types/all.ts\" />\r\n\r\nexport default class common {\r\n    public static reject(deferred: JQueryDeferred<any>, reason:string) {\r\n        deferred.reject(this, { get_message: function () { return reason; } } );\r\n    }\r\n    public static notImplementedPromise() : JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        common.reject(deferred, \"Not Implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public static executeQuery = (clientContext: SP.ClientContext) => {\r\n        var deferred = $.Deferred();\r\n        clientContext.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(sender, args);\r\n            },\r\n            (sender, args) => {\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise();\r\n    };\r\n    public static FilterArray<T>(items: Array<T>, predicate: any): Array<T> {\r\n        let output = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i], i)) {\r\n                output.push(items[i]);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}","/// <reference path=\"../typings/@types/all.ts\" />\r\n\r\nexport class FluentCommand {\r\n    action: any;\r\n}\r\nexport class ActionCommand extends FluentCommand {\r\n    name: string;\r\n}\r\nexport class ActionResult {\r\n    name: string;\r\n    success: boolean;\r\n    result: Array<any>;\r\n}\r\nexport interface KeyValuePair {\r\n    key: string;\r\n    value: any;\r\n}\r\nexport class WhenCommand extends FluentCommand { }\r\nexport enum Dependency {\r\n    Publishing,\r\n    UserProfile,\r\n    Taxonomy\r\n}\r\nexport enum NavigationLocation {\r\n    TopNavigation,\r\n    Quicklaunch\r\n}\r\n//export interface IFluentInternal extends IFluent {\r\n//    chainAction(name: string, action: any);\r\n//    registerDependency(dependency: Dependency);\r\n//}\r\n//export interface IFluent {\r\n//    context: SP.ClientContext;\r\n//    withContext(context: SP.ClientContext): IFluent;\r\n//    withSettings(settings: ISettings): IFluent;\r\n//    settings: ISettings;\r\n//    promise: JQueryPromise<any>;\r\n//    execute(): JQueryPromise<Array<ActionResult>>;\r\n//    onActionExecuted(onExecuted: any): IFluent;\r\n//    onActionExecuting(onExecuting: any): IFluent;\r\n//    when(predicate: any);\r\n//    whenAll(predicate: any);\r\n//    whenTrue(): IFluent;\r\n//    whenFalse(): IFluent;\r\n//}\r\nexport interface ISettings {\r\n    timeoutMilliseconds?: number,\r\n    enableDependencyTimeout?: boolean\r\n}","import common from \"../common\"\r\n\r\nexport default class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public setWelcomePage(web: SP.Web, url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var rootFolder = web.get_rootFolder();\r\n            this.context.load(web);\r\n            this.context.load(rootFolder);\r\n            rootFolder.set_welcomePage(url);\r\n            rootFolder.update();\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(rootFolder);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    public createWeb(name: string, parentWeb: SP.Web, title: string, template: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var info = new SP.WebCreationInformation();\r\n            info.set_url(name);\r\n            info.set_title(title);\r\n            info.set_webTemplate(template);\r\n            var newWeb = parentWeb.get_webs().add(info);\r\n            this.context.load(newWeb);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(newWeb);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    public doesWebExist(url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, this.context.get_site().get_rootWeb(), output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    for (var i = 0; i < output.length; i++) {\r\n                        if (url.toLowerCase() === output[i].get_serverRelativeUrl() || url.toLowerCase() === output[i].get_url()) {\r\n                            deferred.resolve(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                    deferred.resolve(false);\r\n                });\r\n            return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public getWebs(fromWeb: SP.Web): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, fromWeb, output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(output);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    private getAllWebs(context: SP.ClientContext, web: SP.Web, output: Array<SP.Web>): JQueryPromise<Array<SP.Web>> {\r\n        var deferred = $.Deferred();\r\n        var webs = web.get_webs();\r\n        context.load(webs);\r\n        common.executeQuery(context)\r\n            .fail((sender, args) => {\r\n                deferred.reject(sender, args);\r\n            })\r\n            .done(() => {\r\n                var promises = [];\r\n                for (var i = 0; i < webs.get_count(); i++) {\r\n                    var subWeb = webs.getItemAtIndex(i);\r\n                    output.push(subWeb);\r\n                    promises.push(this.getAllWebs(context, subWeb, output));\r\n                }\r\n                if (promises.length) {\r\n                    $.when.apply($, promises)\r\n                        .fail((sender, args) => {\r\n                            deferred.reject(sender, args);\r\n                        })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                } else {\r\n                    deferred.resolve();\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n\r\n}","/// <reference path=\"../typings/@types/all.ts\" />\r\nimport WebHelper from \"./helper/webHelper\";\r\nimport { Fluent } from \"./fluent\"\r\n\r\nexport default class Web {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.webHelper = new WebHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"web\";\r\n    private webHelper = null as WebHelper;\r\n    /**\r\n      * Set the web welcome page.  The url should be relative to the root folder of the web. \r\n      * Example: setWelcomePage(context.get_web(), \"pages/default.aspx\")\r\n      */\r\n    public setWelcomePage(web: SP.Web, url: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.setWelcomePage`, () => {\r\n            return this.webHelper.setWelcomePage(web, url);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Create a new sub web.\r\n      * name: Forms part of the URL, don't include slash\r\n      * template: template id and configuration value\r\n      * Example: create(\"SubWebName\", SP.ClientContext.get_current().get_rootWeb(), \"My Web Name\", \"CMSPUBLISHING#0\")\r\n      * \r\n      * @remarks\r\n      * For templates See: https://blogs.technet.microsoft.com/praveenh/2010/10/21/sharepoint-templates-and-their-ids/\r\n      */\r\n    public create(name: string, parentWeb: SP.Web, title: string, template: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.webHelper.createWeb(name, parentWeb, title, template);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Check if a web exists\r\n      * url: server relative url\r\n      * Example: .exists(\"/sites/mysubweb\")\r\n      */\r\n    public exists(url: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.webHelper.doesWebExist(url);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Get and load all webs starting from a web\r\n      * Example: getWebs(SP.ClientContext.get_current().get_rootWeb()))\r\n      */\r\n    public getWebs(fromWeb: SP.Web): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.getWebs`, () => {\r\n            return this.webHelper.getWebs(fromWeb);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    \r\n}","import common from \"../common\"\r\n\r\nexport default class PermissionHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(web, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(web.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(list, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(list.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(item, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(item.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n}","import { Fluent } from \"./fluent\"\r\nimport PermissionHelper from \"./helper/permissionHelper\";\r\n\r\nexport default class Permission {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.permissionHelper = new PermissionHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"permission\";\r\n    private permissionHelper = null as PermissionHelper;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasWebPermission`, () => {\r\n            return this.permissionHelper.hasWebPermission(permission, web);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasSitePermission`, () => {\r\n            return this.permissionHelper.hasListPermission(permission, list);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasItemPermission`, () => {\r\n            return this.permissionHelper.hasItemPermission(permission, item);\r\n        });\r\n        return this._fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class ListHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n\r\n    public createList(web: SP.Web, listName: string, templateId: number): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = null as SP.List;\r\n        var info = new SP.ListCreationInformation();\r\n        info.set_title(listName);\r\n        info.set_templateType(templateId);\r\n        var list = web.get_lists().add(info);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public setAlerts(web: SP.Web, listName: string, enabled:boolean): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        (<any>list).set_enableAssignToEmail(enabled); //Not in typescript definitions currently.  //TODO: test \r\n        list.update();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public setListItemProperties(listItem: SP.ListItem, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public createListItemWithContentTypeName(web: SP.Web, listName: string, contentTypeName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n        var listContentTypes = list.get_contentTypes();\r\n        clientContext.load(listContentTypes);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var contentTypeId = null;\r\n                for (let i = 0; i < listContentTypes.get_count(); i++) {\r\n                    let contentType = listContentTypes.getItemAtIndex(i) as SP.ContentType;\r\n                    if (contentType.get_name() === contentTypeName) {\r\n                        contentTypeId = contentType.get_id().get_stringValue();\r\n                        break;\r\n                    }\r\n                }\r\n                var listItem = list.addItem(itemCreateInfo);\r\n                if (contentTypeId) {\r\n                    listItem.set_item('ContentTypeId', contentTypeId);\r\n                }\r\n                for (var propertyName in properties) {\r\n                    if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                        listItem.set_item(propertyName, properties[propertyName]);\r\n                    }\r\n                }\r\n                listItem.update();\r\n                clientContext.load(listItem);\r\n                common.executeQuery(clientContext)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve(listItem);\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n\r\n    }\r\n    public createListItem(web: SP.Web, listName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n        var contentTypeId = null;\r\n        var listItem = list.addItem(itemCreateInfo);\r\n        //TODO: validate this works with People, taxonomy and lookup fields.\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        clientContext.load(listItem);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFile(serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkInFile(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkIn(comment, checkInType);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public getList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        //TODO: test\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public getListItemById(web: SP.Web, listName: string, id: number): JQueryPromise<SP.ListItem> {\r\n        //TODO: test\r\n        var deferred = $.Deferred();\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n\r\n    public deleteListItemById(web: SP.Web, listName: string, id: number): JQueryPromise<any> {\r\n        //TODO: test\r\n        var deferred = $.Deferred();\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        this.context.load(listItem);\r\n        listItem.deleteObject(); //TODO: verify this works before executeQuery\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public getListItems(web: SP.Web, listName: string, viewXml: string): JQueryPromise<SP.ListItemCollection> {\r\n        //TODO: test\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        query.set_viewXml(viewXml);\r\n        var listItems = list.getItems(query);\r\n        this.context.load(listItems);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItems);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItemCollection>;\r\n    }\r\n    public getListItemCount(web: SP.Web, listName: string, viewXml: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        //TODO:\r\n        common.reject(deferred, \"Not implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<SP.ContentType> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        \r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var contentTypes = this.context.get_site().get_rootWeb().get_contentTypes();\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        this.context.load(contentTypes);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let contentType = findContentType(contentTypes, contentTypeName) as SP.ContentType;\r\n                if (!contentType) {\r\n                    common.reject(deferred, `Content Type ${contentTypeName} not found`);\r\n                    return;\r\n                }\r\n                //check if the CT is already associated\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    //already associated\r\n                    deferred.resolve(listCt);\r\n                }\r\n                else {\r\n                    if (!list.get_contentTypesEnabled()) {\r\n                        list.set_contentTypesEnabled(true);//enable custom cts on the list.\r\n                    }\r\n                    var associatedCt = list.get_contentTypes().addExistingContentType(contentType);\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve(associatedCt);\r\n                        });\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ContentType>;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    listCt.deleteObject();\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    deferred.resolve(); //not found, nothing to do.\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var fields = list.get_fields();\r\n        this.context.load(list);\r\n        this.context.load(fields);\r\n        var findField = (collection: SP.FieldCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_internalName().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let field = findField(fields, fieldInternalName) as SP.Field;\r\n                if (field) {\r\n                    field.set_defaultValue(defaultValue);\r\n                    field.update()\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    common.reject(deferred, `Field ${fieldInternalName} not found`);\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n}","import common from \"./common\"\r\nimport ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class List {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"list\";\r\n    /**\r\n    * Create new list \r\n    * Example: create(context.get_web(), \"My Task List\", 107)\r\n    * templateId - See: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee541191(v%3Doffice.15)\r\n    */\r\n    public create(web: SP.Web, listName: string, templateId: number): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createList(web, listName, templateId);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public delete(web: SP.Web, listName: string, template: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.delete`, () => {\r\n            return common.notImplementedPromise();\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public get(web: SP.Web, listName: string): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getList(web, listName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.addContentTypeListAssociation`, () => {\r\n            return this.listHelper.addContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.removeContentTypeListAssociation`, () => {\r\n            return this.listHelper.removeContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.setDefaultValueOnList`, () => {\r\n            return this.listHelper.setDefaultValueOnList(web, listName, fieldInternalName, defaultValue);\r\n        });\r\n        return this.fluent;\r\n    }\r\n     /**\r\n    * Enable email alerts on a list \r\n    * Example: setAlerts(context.get_web(), \"My Task List\", true)\r\n    * Note: will not work for 2010/2013\r\n    */\r\n    public setAlerts(web: SP.Web, listName: string, enabled: boolean): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.setAlerts`, () => {\r\n            return this.listHelper.setAlerts(web, listName, enabled);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class ListItem {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"listItem\";\r\n    public update(listItem: SP.ListItem, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.update`, () => {\r\n            return this.listHelper.setListItemProperties(listItem, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public createWithContentType(web: SP.Web, listName: string, contentTypeName: string, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.createWithContentType`, () => {\r\n            return this.listHelper.createListItemWithContentTypeName(web, listName, contentTypeName, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public create(web: SP.Web, listName: string, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createListItem(web, listName, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public getListItemById(web: SP.Web, listName: string, id: number): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.getListItemById`, () => {\r\n            return this.listHelper.getListItemById(web, listName, id);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getFileListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public deleteById(web: SP.Web, listName: string, id: number): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.deleteById`, () => {\r\n            return this.listHelper.deleteListItemById(web, listName, id);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public query(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, viewXml);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public count(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.count`, () => {\r\n            return this.listHelper.getListItemCount(web, listName, viewXml);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class File {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"file\";\r\n\r\n    public getFile(serverRelativeUrl: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getFile`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public checkIn(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.checkInFile`, () => {\r\n            return this.listHelper.checkInFile(web, serverRelativeUrl, comment, checkInType);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class NavigationHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public deleteQuicklaunchNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_quickLaunch());\r\n    }\r\n    public deleteTopNavigationNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_topNavigationBar());\r\n    }\r\n    public deleteQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_quickLaunch(), title);\r\n    }\r\n    public deleteTopQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_topNavigationBar(), title);\r\n    }\r\n    private deleteNodes(nav: SP.NavigationNodeCollection): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    itemsToDelete.push(enumerator.get_current());\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    private deleteNode(nav: SP.NavigationNodeCollection, title: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    var node = enumerator.get_current();\r\n                    if (node.get_title() === title) {\r\n                        itemsToDelete.push(node);\r\n                    }\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public createQuicklaunchNode(web: SP.Web, title:string, url:string, asLastNode:boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_quickLaunch(), title, url, asLastNode);\r\n    }\r\n    public createTopNavigationNode(web: SP.Web, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_topNavigationBar(), title, url, asLastNode);\r\n    }\r\n    private createNode(nav:SP.NavigationNodeCollection, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        var info = new SP.NavigationNodeCreationInformation();\r\n        info.set_title(title);\r\n        info.set_url(url);\r\n        info.set_asLastNode(asLastNode);\r\n        var node = nav.add(info);\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(node);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.NavigationNode>;\r\n    }\r\n}","import common from \"./common\"\r\nimport NavigationHelper from \"./helper/navigationHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nimport { NavigationLocation } from \"./core\"\r\nexport default class Navigation {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.navigationHelper = new NavigationHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private navigationHelper = null as NavigationHelper;\r\n    private readonly _helperName: string = \"navigation\";\r\n\r\n    /**\r\n    * Create new navigation node\r\n    * Example: createNode(context.get_web(), NavigationLocation.Quicklaunch, \"Test Node\", \"/sites/mysite/pages/default.aspx\")\r\n    */\r\n    public createNode(web: SP.Web, location: NavigationLocation, title: string, url: string, asLastNode: boolean = true): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.createNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.createQuicklaunchNode(web, title, url, asLastNode);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.createTopNavigationNode(web, title, url, asLastNode);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Delete all navigation nodes for the web\r\n    * Example: deleteAllNodes(context.get_web(), NavigationLocation.Quicklaunch)\r\n    */\r\n    public deleteAllNodes(web: SP.Web, location: NavigationLocation): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.deleteAllNodes`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNodes(web);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopNavigationNodes(web);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n\r\n\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Delete all navigation nodes that match the supplied title for the web\r\n    * Example: deleteNode(context.get_web(), NavigationLocation.Quicklaunch, \"My link title\")\r\n    */\r\n    public deleteNode(web: SP.Web, location: NavigationLocation, title:string ): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.deleteNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNode(web, title);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopQuicklaunchNode(web, title);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class PageHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createPublishingPage(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        var pageInfo = new SP.Publishing.PublishingPageInformation();\r\n        pageInfo.set_name(name);\r\n        pageInfo.set_pageLayoutListItem(listItem);\r\n        var publishingWeb = SP.Publishing.PublishingWeb.getPublishingWeb(this.context, web);\r\n        this.context.load(publishingWeb);\r\n        var publishingPage = publishingWeb.addPublishingPage(pageInfo);\r\n        this.context.load(publishingPage);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(publishingPage);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getPublishingLayout(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    \r\n\r\n}","import * as core from \"./core\"\r\nimport { Fluent } from \"./fluent\"\r\nimport PageHelper from \"./helper/pageHelper\"\r\n\r\nexport default class PublishingPage {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.pageHelper = new PageHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private readonly _helperName: string = \"publishingPage\";\r\n    private pageHelper: PageHelper;\r\n    public create(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(core.Dependency.Publishing);\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.pageHelper.createPublishingPage(web, name, layoutUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public getLayout(serverRelativeUrl:string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getLayout`, () => {\r\n            return this.pageHelper.getPublishingLayout(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n\r\n}","// spJsom - Fluent\r\n/// <reference path=\"../typings/@types/all.ts\" />\r\nimport Web from \"./web\"\r\nimport Permission from \"./permission\"\r\nimport List from \"./list\"\r\nimport ListItem from \"./listitem\"\r\nimport File from \"./file\"\r\nimport User from \"./web\"\r\nimport Navigation from \"./navigation\"\r\nimport PublishingPage from \"./publishingpage\"\r\nimport * as core from \"./core\"\r\nimport common from \"./common\"\r\n\r\n\r\nexport class Fluent  {\r\n    public context: SP.ClientContext;\r\n    private commands: Array<core.FluentCommand> = [];\r\n    private results: Array<core.ActionResult> = [];\r\n    private resultPromise: JQueryDeferred<any>;\r\n    private onExecuting: any;\r\n    private onExecuted: any;\r\n    private dependencies: Array<core.Dependency> = [];\r\n    public settings: core.ISettings = { timeoutMilliseconds: 5000, enableDependencyTimeout: true };\r\n    withContext(context: SP.ClientContext): Fluent {\r\n        this.context = context;\r\n        return this;\r\n    }\r\n    withSettings(settings: core.ISettings): Fluent {\r\n        for (var setting in settings) {\r\n            if (typeof (this.settings[setting]) !== typeof (undefined)) {\r\n                this.settings[setting] = settings[setting];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    get promise(): JQueryPromise<any> {\r\n        return this.resultPromise.promise();\r\n    }\r\n    get permission(): Permission {\r\n        return new Permission(this);\r\n    }\r\n    get list(): List {\r\n        return new List(this);\r\n    }\r\n    get listItem(): ListItem {\r\n        return new ListItem(this);\r\n    }\r\n    get file(): File {\r\n        return new File(this);\r\n    }\r\n    get publishingPage(): PublishingPage {\r\n        return new PublishingPage(this);\r\n    }\r\n    get web(): Web {\r\n        return new Web(this);\r\n    }\r\n    get user(): User{\r\n        return new User(this);\r\n    }\r\n    get navigation(): Navigation {\r\n        return new Navigation(this);\r\n    }\r\n\r\n    public execute(): JQueryPromise<Array<core.ActionResult>> {\r\n        this.resultPromise = $.Deferred();\r\n        if (this.settings.enableDependencyTimeout) {\r\n            var expiry = setTimeout(() => {\r\n                common.reject(this.resultPromise, \"Timeout waiting for dependencies to load\");\r\n            }, this.settings.timeoutMilliseconds);\r\n        }\r\n        this.loadDependencies()\r\n            .done(() => {\r\n                this.continue();\r\n            })\r\n            .always(() => {\r\n                if (this.settings.enableDependencyTimeout) {\r\n                    clearTimeout(expiry);\r\n                }\r\n            });\r\n        return this.resultPromise.promise() as JQueryPromise<Array<core.ActionResult>>;\r\n    }\r\n    public onActionExecuted(onExecuted: any): Fluent {\r\n        this.onExecuted = onExecuted;\r\n        return this;\r\n    }\r\n    public onActionExecuting(onExecuting: any): Fluent {\r\n        this.onExecuting = onExecuting;\r\n        return this;\r\n    }\r\n    public when(predicate: any) {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(...command.result)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for when\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    //Similar to when, but all previous results are passed into the predicate\r\n    public whenAll(predicate: any) : Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(this.results)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenAll\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenTrue(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not true\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenTrue\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenFalse(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== core.ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new core.WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && !command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenFalse\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    chainAction(name: string, action: any) {\r\n        var command = new core.ActionCommand();\r\n        command.name = name;\r\n        command.action = action;\r\n        this.commands.push(command);\r\n    }\r\n    registerDependency(dependency: core.Dependency) {\r\n        if (this.dependencies.indexOf(dependency) === -1) {\r\n            this.dependencies.push(dependency);\r\n        }\r\n    }\r\n    private continue() {\r\n        if (!this.context) {\r\n            throw \"context not set, you must call withContext\";\r\n        }\r\n        var command = this.commands.shift();\r\n        if (command && command.action) {\r\n            if (command.constructor === core.ActionCommand) {\r\n                if (this.onExecuting) {\r\n                    this.onExecuting((command as core.ActionCommand).name);\r\n                }\r\n            }\r\n            var promise = command.action() as JQueryPromise<any>;\r\n            promise.done((arg1, arg2, arg3, arg4, arg5, arg6, arg7) => {\r\n                if (command.constructor === core.ActionCommand) {\r\n                    let results = [];\r\n                    this.storeResult(arg1, results);\r\n                    this.storeResult(arg2, results);\r\n                    this.storeResult(arg3, results);\r\n                    this.storeResult(arg4, results);\r\n                    this.storeResult(arg5, results);\r\n                    this.storeResult(arg6, results);\r\n                    this.storeResult(arg7, results);\r\n                    this.addResult(command as core.ActionCommand, true, results);\r\n                    if (this.onExecuted) {\r\n                        this.onExecuted((command as core.ActionCommand).name, true, results);\r\n                    }\r\n                }\r\n                if (this.commands.length) {\r\n                    this.continue();\r\n                }\r\n                else {\r\n                    this.resolveChain();\r\n                }\r\n            })\r\n                .fail((sender, args) => {\r\n                    if (command.constructor === core.ActionCommand) {\r\n                        let results = [];\r\n                        this.storeResult(sender, results);\r\n                        this.storeResult(args, results);\r\n                        this.addResult(command as core.ActionCommand, false, results);\r\n                        this.failChain(sender, args);\r\n                        return;\r\n                    }\r\n                    this.resolveChain();\r\n                });\r\n        } else {\r\n            this.resolveChain();\r\n        }\r\n    }\r\n    private storeResult(arg: any, results: Array<any>) {\r\n        if (typeof (arg) !== typeof (undefined)) {\r\n            results.push(arg);\r\n        }\r\n    }\r\n    private resolveChain() {\r\n        this.resultPromise.resolve(this.results);\r\n    }\r\n    private failChain(sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        this.resultPromise.reject(sender, args);\r\n    }\r\n    private reject(deferred: JQueryDeferred<any>, sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        deferred.reject(sender, args);\r\n    }\r\n    private addResult(command: core.ActionCommand, success: boolean, results: Array<any>) {\r\n        var result = new core.ActionResult();\r\n        result.name = command.name;\r\n        result.success = success;\r\n        result.result = results;\r\n        this.results.push(result);\r\n    }\r\n    private loadDependencies(): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        let spDependencies = [\"SP.js\", \"SP.Runtime.js\"];\r\n        for (let i = 0; i < this.dependencies.length; i++) {\r\n            switch (this.dependencies[i]) {\r\n                case core.Dependency.UserProfile:\r\n                    (<any>window).LoadSodByKey(\"userprofile\");\r\n                    spDependencies.push(\"userprofile\");\r\n                    break;\r\n                case core.Dependency.Publishing:\r\n                    SP.SOD.registerSod('SP.Publishing.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.publishing.js'));\r\n                    spDependencies.push(\"SP.Publishing.js\");\r\n                    break;\r\n                case core.Dependency.Taxonomy:\r\n                    SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));\r\n                    spDependencies.push(\"sp.taxonomy.js\");\r\n                    break;\r\n                default:\r\n                    throw \"Depenency not implemented\";\r\n            }\r\n        }\r\n        SP.SOD.loadMultiple(spDependencies, () => {\r\n            deferred.resolve();\r\n        });\r\n        return deferred.promise();\r\n    }\r\n    private peekLastCommand() {\r\n        if (this.commands.length) {\r\n            return this.commands[this.commands.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private peekLastResult() {\r\n        if (this.results.length) {\r\n            return this.results[this.results.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n}\r\n"],"sourceRoot":""}
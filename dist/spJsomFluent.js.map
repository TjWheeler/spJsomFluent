{"version":3,"sources":["webpack://spJsom/webpack/bootstrap","webpack://spJsom/./src/common.ts","webpack://spJsom/./src/helper/webHelper.ts","webpack://spJsom/./src/web.ts","webpack://spJsom/./src/helper/permissionHelper.ts","webpack://spJsom/./src/permission.ts","webpack://spJsom/./src/helper/listHelper.ts","webpack://spJsom/./src/list.ts","webpack://spJsom/./src/listitem.ts","webpack://spJsom/./src/file.ts","webpack://spJsom/./src/helper/userHelper.ts","webpack://spJsom/./src/user.ts","webpack://spJsom/./src/helper/navigationHelper.ts","webpack://spJsom/./src/navigation.ts","webpack://spJsom/./src/helper/pageHelper.ts","webpack://spJsom/./src/publishingpage.ts","webpack://spJsom/./src/fluent.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","src_common","common","reject","deferred","reason","this","get_message","notImplementedPromise","$","Deferred","promise","FilterArray","items","predicate","output","length","push","executeQuery","clientContext","executeQueryAsync","sender","args","resolve","WebHelper","context","setWelcomePage","web","url","rootFolder","get_rootFolder","load","set_welcomePage","update","fail","done","createWeb","parentWeb","title","template","useSamePermissionsAsParent","info","SP","WebCreationInformation","set_url","set_title","set_webTemplate","set_useSamePermissionsAsParentSite","newWeb","get_webs","add","doesWebExist","getAllWebs","get_site","get_rootWeb","toLowerCase","get_serverRelativeUrl","get_url","getWebs","fromWeb","_this","webs","promises","get_count","subWeb","getItemAtIndex","when","apply","Web","fluent","_fluent","_helperName","webHelper","chainAction","exists","PermissionHelper","hasWebPermission","permission","get_effectiveBasePermissions","has","hasListPermission","list","hasItemPermission","item","Permission","permissionHelper","ListHelper","createList","listName","templateId","ListCreationInformation","set_templateType","get_lists","setAlerts","enabled","getByTitle","set_enableAssignToEmail","setListItemProperties","listItem","properties","propertyName","set_item","lists","get_title","createListItemWithContentTypeName","contentTypeName","itemCreateInfo","ListItemCreationInformation","listContentTypes","get_contentTypes","contentTypeId","contentType","get_name","get_id","get_stringValue","addItem","createListItem","loadListItem","viewFields","getFile","serverRelativeUrl","file","getFileByServerRelativeUrl","checkInFile","comment","checkInType","checkIn","getList","getFileListItem","get_listItemAllFields","getListItemById","id","getItemById","deleteListItemById","deleteObject","getListItems","viewXml","query","CamlQuery","set_viewXml","listItems","getItems","addContentTypeListAssociation","listCts","contentTypes","findContentType","collection","listCt","get_contentTypesEnabled","set_contentTypesEnabled","associatedCt","addExistingContentType","removeContentTypeListAssociation","setDefaultValueOnList","fieldInternalName","defaultValue","fields","get_fields","field","get_internalName","findField","set_defaultValue","List","listHelper","delete","ListItem","createWithContentType","deleteById","File","UserHelper","getUserByEmail","email","loadUser","get_web","ensureUser","getUserById","get_siteUsers","getById","user","console","error","getCurrentUser","get_currentUser","getCurrentUserProfileProperties","SOD","executeFunc","currentUser","profile","UserProfiles","PeopleManager","getMyProperties","get_userProfileProperties","getCurrentUserManager","peopleManager","user_email","get_email","userProfilePropertiesForUser","UserProfilePropertiesForUser","userProfileProps","getUserProfilePropertiesFor","User","userHelper","emailOrAccountName","registerDependency","Dependency","UserProfile","NavigationHelper","deleteQuicklaunchNodes","deleteNodes","get_navigation","get_quickLaunch","deleteTopNavigationNodes","get_topNavigationBar","deleteQuicklaunchNode","deleteNode","deleteTopQuicklaunchNode","setCurrentNavigation","navigationType","showSubsites","showPages","allProperties","get_allProperties","setOptions","nav","Publishing","Navigation","WebNavigationSettings","NavigationType","Inherit","get_currentNavigation","set_source","StandardNavigationSource","inheritFromParentWeb","Managed","StructuralWithSiblings","portalProvider","StructuralChildrenOnly","enumerator","getEnumerator","itemsToDelete","moveNext","get_current","node","createQuicklaunchNode","asLastNode","createNode","createTopNavigationNode","NavigationNodeCreationInformation","set_asLastNode","navigationHelper","location","NavigationLocation","Quicklaunch","TopNavigation","deleteAllNodes","type","PageHelper","createPublishingPage","layoutUrl","pageInfo","PublishingPageInformation","set_name","set_pageLayoutListItem","publishingWeb","PublishingWeb","getPublishingWeb","publishingPage","addPublishingPage","getPublishingLayout","PublishingPage","pageHelper","getLayout","fluent_Fluent","Fluent","commands","results","dependencies","settings","timeoutMilliseconds","enableDependencyTimeout","totalCommands","withContext","withSettings","setting","resultPromise","src_permission","src_list","listitem","src_file","publishingpage","src_web","src_user","navigation","execute","expiry","setTimeout","getAvailableActionCommandCount","loadDependencies","continue","always","clearTimeout","onActionExecuted","onExecuted","onActionExecuting","onExecuting","peekLastCommand","constructor","ActionCommand","command","WhenCommand","action","peekLastResult","success","result","failChain","whenAll","whenTrue","whenFalse","dependency","indexOf","shift","step","arg1","arg2","arg3","arg4","arg5","arg6","arg7","storeResult","addResult","resolveChain","arg","ActionResult","spDependencies","window","LoadSodByKey","registerSod","Utilities","Utility","getLayoutsPageUrl","Taxonomy","loadMultiple","count","FluentCommand","_super","__extends"],"mappings":"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","file":"spJsomFluent.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/// <reference path=\"../typings/@types/all.ts\" />\r\n\r\nexport default class common {\r\n    public static reject(deferred: JQueryDeferred<any>, reason:string) {\r\n        deferred.reject(this, { get_message: function () { return reason; } } );\r\n    }\r\n    public static notImplementedPromise() : JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        common.reject(deferred, \"Not Implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public static executeQuery = (clientContext: SP.ClientContext) => {\r\n        var deferred = $.Deferred();\r\n        clientContext.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(sender, args);\r\n            },\r\n            (sender, args) => {\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise();\r\n    };\r\n    public static FilterArray<T>(items: Array<T>, predicate: any): Array<T> {\r\n        let output = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i], i)) {\r\n                output.push(items[i]);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public setWelcomePage(web: SP.Web, url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var rootFolder = web.get_rootFolder();\r\n            this.context.load(web);\r\n            this.context.load(rootFolder);\r\n            rootFolder.set_welcomePage(url);\r\n            rootFolder.update();\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(rootFolder);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    public createWeb(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent:boolean = true): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var info = new SP.WebCreationInformation();\r\n            info.set_url(name);\r\n            info.set_title(title);\r\n            info.set_webTemplate(template);\r\n            info.set_useSamePermissionsAsParentSite(useSamePermissionsAsParent);\r\n            var newWeb = parentWeb.get_webs().add(info);\r\n            this.context.load(newWeb);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(newWeb);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    public doesWebExist(url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, this.context.get_site().get_rootWeb(), output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    for (var i = 0; i < output.length; i++) {\r\n                        if (url.toLowerCase() === output[i].get_serverRelativeUrl() || url.toLowerCase() === output[i].get_url()) {\r\n                            deferred.resolve(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                    deferred.resolve(false);\r\n                });\r\n            return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public getWebs(fromWeb: SP.Web): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, fromWeb, output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(output);\r\n                });\r\n            return deferred.promise();\r\n    }\r\n    private getAllWebs(context: SP.ClientContext, web: SP.Web, output: Array<SP.Web>): JQueryPromise<Array<SP.Web>> {\r\n        var deferred = $.Deferred();\r\n        var webs = web.get_webs();\r\n        context.load(webs);\r\n        common.executeQuery(context)\r\n            .fail((sender, args) => {\r\n                deferred.reject(sender, args);\r\n            })\r\n            .done(() => {\r\n                var promises = [];\r\n                for (var i = 0; i < webs.get_count(); i++) {\r\n                    var subWeb = webs.getItemAtIndex(i);\r\n                    output.push(subWeb);\r\n                    promises.push(this.getAllWebs(context, subWeb, output));\r\n                }\r\n                if (promises.length) {\r\n                    $.when.apply($, promises)\r\n                        .fail((sender, args) => {\r\n                            deferred.reject(sender, args);\r\n                        })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                } else {\r\n                    deferred.resolve();\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n\r\n}","/// <reference path=\"../typings/@types/all.ts\" />\r\nimport WebHelper from \"./helper/webHelper\";\r\nimport { Fluent } from \"./fluent\"\r\n\r\nexport default class Web {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.webHelper = new WebHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"web\";\r\n    private webHelper = null as WebHelper;\r\n    /**\r\n      * Set the web welcome page.  The url should be relative to the root folder of the web. \r\n      * Example: setWelcomePage(context.get_web(), \"pages/default.aspx\")\r\n      */\r\n    public setWelcomePage(web: SP.Web, url: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.setWelcomePage`, () => {\r\n            return this.webHelper.setWelcomePage(web, url);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Create a new sub web.\r\n      * name: Forms part of the URL, don't include slash\r\n      * template: template id and configuration value\r\n      * Example: create(\"SubWebName\", SP.ClientContext.get_current().get_rootWeb(), \"My Web Name\", \"CMSPUBLISHING#0\")\r\n      * \r\n      * @remarks\r\n      * For templates See: https://blogs.technet.microsoft.com/praveenh/2010/10/21/sharepoint-templates-and-their-ids/\r\n      */\r\n    public create(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent: boolean = true): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.webHelper.createWeb(name, parentWeb, title, template, useSamePermissionsAsParent);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Check if a web exists\r\n      * url: server relative url\r\n      * Example: .exists(\"/sites/mysubweb\")\r\n      */\r\n    public exists(url: string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.webHelper.doesWebExist(url);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    /**\r\n      * Get and load all webs starting from a web\r\n      * Example: getWebs(SP.ClientContext.get_current().get_rootWeb()))\r\n      */\r\n    public getWebs(fromWeb: SP.Web): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.getWebs`, () => {\r\n            return this.webHelper.getWebs(fromWeb);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    \r\n}","import common from \"../common\"\r\n\r\nexport default class PermissionHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(web, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(web.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(list, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(item, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(item.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n}","import { Fluent } from \"./fluent\"\r\nimport PermissionHelper from \"./helper/permissionHelper\";\r\n\r\nexport default class Permission {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.permissionHelper = new PermissionHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"permission\";\r\n    private permissionHelper = null as PermissionHelper;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasWebPermission`, () => {\r\n            return this.permissionHelper.hasWebPermission(permission, web);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasListPermission`, () => {\r\n            return this.permissionHelper.hasListPermission(permission, list);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.hasItemPermission`, () => {\r\n            return this.permissionHelper.hasItemPermission(permission, item);\r\n        });\r\n        return this._fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class ListHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n\r\n    public createList(web: SP.Web, listName: string, templateId: number): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = null as SP.List;\r\n        var info = new SP.ListCreationInformation();\r\n        info.set_title(listName);\r\n        info.set_templateType(templateId);\r\n        var list = web.get_lists().add(info);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public setAlerts(web: SP.Web, listName: string, enabled:boolean): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        (<any>list).set_enableAssignToEmail(enabled); //Not in typescript definitions currently.  //TODO: test \r\n        list.update();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public setListItemProperties(listItem: SP.ListItem, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public exists(web: SP.Web, listName: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var lists = web.get_lists();\r\n        this.context.load(lists);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                for (var i = 0; i < lists.get_count(); i++) {\r\n                    if (lists.getItemAtIndex(i).get_title().toLowerCase() === listName.toLowerCase()) {\r\n                        deferred.resolve(true);\r\n                        return;\r\n                    }\r\n                }\r\n                deferred.resolve(false);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public createListItemWithContentTypeName(web: SP.Web, listName: string, contentTypeName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n        var listContentTypes = list.get_contentTypes();\r\n        clientContext.load(listContentTypes);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var contentTypeId = null;\r\n                for (let i = 0; i < listContentTypes.get_count(); i++) {\r\n                    let contentType = listContentTypes.getItemAtIndex(i) as SP.ContentType;\r\n                    if (contentType.get_name() === contentTypeName) {\r\n                        contentTypeId = contentType.get_id().get_stringValue();\r\n                        break;\r\n                    }\r\n                }\r\n                var listItem = list.addItem(itemCreateInfo);\r\n                if (contentTypeId) {\r\n                    listItem.set_item('ContentTypeId', contentTypeId);\r\n                }\r\n                for (var propertyName in properties) {\r\n                    if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                        listItem.set_item(propertyName, properties[propertyName]);\r\n                    }\r\n                }\r\n                listItem.update();\r\n                clientContext.load(listItem);\r\n                common.executeQuery(clientContext)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve(listItem);\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n\r\n    }\r\n    public createListItem(web: SP.Web, listName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n        var contentTypeId = null;\r\n        var listItem = list.addItem(itemCreateInfo);\r\n        //TODO: validate this works with People, taxonomy and lookup fields.\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        clientContext.load(listItem);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n   \r\n    private loadListItem(listItem: SP.ListItem, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        if (viewFields && viewFields.length) {\r\n            this.context.load(listItem, viewFields as any);\r\n        } else {\r\n            this.context.load(listItem);\r\n        }\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFile(serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkInFile(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkIn(comment, checkInType);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public getList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        return this.loadListItem(listItem);\r\n    }\r\n    public getListItemById(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        return this.loadListItem(listItem, viewFields);\r\n    }\r\n\r\n    public deleteListItemById(web: SP.Web, listName: string, id: number): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        this.context.load(listItem);\r\n        listItem.deleteObject(); \r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public getListItems(web: SP.Web, listName: string, viewXml: string): JQueryPromise<SP.ListItemCollection> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        if (!viewXml) {\r\n            viewXml = \"<View><Query></Query></Where>\";\r\n        }\r\n        query.set_viewXml(viewXml);\r\n        var listItems = list.getItems(query);\r\n        this.context.load(listItems);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItems);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItemCollection>;\r\n    }\r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<SP.ContentType> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        \r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var contentTypes = this.context.get_site().get_rootWeb().get_contentTypes();\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        this.context.load(contentTypes);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let contentType = findContentType(contentTypes, contentTypeName) as SP.ContentType;\r\n                if (!contentType) {\r\n                    common.reject(deferred, `Content Type ${contentTypeName} not found`);\r\n                    return;\r\n                }\r\n                //check if the CT is already associated\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    //already associated\r\n                    deferred.resolve(listCt);\r\n                }\r\n                else {\r\n                    if (!list.get_contentTypesEnabled()) {\r\n                        list.set_contentTypesEnabled(true);//enable custom cts on the list.\r\n                    }\r\n                    var associatedCt = list.get_contentTypes().addExistingContentType(contentType);\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve(associatedCt);\r\n                        });\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ContentType>;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    listCt.deleteObject();\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    deferred.resolve(); //not found, nothing to do.\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var fields = list.get_fields();\r\n        this.context.load(list);\r\n        this.context.load(fields);\r\n        var findField = (collection: SP.FieldCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_internalName().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let field = findField(fields, fieldInternalName) as SP.Field;\r\n                if (field) {\r\n                    field.set_defaultValue(defaultValue);\r\n                    field.update()\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    common.reject(deferred, `Field ${fieldInternalName} not found`);\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n}","import common from \"./common\"\r\nimport ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class List {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"list\";\r\n    /**\r\n    * Create new list \r\n    * Example: create(context.get_web(), \"My Task List\", 107)\r\n    * templateId - See: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee541191(v%3Doffice.15)#remarks\r\n    */\r\n    public create(web: SP.Web, listName: string, templateId: number): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createList(web, listName, templateId);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public exists(web: SP.Web, listName: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.listHelper.exists(web, listName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public delete(web: SP.Web, listName: string, template: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.delete`, () => {\r\n            return common.notImplementedPromise();\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public get(web: SP.Web, listName: string): Fluent {\r\n        //TODO: test\r\n        this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getList(web, listName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.addContentTypeListAssociation`, () => {\r\n            return this.listHelper.addContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.removeContentTypeListAssociation`, () => {\r\n            return this.listHelper.removeContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.setDefaultValueOnList`, () => {\r\n            return this.listHelper.setDefaultValueOnList(web, listName, fieldInternalName, defaultValue);\r\n        });\r\n        return this.fluent;\r\n    }\r\n     /**\r\n    * Enable email alerts on a list \r\n    * Example: setAlerts(context.get_web(), \"My Task List\", true)\r\n    * Note: will not work for 2010/2013\r\n    */\r\n    public setAlerts(web: SP.Web, listName: string, enabled: boolean): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.setAlerts`, () => {\r\n            return this.listHelper.setAlerts(web, listName, enabled);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class ListItem {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"listItem\";\r\n    public update(listItem: SP.ListItem, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.update`, () => {\r\n            return this.listHelper.setListItemProperties(listItem, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public createWithContentType(web: SP.Web, listName: string, contentTypeName: string, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.createWithContentType`, () => {\r\n            return this.listHelper.createListItemWithContentTypeName(web, listName, contentTypeName, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Create new list item with optional property values\r\n    * Example: create(context.get_web(), \"MyList\", properties)\r\n    * Note: Properties are an object with Property/Value, where property\r\n    *       is the internal field name.\r\n    *       Eg; var properties = {\r\n                Title: \"My title\",\r\n                PersonOrGroupField: personValue,\r\n                MultiChoiceField: [\"Second\", \"Third\"],\r\n                ChoiceField: \"Second\",\r\n                NumberField: 1234\r\n            };\r\n            For personValue you can pass through the user Id or a SP.UserFieldValue such as:\r\n            var personValue = new SP.FieldUserValue();\r\n            personValue.set_lookupId(_spPageContextInfo.userId);\r\n    */\r\n    public create(web: SP.Web, listName: string, properties: any): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createListItem(web, listName, properties);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    /**\r\n    * Get the listitem using the ID with optional view fields\r\n    * Example: get(context.get_web(), \"MyList\", 1, [\"ID\", \"Title\"])\r\n    */\r\n    public get(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getListItemById(web, listName, id, viewFields);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Get the listitem for a File using the ID with optional view fields\r\n    * Example: getFileListItem(\"/sites/site/documents/mydoc.docx\", [\"ID\", \"Title\", \"FileLeafRef\"])\r\n    */\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getFileListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl, viewFields);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n    /**\r\n    * Delete List Item\r\n    * Example: deleteById(context.get_web(), \"MyList\", 7)\r\n    */\r\n    public deleteById(web: SP.Web, listName: string, id: number): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.deleteById`, () => {\r\n            return this.listHelper.deleteListItemById(web, listName, id);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Execute a query using supplied CAML.  \r\n    * Returns: SP.ListItemCollection\r\n    * Example: query(context.get_web(), \"MyList\", \"<View><Query><Where><In><FieldRef Name='ID' /><Values><Value Type='Number'>1</Value><Value Type='Number'>2</Value></Values></In></View></Query></Where>\")\r\n    */\r\n    public query(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, viewXml);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    \r\n}","import ListHelper from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport default class File {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"file\";\r\n\r\n    public getFile(serverRelativeUrl: string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getFile`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public checkIn(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.checkInFile`, () => {\r\n            return this.listHelper.checkInFile(web, serverRelativeUrl, comment, checkInType);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class UserHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    \r\n    public getUserByEmail(email: string): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().ensureUser(email));\r\n    }\r\n    public getUserById(id: number): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().get_siteUsers().getById(id));\r\n    }\r\n    private loadUser(user: SP.User): JQueryPromise<SP.User> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n    public getCurrentUser(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n        var deferred = $.Deferred();\r\n        var user = this.context.get_web().get_currentUser();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserProfileProperties(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n            var deferred = $.Deferred();\r\n            SP.SOD.executeFunc('userprofile', 'SP.UserProfiles.PeopleManager', () => {\r\n                var clientContext = this.context;\r\n                var currentUser = clientContext.get_web().get_currentUser();\r\n                var peopleManager = new SP.UserProfiles.PeopleManager(clientContext);\r\n                var profile = peopleManager.getMyProperties();\r\n                clientContext.load(currentUser);\r\n                clientContext.load(profile);\r\n                clientContext.executeQueryAsync(\r\n                    (sender, args) => {\r\n                        deferred.resolve(profile.get_userProfileProperties());\r\n                    },\r\n                    (sender, args) => {\r\n                        console.error(args.get_message());\r\n                        deferred.reject(sender, args);\r\n                    }\r\n                );\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserManager(): JQueryPromise<SP.User> {\r\n            var deferred = $.Deferred();\r\n            var peopleManager = new SP.UserProfiles.PeopleManager(this.context);\r\n            var profilePropertyNames = [\"Manager\"];\r\n            var user_email = this.context.get_web().get_currentUser().get_email();\r\n            var userProfilePropertiesForUser = new SP.UserProfiles.UserProfilePropertiesForUser(this.context,\r\n                \"i:0#.f|membership|\" + user_email,\r\n                profilePropertyNames);  //TODO: check for better mechanism to constructure login\r\n            var userProfileProps = peopleManager.getUserProfilePropertiesFor(userProfilePropertiesForUser);\r\n\r\n            this.context.load(userProfilePropertiesForUser);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    if (userProfileProps[0]) {\r\n                        var user = this.context.get_web().ensureUser(userProfileProps[0]);\r\n                        this.context.load(user);\r\n                        common.executeQuery(this.context)\r\n                            .fail((sender, args) => { deferred.reject(sender, args); })\r\n                            .done(() => {\r\n                                deferred.resolve(user);\r\n                            });\r\n                    } else {\r\n                        deferred.resolve(null);\r\n                    }\r\n            })\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n}","import UserHelper from \"./helper/userHelper\";\r\nimport { Fluent, Dependency } from \"./fluent\"\r\nimport common from \"./common\";\r\n\r\nexport default class User {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.userHelper = new UserHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"userProfile\";\r\n    private userHelper = null as UserHelper;\r\n    /**\r\n    * Get User by email or account name\r\n    * Example: get(\"my@email.address\")\r\n    * Example: get(\"i:0#.f|membership|my@email.address\")\r\n    */\r\n    public get(emailOrAccountName:string): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.userHelper.getUserByEmail(emailOrAccountName);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public getById(id: number): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.getById`, () => {\r\n            return this.userHelper.getUserById(id);\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public getCurrentUser(): Fluent {\r\n        this._fluent.chainAction(`${this._helperName}.getCurrentUser`, () => {\r\n            return this.userHelper.getCurrentUser();\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public getCurrentUserProfileProperties(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        this._fluent.chainAction(`${this._helperName}.getCurrentUserProfileProperties`, () => {\r\n            return this.userHelper.getCurrentUserProfileProperties();\r\n        });\r\n        return this._fluent;\r\n    }\r\n    public getCurrentUserManager(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        this._fluent.chainAction(`${this._helperName}.getCurrentUserManager`, () => {\r\n            return this.userHelper.getCurrentUserManager();\r\n        });\r\n        return this._fluent;\r\n    }\r\n}","import common from \"../common\"\r\nimport { NavigationType } from \"../fluent\";\r\n\r\nexport default class NavigationHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public deleteQuicklaunchNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_quickLaunch());\r\n    }\r\n    public deleteTopNavigationNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_topNavigationBar());\r\n    }\r\n    public deleteQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_quickLaunch(), title);\r\n    }\r\n    public deleteTopQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_topNavigationBar(), title);\r\n    }\r\n    \r\n    public setCurrentNavigation(web: SP.Web, navigationType: NavigationType, showSubsites: boolean = true, showPages:boolean = true): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        const siblingsPropertyName = \"__NavigationShowSiblings\";\r\n        const includeTypesPropertyName = \"__CurrentNavigationIncludeTypes\";\r\n        var allProperties = web.get_allProperties();\r\n        this.context.load(web);\r\n        this.context.load(allProperties);\r\n        var setOptions = () => {\r\n            if (showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"3\");\r\n            } else if (showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"2\");\r\n            }\r\n            else if (!showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"1\");\r\n            }\r\n            else if (!showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"0\");\r\n            }\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var nav = new SP.Publishing.Navigation.WebNavigationSettings(this.context, web);\r\n                switch (navigationType) {\r\n                    case NavigationType.Inherit:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.inheritFromParentWeb);\r\n                        break;\r\n                    case NavigationType.Managed:\r\n                        common.reject(deferred, \"Not implemented\");\r\n                        break;\r\n                    case NavigationType.StructuralWithSiblings:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"True\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    case NavigationType.StructuralChildrenOnly:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"False\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    default:\r\n                        common.reject(deferred, \"Unknown Navigation Type\");\r\n                }   \r\n                nav.update(null);\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n\r\n    private deleteNodes(nav: SP.NavigationNodeCollection): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    itemsToDelete.push(enumerator.get_current());\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    private deleteNode(nav: SP.NavigationNodeCollection, title: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    var node = enumerator.get_current();\r\n                    if (node.get_title() === title) {\r\n                        itemsToDelete.push(node);\r\n                    }\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public createQuicklaunchNode(web: SP.Web, title:string, url:string, asLastNode:boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_quickLaunch(), title, url, asLastNode);\r\n    }\r\n    public createTopNavigationNode(web: SP.Web, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_topNavigationBar(), title, url, asLastNode);\r\n    }\r\n    private createNode(nav:SP.NavigationNodeCollection, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        var info = new SP.NavigationNodeCreationInformation();\r\n        info.set_title(title);\r\n        info.set_url(url);\r\n        info.set_asLastNode(asLastNode);\r\n        var node = nav.add(info);\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(node);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.NavigationNode>;\r\n    }\r\n}","import common from \"./common\"\r\nimport NavigationHelper from \"./helper/navigationHelper\";\r\nimport { Fluent, NavigationLocation, NavigationType, Dependency } from \"./fluent\"\r\nexport default class Navigation {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.navigationHelper = new NavigationHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private navigationHelper = null as NavigationHelper;\r\n    private readonly _helperName: string = \"navigation\";\r\n\r\n    /**\r\n    * Create new navigation node\r\n    * Example: createNode(context.get_web(), NavigationLocation.Quicklaunch, \"Test Node\", \"/sites/mysite/pages/default.aspx\")\r\n    */\r\n    public createNode(web: SP.Web, location: NavigationLocation, title: string, url: string, asLastNode: boolean = true): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.createNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.createQuicklaunchNode(web, title, url, asLastNode);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.createTopNavigationNode(web, title, url, asLastNode);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Delete all navigation nodes for the web\r\n    * Example: deleteAllNodes(context.get_web(), NavigationLocation.Quicklaunch)\r\n    */\r\n    public deleteAllNodes(web: SP.Web, location: NavigationLocation): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.deleteAllNodes`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNodes(web);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopNavigationNodes(web);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n\r\n\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Delete all navigation nodes that match the supplied title for the web\r\n    * Example: deleteNode(context.get_web(), NavigationLocation.Quicklaunch, \"My link title\")\r\n    */\r\n    public deleteNode(web: SP.Web, location: NavigationLocation, title:string ): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.deleteNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNode(web, title);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopQuicklaunchNode(web, title);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        return this.fluent;\r\n    }\r\n    /**\r\n    * Set navigation for the web\r\n    * Example: setCurrentNavigation(context.get_web(), 3, true, true)\r\n    * Note: showSubsites and showPages is only applicable for NavigationType.StructuralChildrenOnly (3)\r\n    */\r\n    public setCurrentNavigation(web: SP.Web, type: NavigationType, showSubsites: boolean = false, showPages:boolean = false): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        this.fluent.chainAction(`${this._helperName}.setCurrentNavigation`, () => {\r\n            return this.navigationHelper.setCurrentNavigation(web, type, showSubsites, showPages);\r\n        });\r\n        return this.fluent;\r\n    }\r\n}","import common from \"../common\"\r\n\r\nexport default class PageHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createPublishingPage(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        var pageInfo = new SP.Publishing.PublishingPageInformation();\r\n        pageInfo.set_name(name);\r\n        pageInfo.set_pageLayoutListItem(listItem);\r\n        var publishingWeb = SP.Publishing.PublishingWeb.getPublishingWeb(this.context, web);\r\n        this.context.load(publishingWeb);\r\n        var publishingPage = publishingWeb.addPublishingPage(pageInfo);\r\n        this.context.load(publishingPage);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(publishingPage);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getPublishingLayout(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    \r\n\r\n}","import { Fluent, Dependency } from \"./fluent\"\r\nimport PageHelper from \"./helper/pageHelper\"\r\n\r\nexport default class PublishingPage {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.pageHelper = new PageHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private readonly _helperName: string = \"publishingPage\";\r\n    private pageHelper: PageHelper;\r\n    public create(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.pageHelper.createPublishingPage(web, name, layoutUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n    public getLayout(serverRelativeUrl:string): Fluent {\r\n        this.fluent.chainAction(`${this._helperName}.getLayout`, () => {\r\n            return this.pageHelper.getPublishingLayout(serverRelativeUrl);\r\n        });\r\n        return this.fluent;\r\n    }\r\n\r\n}","// spJsom - Fluent\r\n/// <reference path=\"../typings/@types/all.ts\" />\r\nimport Web from \"./web\"\r\nimport Permission from \"./permission\"\r\nimport List from \"./list\"\r\nimport ListItem from \"./listitem\"\r\nimport File from \"./file\"\r\nimport User from \"./user\"\r\nimport Navigation from \"./navigation\"\r\nimport PublishingPage from \"./publishingpage\"\r\nimport common from \"./common\"\r\n\r\nexport class Fluent  {\r\n    public context: SP.ClientContext;\r\n    private commands: Array<FluentCommand> = [];\r\n    private results: Array<ActionResult> = [];\r\n    private resultPromise: JQueryDeferred<any>;\r\n    private onExecuting: any;\r\n    private onExecuted: any;\r\n    private dependencies: Array<Dependency> = [];\r\n    public settings: ISettings = { timeoutMilliseconds: 5000, enableDependencyTimeout: true };\r\n    private totalCommands = 0;\r\n    withContext(context: SP.ClientContext): Fluent {\r\n        this.context = context;\r\n        return this;\r\n    }\r\n    withSettings(settings: ISettings): Fluent {\r\n        for (var setting in settings) {\r\n            if (typeof (this.settings[setting]) !== typeof (undefined)) {\r\n                this.settings[setting] = settings[setting];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    get promise(): JQueryPromise<any> {\r\n        return this.resultPromise.promise();\r\n    }\r\n    get permission(): Permission {\r\n        return new Permission(this);\r\n    }\r\n    get list(): List {\r\n        return new List(this);\r\n    }\r\n    get listItem(): ListItem {\r\n        return new ListItem(this);\r\n    }\r\n    get file(): File {\r\n        return new File(this);\r\n    }\r\n    get publishingPage(): PublishingPage {\r\n        return new PublishingPage(this);\r\n    }\r\n    get web(): Web {\r\n        return new Web(this);\r\n    }\r\n    get user(): User{\r\n        return new User(this);\r\n    }\r\n    get navigation(): Navigation {\r\n        return new Navigation(this);\r\n    }\r\n\r\n    public execute(): JQueryPromise<Array<ActionResult>> {\r\n        this.resultPromise = $.Deferred();\r\n        //The dependency timeout is fired if it takes too long to load to avoid promise never completing.\r\n        if (this.settings.enableDependencyTimeout) {\r\n            var expiry = setTimeout(() => {\r\n                common.reject(this.resultPromise, \"Timeout waiting for dependencies to load\");\r\n            }, this.settings.timeoutMilliseconds);\r\n        }\r\n        //To track progress\r\n        this.totalCommands = this.getAvailableActionCommandCount();\r\n        this.loadDependencies()\r\n            .done(() => {\r\n                this.continue();\r\n            })\r\n            .always(() => {\r\n                if (this.settings.enableDependencyTimeout) {\r\n                    clearTimeout(expiry);\r\n                }\r\n            });\r\n        return this.resultPromise.promise() as JQueryPromise<Array<ActionResult>>;\r\n    }\r\n    public onActionExecuted(onExecuted: any): Fluent {\r\n        this.onExecuted = onExecuted;\r\n        return this;\r\n    }\r\n    public onActionExecuting(onExecuting: any): Fluent {\r\n        this.onExecuting = onExecuting;\r\n        return this;\r\n    }\r\n    public when(predicate: any) {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(...command.result)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for when\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    //Similar to when, but all previous results are passed into the predicate\r\n    public whenAll(predicate: any) : Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(this.results)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenAll\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenTrue(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not true\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenTrue\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenFalse(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && !command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenFalse\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chainAction(name: string, action: any) {\r\n        var command = new ActionCommand();\r\n        command.name = name;\r\n        command.action = action;\r\n        this.commands.push(command);\r\n    }\r\n    public registerDependency(dependency: Dependency) {\r\n        if (this.dependencies.indexOf(dependency) === -1) {\r\n            this.dependencies.push(dependency);\r\n        }\r\n    }\r\n    private continue() {\r\n        if (!this.context) {\r\n            throw \"context not set, you must call withContext\";\r\n        }\r\n        var command = this.commands.shift();\r\n        if (command && command.action) {\r\n            if (command.constructor === ActionCommand) {\r\n                if (this.onExecuting) {\r\n                    let step = this.totalCommands - (this.getAvailableActionCommandCount());\r\n                    this.onExecuting((command as ActionCommand).name, step, this.totalCommands);\r\n                }\r\n            }\r\n            var promise = command.action() as JQueryPromise<any>;\r\n            promise.done((arg1, arg2, arg3, arg4, arg5, arg6, arg7) => {\r\n                if (command.constructor === ActionCommand) {\r\n                    let results = [];\r\n                    this.storeResult(arg1, results);\r\n                    this.storeResult(arg2, results);\r\n                    this.storeResult(arg3, results);\r\n                    this.storeResult(arg4, results);\r\n                    this.storeResult(arg5, results);\r\n                    this.storeResult(arg6, results);\r\n                    this.storeResult(arg7, results);\r\n                    this.addResult(command as ActionCommand, true, results);\r\n                    if (this.onExecuted) {\r\n                        this.onExecuted((command as ActionCommand).name, true, results);\r\n                    }\r\n                }\r\n                if (this.commands.length) {\r\n                    this.continue();\r\n                }\r\n                else {\r\n                    this.resolveChain();\r\n                }\r\n            })\r\n                .fail((sender, args) => {\r\n                    if (command.constructor === ActionCommand) {\r\n                        let results = [];\r\n                        this.storeResult(sender, results);\r\n                        this.storeResult(args, results);\r\n                        this.addResult(command as ActionCommand, false, results);\r\n                        this.failChain(sender, args);\r\n                        return;\r\n                    }\r\n                    this.resolveChain();\r\n                });\r\n        } else {\r\n            this.resolveChain();\r\n        }\r\n    }\r\n    private storeResult(arg: any, results: Array<any>) {\r\n        if (typeof (arg) !== typeof (undefined)) {\r\n            results.push(arg);\r\n        }\r\n    }\r\n    private resolveChain() {\r\n        this.resultPromise.resolve(this.results);\r\n    }\r\n    private failChain(sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        this.resultPromise.reject(sender, args);\r\n    }\r\n    private reject(deferred: JQueryDeferred<any>, sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        deferred.reject(sender, args);\r\n    }\r\n    private addResult(command: ActionCommand, success: boolean, results: Array<any>) {\r\n        var result = new ActionResult();\r\n        result.name = command.name;\r\n        result.success = success;\r\n        result.result = results;\r\n        this.results.push(result);\r\n    }\r\n    private loadDependencies(): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        let spDependencies = [\"SP.js\", \"SP.Runtime.js\"];\r\n        for (let i = 0; i < this.dependencies.length; i++) {\r\n            switch (this.dependencies[i]) {\r\n                case Dependency.UserProfile:\r\n                    (<any>window).LoadSodByKey(\"userprofile\");\r\n                    spDependencies.push(\"userprofile\");\r\n                    break;\r\n                case Dependency.Publishing:\r\n                    SP.SOD.registerSod('SP.Publishing.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.publishing.js'));\r\n                    spDependencies.push(\"SP.Publishing.js\");\r\n                    break;\r\n                case Dependency.Taxonomy:\r\n                    SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));\r\n                    spDependencies.push(\"sp.taxonomy.js\");\r\n                    break;\r\n                default:\r\n                    throw \"Depenency not implemented\";\r\n            }\r\n        }\r\n        SP.SOD.loadMultiple(spDependencies, () => {\r\n            deferred.resolve();\r\n        });\r\n        return deferred.promise();\r\n    }\r\n    private peekLastCommand() {\r\n        if (this.commands.length) {\r\n            return this.commands[this.commands.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private peekLastResult() {\r\n        if (this.results.length) {\r\n            return this.results[this.results.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private getAvailableActionCommandCount(): number {\r\n        var count = 0;\r\n        for (var i = 0; i < this.commands.length; i++) {\r\n            if (this.commands[i].constructor === ActionCommand) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\nexport enum NavigationLocation {\r\n    TopNavigation,\r\n    Quicklaunch\r\n}\r\nexport enum NavigationType {\r\n    Inherit,\r\n    Managed,\r\n    StructuralWithSiblings,\r\n    StructuralChildrenOnly\r\n}\r\nexport enum Dependency {\r\n    Publishing,\r\n    UserProfile,\r\n    Taxonomy\r\n}\r\nexport interface ISettings {\r\n    timeoutMilliseconds?: number,\r\n    enableDependencyTimeout?: boolean\r\n}\r\nexport class FluentCommand {\r\n    action: any;\r\n}\r\nexport class ActionCommand extends FluentCommand {\r\n    name: string;\r\n}\r\nexport class ActionResult {\r\n    name: string;\r\n    success: boolean;\r\n    result: Array<any>;\r\n}\r\nexport interface KeyValuePair {\r\n    key: string;\r\n    value: any;\r\n}\r\nexport class WhenCommand extends FluentCommand { }\r\n\r\n"],"sourceRoot":""}
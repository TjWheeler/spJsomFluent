{"version":3,"sources":["webpack://spJsom/webpack/universalModuleDefinition","webpack://spJsom/webpack/bootstrap","webpack://spJsom/./src/common.ts","webpack://spJsom/./src/file.ts","webpack://spJsom/./src/fluent.ts","webpack://spJsom/./src/helper/Client.CamlBuilder.ts","webpack://spJsom/./src/helper/listHelper.ts","webpack://spJsom/./src/helper/navigationHelper.ts","webpack://spJsom/./src/helper/pageHelper.ts","webpack://spJsom/./src/helper/permissionHelper.ts","webpack://spJsom/./src/helper/userHelper.ts","webpack://spJsom/./src/helper/webHelper.ts","webpack://spJsom/./src/list.ts","webpack://spJsom/./src/listitem.ts","webpack://spJsom/./src/navigation.ts","webpack://spJsom/./src/permission.ts","webpack://spJsom/./src/publishingpage.ts","webpack://spJsom/./src/user.ts","webpack://spJsom/./src/web.ts"],"names":[],"mappings":"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","file":"spJsomFluent.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spJsom\"] = factory();\n\telse\n\t\troot[\"spJsom\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/fluent.ts\");\n","\r\nexport class common {\r\n    public static reject(deferred: JQueryDeferred<any>, reason:string) {\r\n        deferred.reject(this, { get_message: function () { return reason; } } );\r\n    }\r\n    public static notImplementedPromise() : JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        common.reject(deferred, \"Not Implemented\");\r\n        return deferred.promise();\r\n    }\r\n    public static executeQuery = (clientContext: SP.ClientContext) => {\r\n        var deferred = $.Deferred();\r\n        clientContext.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(sender, args);\r\n            },\r\n            (sender, args) => {\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise();\r\n    };\r\n    public static FilterArray<T>(items: Array<T>, predicate: any): Array<T> {\r\n        let output = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i], i)) {\r\n                output.push(items[i]);\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class File {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"file\";\r\n\r\n    /**\r\n    * Get a file from a document library\r\n    * Result: SP.File\r\n    * Example: get(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public get(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFile(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the list item for the file\r\n    * Result: SP.ListItem\r\n    * Example: getListItem(_spPageContextInfo.siteServerRelativeUrl + \"/documents/doc.docx\")\r\n    */\r\n    public getListItem(serverRelativeUrl: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check in a file\r\n    * Result: SP.File\r\n    * Example: checkIn(SP.ClientContext.get_current().get_web(), _spPageContextInfo.webServerRelativeUrl + '/pages/mypage.aspx', \"Checked in by spJsomFluent\", SP.CheckinType.majorCheckIn)\r\n    */\r\n    public checkIn(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.checkInFile`, () => {\r\n            return this.listHelper.checkInFile(web, serverRelativeUrl, comment, checkInType);\r\n        });\r\n        \r\n    }\r\n}","// spJsom - Fluent\r\nimport { Web } from \"./web\"\r\nimport { Permission } from \"./permission\"\r\nimport { List } from \"./list\"\r\nimport { ListItem } from \"./listitem\"\r\nimport { File } from \"./file\"\r\nimport { User } from \"./user\"\r\nimport { Navigation } from \"./navigation\"\r\nimport { PublishingPage } from \"./publishingpage\"\r\nimport { common } from \"./common\"\r\n\r\nexport class Fluent  {\r\n    public context: SP.ClientContext;\r\n    private commands: Array<FluentCommand> = [];\r\n    private results: Array<ActionResult> = [];\r\n    private resultPromise: JQueryDeferred<any>;\r\n    private onExecuting: any;\r\n    private onExecuted: any;\r\n    private dependencies: Array<Dependency> = [];\r\n    public settings: ISettings = { timeoutMilliseconds: 5000, enableDependencyTimeout: true };\r\n    private totalCommands = 0;\r\n    public withContext(context: SP.ClientContext): Fluent {\r\n        this.context = context;\r\n        return this;\r\n    }\r\n    public withSettings(settings: ISettings): Fluent {\r\n        for (var setting in settings) {\r\n            if (typeof (this.settings[setting]) !== typeof (undefined)) {\r\n                this.settings[setting] = settings[setting];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    public withDependency(dependency: Dependency): Fluent {\r\n        this.registerDependency(dependency);\r\n        return this;\r\n    }\r\n    get promise(): JQueryPromise<any> {\r\n        return this.resultPromise.promise();\r\n    }\r\n    get permission(): Permission {\r\n        return new Permission(this);\r\n    }\r\n    get list(): List {\r\n        return new List(this);\r\n    }\r\n    get listItem(): ListItem {\r\n        return new ListItem(this);\r\n    }\r\n    get file(): File {\r\n        return new File(this);\r\n    }\r\n    get publishingPage(): PublishingPage {\r\n        return new PublishingPage(this);\r\n    }\r\n    get web(): Web {\r\n        return new Web(this);\r\n    }\r\n    get user(): User{\r\n        return new User(this);\r\n    }\r\n    get navigation(): Navigation {\r\n        return new Navigation(this);\r\n    }\r\n\r\n    public execute(): JQueryPromise<Array<ActionResult>> {\r\n        this.resultPromise = $.Deferred();\r\n        //The dependency timeout is fired if it takes too long to load to avoid promise never completing.\r\n        if (this.settings.enableDependencyTimeout) {\r\n            var expiry = setTimeout(() => {\r\n                common.reject(this.resultPromise, \"Timeout waiting for dependencies to load\");\r\n            }, this.settings.timeoutMilliseconds);\r\n        }\r\n        //To track progress\r\n        this.totalCommands = this.getAvailableActionCommandCount();\r\n        this.loadDependencies()\r\n            .done(() => {\r\n                this.continue();\r\n            })\r\n            .always(() => {\r\n                if (this.settings.enableDependencyTimeout) {\r\n                    clearTimeout(expiry);\r\n                }\r\n            });\r\n        return this.resultPromise.promise() as JQueryPromise<Array<ActionResult>>;\r\n    }\r\n    public onActionExecuted(onExecuted: any): Fluent {\r\n        this.onExecuted = onExecuted;\r\n        return this;\r\n    }\r\n    public onActionExecuting(onExecuting: any): Fluent {\r\n        this.onExecuting = onExecuting;\r\n        return this;\r\n    }\r\n    public when(predicate: any) {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(...command.result)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for when\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    //Similar to when, but all previous results are passed into the predicate\r\n    public whenAll(predicate: any) : Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (predicate(this.results)) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Predicate returned false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenAll\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenTrue(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not true\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenTrue\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public whenFalse(): Fluent {\r\n        if (this.peekLastCommand() && this.peekLastCommand().constructor !== ActionCommand) {\r\n            throw \"Illegal operation: The last command must be an ActionCommand\";\r\n        }\r\n        var command = new WhenCommand();\r\n        command.action = () => {\r\n            var deferred = $.Deferred();\r\n            var command = this.peekLastResult();\r\n            if (command) {\r\n                if (!command.success) {\r\n                    throw \"Illegal operation: The last command should have succeeded for this call to have been made.  This is an issue in the fluent api\";\r\n                }\r\n                if (command.result && command.result.length && !command.result[0]) {\r\n                    deferred.resolve();\r\n                }\r\n                else {\r\n                    this.reject(deferred, this, \"Result is not false\");\r\n                }\r\n            } else {\r\n                this.failChain(this, \"No action to process for whenFalse\");\r\n            }\r\n            return deferred.promise();\r\n        };\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chainAction(name: string, action: any) : Fluent {\r\n        var command = new ActionCommand();\r\n        command.name = name;\r\n        command.action = action;\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public chain(command: ActionCommand): Fluent {\r\n        this.commands.push(command);\r\n        return this;\r\n    }\r\n    public static executeQuery(context: SP.ClientContext) {\r\n        return common.executeQuery(context);\r\n    }\r\n    public registerDependency(dependency: Dependency) {\r\n        if (this.dependencies.indexOf(dependency) === -1) {\r\n            this.dependencies.push(dependency);\r\n        }\r\n    }\r\n    private continue() {\r\n        if (!this.context) {\r\n            throw \"context not set, you must call withContext\";\r\n        }\r\n        var command = this.commands.shift();\r\n        if (command && command.action) {\r\n            if (command.constructor === ActionCommand) {\r\n                if (this.onExecuting) {\r\n                    let step = this.totalCommands - (this.getAvailableActionCommandCount());\r\n                    this.onExecuting((command as ActionCommand).name, step, this.totalCommands);\r\n                }\r\n            }\r\n            var promise = command.action() as JQueryPromise<any>;\r\n            promise.done((arg1, arg2, arg3, arg4, arg5, arg6, arg7) => {\r\n                if (command.constructor === ActionCommand) {\r\n                    let results = [];\r\n                    this.storeResult(arg1, results);\r\n                    this.storeResult(arg2, results);\r\n                    this.storeResult(arg3, results);\r\n                    this.storeResult(arg4, results);\r\n                    this.storeResult(arg5, results);\r\n                    this.storeResult(arg6, results);\r\n                    this.storeResult(arg7, results);\r\n                    this.addResult(command as ActionCommand, true, results);\r\n                    if (this.onExecuted) {\r\n                        this.onExecuted((command as ActionCommand).name, true, results);\r\n                    }\r\n                }\r\n                if (this.commands.length) {\r\n                    this.continue();\r\n                }\r\n                else {\r\n                    this.resolveChain();\r\n                }\r\n            })\r\n                .fail((sender, args) => {\r\n                    if (command.constructor === ActionCommand) {\r\n                        let results = [];\r\n                        this.storeResult(sender, results);\r\n                        this.storeResult(args, results);\r\n                        this.addResult(command as ActionCommand, false, results);\r\n                        if (this.onExecuted) {\r\n                            this.onExecuted((command as ActionCommand).name, false, {sender:sender, args:args});\r\n                        }\r\n                        this.failChain(sender, args);\r\n                        return;\r\n                    }\r\n                    this.resolveChain();\r\n                });\r\n        } else {\r\n            this.resolveChain();\r\n        }\r\n    }\r\n    private storeResult(arg: any, results: Array<any>) {\r\n        if (typeof (arg) !== typeof (undefined)) {\r\n            results.push(arg);\r\n        }\r\n    }\r\n    private resolveChain() {\r\n        this.resultPromise.resolve(this.results);\r\n    }\r\n    private failChain(sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        this.resultPromise.reject(sender, args);\r\n    }\r\n    private reject(deferred: JQueryDeferred<any>, sender, args) {\r\n        if (typeof (args) == \"string\") {\r\n            args = { get_message: () => { return args } };\r\n        }\r\n        deferred.reject(sender, args);\r\n    }\r\n    private addResult(command: ActionCommand, success: boolean, results: Array<any>) {\r\n        var result = new ActionResult();\r\n        result.name = command.name;\r\n        result.success = success;\r\n        result.result = results;\r\n        this.results.push(result);\r\n    }\r\n    private loadDependencies(): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        let spDependencies = [\"SP.js\", \"SP.Runtime.js\"];\r\n        for (let i = 0; i < this.dependencies.length; i++) {\r\n            switch (this.dependencies[i]) {\r\n                case Dependency.UserProfile:\r\n                    (<any>window).LoadSodByKey(\"userprofile\");\r\n                    spDependencies.push(\"userprofile\");\r\n                    break;\r\n                case Dependency.Publishing:\r\n                    SP.SOD.registerSod('SP.Publishing.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.publishing.js'));\r\n                    spDependencies.push(\"SP.Publishing.js\");\r\n                    break;\r\n                case Dependency.Taxonomy:\r\n                    SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));\r\n                    spDependencies.push(\"sp.taxonomy.js\");\r\n                    break;\r\n                default:\r\n                    throw \"Depenency not implemented\";\r\n            }\r\n        }\r\n        SP.SOD.loadMultiple(spDependencies, () => {\r\n            deferred.resolve();\r\n        });\r\n        return deferred.promise();\r\n    }\r\n    private peekLastCommand() {\r\n        if (this.commands.length) {\r\n            return this.commands[this.commands.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private peekLastResult() {\r\n        if (this.results.length) {\r\n            return this.results[this.results.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n    private getAvailableActionCommandCount(): number {\r\n        var count = 0;\r\n        for (var i = 0; i < this.commands.length; i++) {\r\n            if (this.commands[i].constructor === ActionCommand) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\nexport enum NavigationLocation {\r\n    TopNavigation,\r\n    Quicklaunch\r\n}\r\nexport enum NavigationType {\r\n    Inherit,\r\n    Managed,\r\n    StructuralWithSiblings,\r\n    StructuralChildrenOnly\r\n}\r\nexport enum Dependency {\r\n    Publishing,\r\n    UserProfile,\r\n    Taxonomy\r\n}\r\nexport interface ISettings {\r\n    timeoutMilliseconds?: number,\r\n    enableDependencyTimeout?: boolean\r\n}\r\nexport class FluentCommand {\r\n    action: any;\r\n}\r\nexport class ActionCommand extends FluentCommand {\r\n    name: string;\r\n}\r\nexport class ActionResult {\r\n    name: string;\r\n    success: boolean;\r\n    result: Array<any>;\r\n}\r\nexport interface KeyValuePair {\r\n    key: string;\r\n    value: any;\r\n}\r\nexport class WhenCommand extends FluentCommand { }\r\n\r\n","\"use strict\";   \r\n/*  Script: Client.CamlBuilder\r\n    By: Tim Wheeler\r\n    Version: v7 - Mar 2019\r\n        \r\n    Notes: Date rage overlap query and scope not tested.\r\n        \r\n    TypeScript Example:\r\n        var myAppData = myAppData || {};\r\n(data => {\r\n    var queryContext;\r\n    var listName = \"Tasks\";\r\n    data.query = () => {\r\n        queryContext = {};\r\n        var camlBuilder = new CamlBuilder();\r\n        camlBuilder.addViewFields([\"Title\", \"Priority\"]);\r\n        camlBuilder.addOrderBy(\"DueDate\", false);\r\n        camlBuilder.rowLimit = 4;\r\n        camlBuilder.addDateTimeClause(CamlOperator.Geq, \"DueDate\", camlBuilder.addDaysToDate(new Date(), -7).toISOString(), false);\r\n        camlBuilder.addDateTimeClause(CamlOperator.Leq, \"DueDate\", camlBuilder.addDaysToDate(new Date(), 7).toISOString(), false);\r\n    \r\n        var clientContext = SP.ClientContext.get_current();\r\n        var ctx = clientContext;\r\n        var list = ctx.get_web().get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        query.set_viewXml(camlBuilder.viewXml);\r\n        queryContext.items = list.getItems(query);\r\n        ctx.load(queryContext.items);\r\n        queryContext.list = list;\r\n        queryContext.clientContext = clientContext;\r\n        clientContext.executeQueryAsync(onQuerySucceeded, onQueryFailed);\r\n    \r\n    };\r\n    \r\n    function onQuerySucceeded() {\r\n        var items = queryContext.items;\r\n        var listItemInfo = \"\";\r\n        var listItemEnumerator = items.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n            var listItem = listItemEnumerator.get_current();\r\n    \r\n            listItemInfo += '\\nTitle: ' + listItem.get_item('Title');\r\n            listItemInfo += ' Overdue: ' + listItem.get_item('Overdue');\r\n        }\r\n        console.log('success ' + listItemInfo);\r\n    }\r\n    function onQueryFailed(sender, args) {\r\n        alert('Request failed. ' + args.get_message() + '\\n' + args.get_stackTrace());\r\n    }\r\n})(myAppData);\r\n*/\r\nexport interface ICamlBuilder {\r\n    query: string;\r\n    viewXml: string;\r\n    viewScope: string;\r\n    viewFields: string;\r\n    totalClauses: number;\r\n    rowLimit: number;\r\n    begin(requireAll: boolean);\r\n    addNullClause(fieldRef: string);\r\n    addTextClause(operation: CamlOperator, fieldRef: string, value: string);\r\n    addNumberClause(operation: CamlOperator, fieldRef: string, value: number);\r\n    addDateTimeClause(operation: CamlOperator, fieldRef: string, value: string, includeTime: boolean);\r\n    addLookupClause(operation: CamlOperator, fieldRef: string, value: string, valueType: string);\r\n    recurrenceQuery(overlapType: EventRecurranceOverlap);\r\n    addViewField(fieldRef: string);\r\n    addViewFields(fieldRefs: Array<string>);\r\n    addGroupByField(fieldRef: string);\r\n    addGroupByFields(fieldRefs: Array<string>);\r\n    addOrderBy(fieldRef: string, ascending: boolean);\r\n    addDaysToDate(date, days);\r\n}\r\n\r\n/// <summary>\r\n///     CAML Operations\r\n/// </summary>\r\nexport enum CamlOperator {\r\n    Contains,\r\n    BeginsWith,\r\n    Eq,\r\n    Geq,\r\n    Leq,\r\n    Lt,\r\n    Gt,\r\n    Neq,\r\n    DateRangesOverlap,\r\n    IsNotNull,\r\n    IsNull\r\n}\r\n\r\nexport enum EventRecurranceOverlap {\r\n    Now,\r\n    Today,\r\n    Week,\r\n    Month,\r\n    Year\r\n}\r\nexport enum AggregationType {\r\n    SUM,\r\n    COUNT,\r\n    AVG,\r\n    MAX,\r\n    MIN,\r\n    STDEV,\r\n    VAR\r\n}\r\nexport class StringBuilder {\r\n    value: string = \"\";\r\n    add(value: string) {\r\n        this.value += value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\nexport interface OdataItem {\r\n    property: string;\r\n    name: string;\r\n    value: any;\r\n}\r\nexport interface OdataPair {\r\n    left: OdataPair;\r\n    right: OdataPair;\r\n    type: string;\r\n    func: string;\r\n    property: string;\r\n    name: string;\r\n    value: any;\r\n    args: Array<OdataPair>;\r\n}\r\nexport class CamlBuilder implements ICamlBuilder {\r\n    constructor() {\r\n        this.begin(true);\r\n    }\r\n    private camlClauses: Array<string> = [];\r\n    private orderByFields: Array<OrderBy> = [];\r\n    private requireAll: boolean = true;\r\n    private viewFieldsString: string = \"\";\r\n    private groupByFieldsString: string = \"\";\r\n    private aggregationFieldsString: string = \"\";\r\n    private recurrence: string;\r\n    private directCaml: string;\r\n    private queryOptions: string;\r\n    rowLimit: number;\r\n    viewScope: string;\r\n\r\n    get query(): string {\r\n        return this.buildQuery();\r\n    }\r\n    get viewFields(): string {\r\n        return this.viewFieldsString;\r\n    }\r\n    get totalClauses(): number {\r\n        return this.camlClauses.length;\r\n    }\r\n    setFilter(caml: string) {\r\n            \r\n        var hasWhereClause = caml.indexOf(\"<Where>\") === 0;\r\n        var sb = new StringBuilder();\r\n        if (!hasWhereClause) {\r\n            sb.add(\"<Where>\");\r\n        }\r\n        sb.add(caml);\r\n        if (!hasWhereClause) {\r\n            sb.add(\"</Where>\");\r\n        }\r\n        this.directCaml = sb.toString();\r\n    }\r\n    private buildQuery(): string {\r\n        if (this.recurrence) {\r\n            return `<Where>${this.recurrence}</Where>`;\r\n        }\r\n        var query = \"\";\r\n        var openOperators = 0;\r\n        if (this.directCaml) {\r\n            query += this.directCaml;\r\n        } else if (!this.directCaml && this.camlClauses.length > 0) {\r\n            query += \"<Where>\";\r\n\r\n            //When we have just one clause we can't use AND or OR.\r\n            if (this.camlClauses.length > 1) {\r\n                let totalCamlPairs = this.camlClauses.length - 1;\r\n                while (totalCamlPairs > 0) {\r\n                    query += (this.requireAll ? \"<And>\" : \"<Or>\");\r\n                    totalCamlPairs--;\r\n                    openOperators++;\r\n                }\r\n            }\r\n            var clausesAdded = 0;\r\n\r\n            for (let i = 0; i < this.camlClauses.length; i++) {\r\n                const clause = this.camlClauses[i];\r\n                query += clause;\r\n                clausesAdded++;\r\n                if (clausesAdded > 1) {\r\n                    query += this.requireAll ? \"</And>\" : \"</Or>\";\r\n                    openOperators--;\r\n                }\r\n            }\r\n            query += \"</Where>\";\r\n        }\r\n        if (this.orderByFields.length > 0) {\r\n            query += \"<OrderBy>\";\r\n            for (let i = 0; i < this.orderByFields.length; i++) {\r\n                var item = this.orderByFields[i];\r\n                query += `<FieldRef Name=\"${item.fieldRef}\" Ascending=\"${item.ascending ? \"TRUE\" : \"FALSE\"}\" />`;\r\n            }\r\n            query += \"</OrderBy>\";\r\n        }\r\n        return query;\r\n    }\r\n    get viewXml(): string {\r\n        var viewFields = \"\";\r\n        if (this.viewFields) {\r\n            viewFields = `<ViewFields>${this.viewFields}</ViewFields>`;\r\n        }\r\n        var groupBy = \"\";\r\n        if (this.groupByFieldsString) {\r\n            groupBy = `<GroupBy Collapse=\"TRUE\" GroupLimit=\"1999\">${this.groupByFieldsString}</GroupBy>`;\r\n        }\r\n        var orderBy = \"\";\r\n        if (this.orderByFields && this.orderByFields.length) {\r\n            orderBy = `<OrderBy>`;\r\n            for (let i = 0; i < this.orderByFields.length; i++) {\r\n                orderBy += `<FieldRef Name=\"${this.orderByFields[i].fieldRef}\" Ascending=\"${this.orderByFields[i].ascending ? 'TRUE' : 'FALSE'}\"/>`;\r\n            }\r\n            orderBy += `</OrderBy>`;\r\n        }\r\n        var aggregations = \"\";\r\n        if (this.aggregationFieldsString) {\r\n            aggregations = `<Aggregations Value=\"On\">${this.aggregationFieldsString}</Aggregations>`;\r\n        }\r\n        var queryOptionText = \"\";\r\n        if (this.queryOptions) {\r\n            queryOptionText = `<QueryOptions>\r\n                ${this.queryOptions}\r\n            </QueryOptions>`;\r\n        }\r\n        return `<View${this.viewScope ? \" \" + this.viewScope : \"\"}>${viewFields}<Query>${groupBy}${(this.orderByFields && this.orderByFields.length > 0) || this.totalClauses > 0 || this.directCaml ? this.query : \"\"}${orderBy}</Query>${queryOptionText}${aggregations}${this.rowLimit ? \"<RowLimit>\" + this.rowLimit + \"</RowLimit>\" : \"\"}</View>`;\r\n    }\r\n\r\n    begin(requireAll: boolean) {\r\n        this.camlClauses = [];\r\n        this.requireAll = requireAll;\r\n        this.recurrence = null;\r\n        this.viewFieldsString = \"\";\r\n        this.orderByFields = [];\r\n        this.directCaml = null;\r\n    }\r\n\r\n    getNullClause(fieldRef: string) {\r\n        var retVal = \"\";\r\n        if (fieldRef) {\r\n            retVal = `<IsNull><FieldRef Name=\"${fieldRef}\" /></IsNull>`;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    getClause(operation: CamlOperator, fieldRef: string, value: string, valueType: string): string {\r\n        var retVal = `<${CamlOperator[operation]}><FieldRef Name=\"${fieldRef}\" /><Value Type=\"${valueType}\">${value}</Value></${CamlOperator[operation]}>`;\r\n        return retVal;\r\n    }\r\n    getDateTimeClause(operation: CamlOperator, fieldRef: string, value: string, includeTime: boolean) {\r\n        var retVal = `<${CamlOperator[operation]}><FieldRef Name=\"${fieldRef}\" /><Value Type=\"DateTime\" ${includeTime ? \"IncludeTimeValue='TRUE'\" : \"\"}>${value}</Value></${CamlOperator[operation]}>`;\r\n        return retVal;\r\n    }\r\n    addNullClause(fieldRef: string) {\r\n        this.camlClauses.push(this.getNullClause(fieldRef));\r\n    }\r\n    addTextClause(operation: CamlOperator, fieldRef: string, value: string) {\r\n        this.camlClauses.push(this.getClause(operation, fieldRef, value, \"Text\"));\r\n    }\r\n    addBooleanClause(operation: CamlOperator, fieldRef: string, value: boolean) {\r\n        this.camlClauses.push(this.getClause(operation, fieldRef, value ? \"1\" : \"0\", \"Integer\"));\r\n    }\r\n    addNumberClause(operation: CamlOperator, fieldRef: string, value: number) {\r\n        this.camlClauses.push(this.getClause(operation, fieldRef, value.toString(), \"Number\")); //TODO: verify type\r\n    }\r\n    addDateTimeClause(operation: CamlOperator, fieldRef: string, value: string, includeTime: boolean) {\r\n        this.camlClauses.push(this.getDateTimeClause(operation, fieldRef, value, includeTime));\r\n    }\r\n\r\n    addLookupClause(operation: CamlOperator, fieldRef: string, value: string, valueType: string) {\r\n        var clause = `<${CamlOperator[operation]}><FieldRef Name=\"${fieldRef}\" LookupId=\"True\" /><Value Type=\"${valueType}\">${value}</Value></${CamlOperator[operation]}>`;\r\n        this.camlClauses.push(clause);\r\n    }\r\n    addAggregation(fieldRef: string, aggregationType: AggregationType) {\r\n        this.aggregationFieldsString = this.aggregationFieldsString + `<FieldRef Name=\"${fieldRef.replace(\" \", \"_x0020_\")}\" Type=\"${AggregationType[aggregationType]}\" />`;\r\n    }\r\n    recurrenceQuery(overlapType: EventRecurranceOverlap) {\r\n        this.recurrence = `<DateRangesOverlap><FieldRef Name=\"EventDate\"/><FieldRef Name=\"EndDate\"/><FieldRef Name=\"RecurrenceID\"/><Value><${EventRecurranceOverlap[overlapType]}/></Value></DateRangesOverlap>`;\r\n        this.queryOptions += \r\n            `<CalendarDate>2018-01-01T12:00:00Z</CalendarDate>\r\n            <RecurrencePatternXMLVersion>v3</RecurrencePatternXMLVersion>\r\n            <ExpandRecurrence>TRUE</ExpandRecurrence>`;\r\n    }\r\n    addViewField(fieldRef: string) {\r\n        this.viewFieldsString = this.viewFieldsString + `<FieldRef Name=\"${fieldRef.replace(\" \", \"_x0020_\")}\"/>`;\r\n    }\r\n    addViewFields(fieldRefs: Array<string>) {\r\n        for (var i = 0; i < fieldRefs.length; i++) {\r\n            this.addViewField(fieldRefs[i]);\r\n        }\r\n    }\r\n    addGroupByField(fieldRef: string) {\r\n        this.groupByFieldsString = this.groupByFieldsString + `<FieldRef Name=\"${fieldRef.replace(\" \", \"_x0020_\")}\"/>`;\r\n    }\r\n    addGroupByFields(fieldRefs: Array<string>) {\r\n        for (var i = 0; i < fieldRefs.length; i++) {\r\n            this.addGroupByField(fieldRefs[i]);\r\n        }\r\n    }\r\n    addOrderBy(fieldRef: string, ascending: boolean) {\r\n        var orderBy = new OrderBy();\r\n        orderBy.fieldRef = fieldRef;\r\n        orderBy.ascending = ascending;\r\n        this.orderByFields.push(orderBy);\r\n    }\r\n    addDaysToDate(date, days) {\r\n        date.setDate(date.getDate() + days);\r\n        return date;\r\n    }\r\n        \r\n}\r\nexport class OrderBy {\r\n    fieldRef: string;\r\n    ascending: boolean;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { common } from \"../common\"\r\n\r\nexport class ListHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n\r\n    public createList(web: SP.Web, listName: string, templateId: number): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = null as SP.List;\r\n        var info = new SP.ListCreationInformation();\r\n        info.set_title(listName);\r\n        info.set_templateType(templateId);\r\n        var list = web.get_lists().add(info);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public setAlerts(web: SP.Web, listName: string, enabled:boolean): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        (<any>list).set_enableAssignToEmail(enabled); //Not in typescript definitions currently.  //TODO: test \r\n        list.update();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public setListItemProperties(listItem: SP.ListItem, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public exists(web: SP.Web, listName: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var lists = web.get_lists();\r\n        this.context.load(lists);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                for (var i = 0; i < lists.get_count(); i++) {\r\n                    if (lists.getItemAtIndex(i).get_title().toLowerCase() === listName.toLowerCase()) {\r\n                        deferred.resolve(true);\r\n                        return;\r\n                    }\r\n                }\r\n                deferred.resolve(false);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public createListItemWithContentTypeName(web: SP.Web, listName: string, contentTypeName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n        var listContentTypes = list.get_contentTypes();\r\n        clientContext.load(listContentTypes);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var contentTypeId = null;\r\n                for (let i = 0; i < listContentTypes.get_count(); i++) {\r\n                    let contentType = listContentTypes.getItemAtIndex(i) as SP.ContentType;\r\n                    if (contentType.get_name() === contentTypeName) {\r\n                        contentTypeId = contentType.get_id().get_stringValue();\r\n                        break;\r\n                    }\r\n                }\r\n                var listItem = list.addItem(itemCreateInfo);\r\n                if (contentTypeId) {\r\n                    listItem.set_item('ContentTypeId', contentTypeId);\r\n                }\r\n                for (var propertyName in properties) {\r\n                    if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                        listItem.set_item(propertyName, properties[propertyName]);\r\n                    }\r\n                }\r\n                listItem.update();\r\n                clientContext.load(listItem);\r\n                common.executeQuery(clientContext)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve(listItem);\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n\r\n    }\r\n    public createListItem(web: SP.Web, listName: string, properties: any): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var clientContext = this.context;\r\n        var list = web.get_lists().getByTitle(listName) as SP.List;\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n        var contentTypeId = null;\r\n        var listItem = list.addItem(itemCreateInfo);\r\n        //TODO: validate this works with People, taxonomy and lookup fields.\r\n        for (var propertyName in properties) {\r\n            if (typeof (properties[propertyName]) !== typeof (undefined)) {\r\n                listItem.set_item(propertyName, properties[propertyName]);\r\n            }\r\n        }\r\n        listItem.update();\r\n        clientContext.load(listItem);\r\n        common.executeQuery(clientContext)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n   \r\n    private loadListItem(listItem: SP.ListItem, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        if (viewFields && viewFields.length) {\r\n            this.context.load(listItem, viewFields as any);\r\n        } else {\r\n            this.context.load(listItem);\r\n        }\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public getFile(serverRelativeUrl: string): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public checkInFile(web: SP.Web, serverRelativeUrl: string, comment: string, checkInType: SP.CheckinType): JQueryPromise<SP.File> {\r\n        var deferred = $.Deferred();\r\n        var file = web.getFileByServerRelativeUrl(serverRelativeUrl);\r\n        this.context.load(file);\r\n        file.checkIn(comment, checkInType);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(file);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.File>;\r\n    }\r\n    public getList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public deleteList(web: SP.Web, listName: string): JQueryPromise<SP.List> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        this.context.load(list);\r\n        list.deleteObject();\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.List>;\r\n    }\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        return this.loadListItem(listItem);\r\n    }\r\n    public getListItemById(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): JQueryPromise<SP.ListItem> {\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        return this.loadListItem(listItem, viewFields);\r\n    }\r\n\r\n    public deleteListItemById(web: SP.Web, listName: string, id: number): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var listItem = web.get_lists().getByTitle(listName).getItemById(id);\r\n        this.context.load(listItem);\r\n        listItem.deleteObject(); \r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public getListItems(web: SP.Web, listName: string, viewXml: string): JQueryPromise<SP.ListItemCollection> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var query = new SP.CamlQuery();\r\n        if (!viewXml) {\r\n            viewXml = \"<View><Query></Query></Where>\";\r\n        }\r\n        query.set_viewXml(viewXml);\r\n        var listItems = list.getItems(query);\r\n        this.context.load(listItems);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItems);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItemCollection>;\r\n    }\r\n    \r\n    \r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<SP.ContentType> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        \r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var contentTypes = this.context.get_site().get_rootWeb().get_contentTypes();\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        this.context.load(contentTypes);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let contentType = findContentType(contentTypes, contentTypeName) as SP.ContentType;\r\n                if (!contentType) {\r\n                    common.reject(deferred, `Content Type ${contentTypeName} not found`);\r\n                    return;\r\n                }\r\n                //check if the CT is already associated\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    //already associated\r\n                    deferred.resolve(listCt);\r\n                }\r\n                else {\r\n                    if (!list.get_contentTypesEnabled()) {\r\n                        list.set_contentTypesEnabled(true);//enable custom cts on the list.\r\n                    }\r\n                    var associatedCt = list.get_contentTypes().addExistingContentType(contentType);\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve(associatedCt);\r\n                        });\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ContentType>;\r\n    }\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var listCts = list.get_contentTypes();\r\n        this.context.load(list);\r\n        this.context.load(listCts);\r\n        var findContentType = (collection: SP.ContentTypeCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_name().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let listCt = findContentType(listCts, contentTypeName) as SP.ContentType;\r\n                if (listCt) {\r\n                    listCt.deleteObject();\r\n                    list.update();\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    deferred.resolve(); //not found, nothing to do.\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var list = web.get_lists().getByTitle(listName);\r\n        var fields = list.get_fields();\r\n        this.context.load(list);\r\n        this.context.load(fields);\r\n        var findField = (collection: SP.FieldCollection, name: string) => {\r\n            for (let i = 0; i < collection.get_count(); i++) {\r\n                if (collection.getItemAtIndex(i).get_internalName().toLowerCase() === name.toLowerCase()) {\r\n                    return collection.getItemAtIndex(i);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                let field = findField(fields, fieldInternalName) as SP.Field;\r\n                if (field) {\r\n                    field.set_defaultValue(defaultValue);\r\n                    field.update()\r\n                    common.executeQuery(this.context)\r\n                        .fail((sender, args) => { deferred.reject(sender, args); })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                }\r\n                else {\r\n                    common.reject(deferred, `Field ${fieldInternalName} not found`);\r\n                }\r\n            });\r\n        return deferred.promise();\r\n    }\r\n}","import { common } from \"../common\"\r\nimport { NavigationType } from \"../fluent\";\r\n\r\nexport class NavigationHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public deleteQuicklaunchNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_quickLaunch());\r\n    }\r\n    public deleteTopNavigationNodes(web: SP.Web): JQueryPromise<any> {\r\n        return this.deleteNodes(web.get_navigation().get_topNavigationBar());\r\n    }\r\n    public deleteQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_quickLaunch(), title);\r\n    }\r\n    public deleteTopQuicklaunchNode(web: SP.Web, title: string): JQueryPromise<any> {\r\n        return this.deleteNode(web.get_navigation().get_topNavigationBar(), title);\r\n    }\r\n    \r\n    public setCurrentNavigation(web: SP.Web, navigationType: NavigationType, showSubsites: boolean = true, showPages:boolean = true): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        const siblingsPropertyName = \"__NavigationShowSiblings\";\r\n        const includeTypesPropertyName = \"__CurrentNavigationIncludeTypes\";\r\n        var allProperties = web.get_allProperties();\r\n        this.context.load(web);\r\n        this.context.load(allProperties);\r\n        var setOptions = () => {\r\n            if (showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"3\");\r\n            } else if (showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"2\");\r\n            }\r\n            else if (!showPages && showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"1\");\r\n            }\r\n            else if (!showPages && !showSubsites) {\r\n                allProperties.set_item(includeTypesPropertyName, \"0\");\r\n            }\r\n        };\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var nav = new SP.Publishing.Navigation.WebNavigationSettings(this.context, web);\r\n                switch (navigationType) {\r\n                    case NavigationType.Inherit:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.inheritFromParentWeb);\r\n                        break;\r\n                    case NavigationType.Managed:\r\n                        common.reject(deferred, \"Not implemented\");\r\n                        break;\r\n                    case NavigationType.StructuralWithSiblings:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"True\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    case NavigationType.StructuralChildrenOnly:\r\n                        nav.get_currentNavigation().set_source(SP.Publishing.Navigation.StandardNavigationSource.portalProvider);\r\n                        allProperties.set_item(siblingsPropertyName, \"False\");\r\n                        setOptions();\r\n                        web.update();\r\n                        break;\r\n                    default:\r\n                        common.reject(deferred, \"Unknown Navigation Type\");\r\n                }   \r\n                nav.update(null);\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n\r\n    private deleteNodes(nav: SP.NavigationNodeCollection): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    itemsToDelete.push(enumerator.get_current());\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    private deleteNode(nav: SP.NavigationNodeCollection, title: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                var enumerator = nav.getEnumerator();\r\n                var itemsToDelete = [];\r\n                while (enumerator.moveNext()) {\r\n                    var node = enumerator.get_current();\r\n                    if (node.get_title() === title) {\r\n                        itemsToDelete.push(node);\r\n                    }\r\n                }\r\n                for (let i = 0; i < itemsToDelete.length; i++) {\r\n                    itemsToDelete[i].deleteObject();\r\n                }\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public createQuicklaunchNode(web: SP.Web, title:string, url:string, asLastNode:boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_quickLaunch(), title, url, asLastNode);\r\n    }\r\n    public createTopNavigationNode(web: SP.Web, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        return this.createNode(web.get_navigation().get_topNavigationBar(), title, url, asLastNode);\r\n    }\r\n    private createNode(nav:SP.NavigationNodeCollection, title: string, url: string, asLastNode: boolean = true): JQueryPromise<SP.NavigationNode> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(nav);\r\n        var info = new SP.NavigationNodeCreationInformation();\r\n        info.set_title(title);\r\n        info.set_url(url);\r\n        info.set_asLastNode(asLastNode);\r\n        var node = nav.add(info);\r\n        this.context.load(nav);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(node);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.NavigationNode>;\r\n    }\r\n}","import { common } from \"../common\"\r\nimport * as spData from \"./Client.CamlBuilder\"\r\nexport class PageHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public createPublishingPage(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<SP.Publishing.PublishingPage> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        var pageInfo = new SP.Publishing.PublishingPageInformation();\r\n        pageInfo.set_name(name);\r\n        pageInfo.set_pageLayoutListItem(listItem);\r\n        var publishingWeb = SP.Publishing.PublishingWeb.getPublishingWeb(this.context, web);\r\n        this.context.load(publishingWeb);\r\n        var publishingPage = publishingWeb.addPublishingPage(pageInfo);\r\n        this.context.load(publishingPage);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(publishingPage);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.Publishing.PublishingPage>;\r\n    }\r\n    public getPublishingLayout(serverRelativeUrl: string): JQueryPromise<SP.ListItem> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(serverRelativeUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(listItem);\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.ListItem>;\r\n    }\r\n    public setLayout(web: SP.Web, name: string, layoutUrl: string): JQueryPromise<any> {\r\n        var deferred = $.Deferred();\r\n        var file = this.context.get_site().get_rootWeb().getFileByServerRelativeUrl(layoutUrl);\r\n        var listItem = file.get_listItemAllFields();\r\n        this.context.load(listItem);\r\n\r\n        var camlBuilder = new spData.CamlBuilder();\r\n        camlBuilder.addTextClause(spData.CamlOperator.Eq, \"FileLeafRef\", name);\r\n        var list = web.get_lists().getByTitle(\"Pages\");\r\n        var query = new SP.CamlQuery();\r\n        query.set_viewXml(camlBuilder.viewXml);\r\n        var pages = list.getItems(query);\r\n        this.context.load(pages);\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                if (pages.get_count() === 0) {\r\n                    deferred.reject(this, { get_message: () => { return \"Page not found\" } });\r\n                }\r\n                var page = pages.getItemAtIndex(0);\r\n                page.set_item(\"PublishingPageLayout\", layoutUrl);\r\n                page.update();\r\n                common.executeQuery(this.context)\r\n                    .fail((sender, args) => { deferred.reject(sender, args); })\r\n                    .done(() => {\r\n                        deferred.resolve();\r\n                    });\r\n            });\r\n        return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n\r\n}","import { common } from \"../common\"\r\n\r\nexport class PermissionHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(web, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(web.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): JQueryPromise<boolean> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(list, 'EffectiveBasePermissions');\r\n        common.executeQuery(this.context)\r\n            .fail((sender, args) => { deferred.reject(sender, args); })\r\n            .done(() => {\r\n                deferred.resolve(list.get_effectiveBasePermissions().has(permission));\r\n            });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): JQueryPromise<boolean> {\r\n            var deferred = $.Deferred();\r\n            this.context.load(item, 'EffectiveBasePermissions');\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(item.get_effectiveBasePermissions().has(permission));\r\n                });\r\n        return deferred.promise() as JQueryPromise<boolean>;\r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class UserHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    \r\n    public getUserByEmail(email: string): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().ensureUser(email));\r\n    }\r\n    public getUserById(id: number): JQueryPromise<SP.User> {\r\n        return this.loadUser(this.context.get_web().get_siteUsers().getById(id));\r\n    }\r\n    private loadUser(user: SP.User): JQueryPromise<SP.User> {\r\n        var deferred = $.Deferred();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n    public getCurrentUser(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n        var deferred = $.Deferred();\r\n        var user = this.context.get_web().get_currentUser();\r\n        this.context.load(user);\r\n        this.context.executeQueryAsync(\r\n            (sender, args) => {\r\n                deferred.resolve(user);\r\n            },\r\n            (sender, args) => {\r\n                console.error(args.get_message());\r\n                deferred.reject(sender, args);\r\n            }\r\n        );\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserProfileProperties(): JQueryPromise<SP.UserProfiles.PersonProperties> {\r\n            var deferred = $.Deferred();\r\n            SP.SOD.executeFunc('userprofile', 'SP.UserProfiles.PeopleManager', () => {\r\n                var clientContext = this.context;\r\n                var currentUser = clientContext.get_web().get_currentUser();\r\n                var peopleManager = new SP.UserProfiles.PeopleManager(clientContext);\r\n                var profile = peopleManager.getMyProperties();\r\n                clientContext.load(currentUser);\r\n                clientContext.load(profile);\r\n                clientContext.executeQueryAsync(\r\n                    (sender, args) => {\r\n                        deferred.resolve(profile.get_userProfileProperties());\r\n                    },\r\n                    (sender, args) => {\r\n                        console.error(args.get_message());\r\n                        deferred.reject(sender, args);\r\n                    }\r\n                );\r\n            });\r\n        return deferred.promise() as JQueryPromise<SP.UserProfiles.PersonProperties>;\r\n    }\r\n    public getCurrentUserManager(): JQueryPromise<SP.User> {\r\n            var deferred = $.Deferred();\r\n            var peopleManager = new SP.UserProfiles.PeopleManager(this.context);\r\n            var profilePropertyNames = [\"Manager\"];\r\n            var user_email = this.context.get_web().get_currentUser().get_email();\r\n            var userProfilePropertiesForUser = new SP.UserProfiles.UserProfilePropertiesForUser(this.context,\r\n                \"i:0#.f|membership|\" + user_email,\r\n                profilePropertyNames);  //TODO: check for better mechanism to constructure login\r\n            var userProfileProps = peopleManager.getUserProfilePropertiesFor(userProfilePropertiesForUser);\r\n\r\n            this.context.load(userProfilePropertiesForUser);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    if (userProfileProps[0]) {\r\n                        var user = this.context.get_web().ensureUser(userProfileProps[0]);\r\n                        this.context.load(user);\r\n                        common.executeQuery(this.context)\r\n                            .fail((sender, args) => { deferred.reject(sender, args); })\r\n                            .done(() => {\r\n                                deferred.resolve(user);\r\n                            });\r\n                    } else {\r\n                        deferred.resolve(null);\r\n                    }\r\n            })\r\n        return deferred.promise() as JQueryPromise<SP.User>;\r\n    }\r\n}","import { common } from \"../common\"\r\n\r\nexport class WebHelper {\r\n    constructor(context: SP.ClientContext) {\r\n        this.context = context;\r\n    }\r\n    private context: SP.ClientContext;\r\n    public setWelcomePage(web: SP.Web, url: string): JQueryPromise<SP.Folder> {\r\n            var deferred = $.Deferred();\r\n            var rootFolder = web.get_rootFolder();\r\n            this.context.load(web);\r\n            this.context.load(rootFolder);\r\n            rootFolder.set_welcomePage(url);\r\n            rootFolder.update();\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(rootFolder);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Folder>;\r\n    }\r\n    public createWeb(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent:boolean = true): JQueryPromise<SP.Web> {\r\n            var deferred = $.Deferred();\r\n            var info = new SP.WebCreationInformation();\r\n            info.set_url(name);\r\n            info.set_title(title);\r\n            info.set_webTemplate(template);\r\n            info.set_useSamePermissionsAsParentSite(useSamePermissionsAsParent);\r\n            var newWeb = parentWeb.get_webs().add(info);\r\n            this.context.load(newWeb);\r\n            common.executeQuery(this.context)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(newWeb);\r\n                });\r\n        return deferred.promise() as JQueryPromise<SP.Web>;\r\n    }\r\n    public doesWebExist(url: string): JQueryPromise<any> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, this.context.get_site().get_rootWeb(), output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    for (var i = 0; i < output.length; i++) {\r\n                        if (url.toLowerCase() === output[i].get_serverRelativeUrl() || url.toLowerCase() === output[i].get_url()) {\r\n                            deferred.resolve(true);\r\n                            return;\r\n                        }\r\n                    }\r\n                    deferred.resolve(false);\r\n                });\r\n            return deferred.promise() as JQueryPromise<any>;\r\n    }\r\n    public getWebs(fromWeb: SP.Web): JQueryPromise<Array<SP.Web>> {\r\n            var deferred = $.Deferred();\r\n            var output = [] as Array<SP.Web>;\r\n            this.getAllWebs(this.context, fromWeb, output)\r\n                .fail((sender, args) => { deferred.reject(sender, args); })\r\n                .done(() => {\r\n                    deferred.resolve(output);\r\n                });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n    private getAllWebs(context: SP.ClientContext, web: SP.Web, output: Array<SP.Web>): JQueryPromise<Array<SP.Web>> {\r\n        var deferred = $.Deferred();\r\n        var webs = web.get_webs();\r\n        context.load(webs);\r\n        common.executeQuery(context)\r\n            .fail((sender, args) => {\r\n                deferred.reject(sender, args);\r\n            })\r\n            .done(() => {\r\n                var promises = [];\r\n                for (var i = 0; i < webs.get_count(); i++) {\r\n                    var subWeb = webs.getItemAtIndex(i);\r\n                    output.push(subWeb);\r\n                    promises.push(this.getAllWebs(context, subWeb, output));\r\n                }\r\n                if (promises.length) {\r\n                    $.when.apply($, promises)\r\n                        .fail((sender, args) => {\r\n                            deferred.reject(sender, args);\r\n                        })\r\n                        .done(() => {\r\n                            deferred.resolve();\r\n                        });\r\n                } else {\r\n                    deferred.resolve();\r\n                }\r\n            });\r\n        return deferred.promise() as JQueryPromise<Array<SP.Web>>;\r\n    }\r\n\r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class List {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"list\";\r\n    /**\r\n    * Create new list \r\n    * Example: create(context.get_web(), \"My Task List\", 107)\r\n    * templateId - See: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-csom/ee541191(v%3Doffice.15)#remarks\r\n    */\r\n    public create(web: SP.Web, listName: string, templateId: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createList(web, listName, templateId);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the list exists\r\n    * Result: boolean\r\n    * Example: exists(context.get_web(), \"My List\")\r\n    */\r\n    public exists(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.listHelper.exists(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete a list\r\n    * Result: void\r\n    * Example: delete(context.get_web(), \"My List\")\r\n    */\r\n    public delete(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.delete`, () => {\r\n            return this.listHelper.deleteList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a list\r\n    * Result: SP.List\r\n    * Example: get(context.get_web(), \"My List\")\r\n    */\r\n    public get(web: SP.Web, listName: string): Fluent {\r\n        //TODO: test\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getList(web, listName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Adds a Content Type to a List.  Resolves the new associated list content type.\r\n    * Result: SP.ContentType\r\n    * Example: addContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public addContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.addContentTypeListAssociation`, () => {\r\n            return this.listHelper.addContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Removes a Content Type associated from a list.\r\n    * Result: void\r\n    * Example: removeContentTypeListAssociation(context.get_web(), \"My List\", \"My Content Type Name\")\r\n    */\r\n    public removeContentTypeListAssociation(web: SP.Web, listName: string, contentTypeName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.removeContentTypeListAssociation`, () => {\r\n            return this.listHelper.removeContentTypeListAssociation(web, listName, contentTypeName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Sets a default value on a field in a list\r\n    * Result: void\r\n    * Example: setDefaultValueOnList(context.get_web(), \"My Task List\", \"ClientId\", 123)\r\n    */\r\n    public setDefaultValueOnList(web: SP.Web, listName: string, fieldInternalName: string, defaultValue: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setDefaultValueOnList`, () => {\r\n            return this.listHelper.setDefaultValueOnList(web, listName, fieldInternalName, defaultValue);\r\n        });\r\n        \r\n    }\r\n     /**\r\n    * Enable email alerts on a list \r\n    * Result: void\r\n    * Example: setAlerts(context.get_web(), \"My Task List\", true)\r\n    * Note: will not work for 2010/2013\r\n    */\r\n    public setAlerts(web: SP.Web, listName: string, enabled: boolean): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.setAlerts`, () => {\r\n            return this.listHelper.setAlerts(web, listName, enabled);\r\n        });\r\n        \r\n    }\r\n}","import { ListHelper } from \"./helper/listHelper\";\r\nimport { Fluent } from \"./fluent\"\r\nexport class ListItem {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.listHelper = new ListHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private listHelper = null as ListHelper;\r\n    private readonly _helperName: string = \"listItem\";\r\n    /**\r\n    * Update a list item with properties\r\n    * Result: SP.ListItem\r\n    * Example: update(listItem, { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public update(listItem: SP.ListItem, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.update`, () => {\r\n            return this.listHelper.setListItemProperties(listItem, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create a list item, specifying the Content Type\r\n    * Result: SP.ListItem\r\n    * Example: createWithContentType(context.get_web(), \"My list\", \"My Content Type Name\", { 'Title': 'Title value here', ClientId: 123 })\r\n    */\r\n    public createWithContentType(web: SP.Web, listName: string, contentTypeName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createWithContentType`, () => {\r\n            return this.listHelper.createListItemWithContentTypeName(web, listName, contentTypeName, properties);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Create new list item with optional property values\r\n    * Example: create(context.get_web(), \"MyList\", properties)\r\n    * Note: Properties are an object with Property/Value, where property\r\n    *       is the internal field name.\r\n    *       Eg; var properties = {\r\n                Title: \"My title\",\r\n                PersonOrGroupField: personValue,\r\n                MultiChoiceField: [\"Second\", \"Third\"],\r\n                ChoiceField: \"Second\",\r\n                NumberField: 1234\r\n            };\r\n            For personValue you can pass through the user Id or a SP.UserFieldValue such as:\r\n            var personValue = new SP.FieldUserValue();\r\n            personValue.set_lookupId(_spPageContextInfo.userId);\r\n    */\r\n    public create(web: SP.Web, listName: string, properties: any): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.listHelper.createListItem(web, listName, properties);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Get the listitem using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: get(context.get_web(), \"MyList\", 1, [\"ID\", \"Title\"])\r\n    */\r\n    public get(web: SP.Web, listName: string, id: number, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.listHelper.getListItemById(web, listName, id, viewFields);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the listitem for a File using the ID with optional view fields\r\n    * Result: SP.ListItem\r\n    * Example: getFileListItem(\"/sites/site/documents/mydoc.docx\", [\"ID\", \"Title\", \"FileLeafRef\"])\r\n    */\r\n    public getFileListItem(serverRelativeUrl: string, viewFields: Array<string> = null): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getFileListItem`, () => {\r\n            return this.listHelper.getFileListItem(serverRelativeUrl, viewFields);\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n    * Delete List Item\r\n    * Result: void\r\n    * Example: deleteById(context.get_web(), \"MyList\", 7)\r\n    */\r\n    public deleteById(web: SP.Web, listName: string, id: number): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteById`, () => {\r\n            return this.listHelper.deleteListItemById(web, listName, id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Execute a query using supplied CAML.  \r\n    * Returns: SP.ListItemCollection\r\n    * Example: query(context.get_web(), \"MyList\", \"<View><Query><Where><In><FieldRef Name='ID' /><Values><Value Type='Number'>1</Value><Value Type='Number'>2</Value></Values></In></View></Query></Where>\")\r\n    */\r\n    public query(web: SP.Web, listName: string, viewXml: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, viewXml);\r\n        });\r\n    }\r\n    /**\r\n    * Get all list items in a list\r\n    * Returns: SP.ListItemCollection\r\n    * Example: getAll(context.get_web(), \"MyList\")\r\n    */\r\n    public getAll(web: SP.Web, listName: string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.query`, () => {\r\n            return this.listHelper.getListItems(web, listName, \"<View></View>\");\r\n        });\r\n    }\r\n    \r\n}","import { NavigationHelper } from \"./helper/navigationHelper\";\r\nimport { Fluent, NavigationLocation, NavigationType, Dependency } from \"./fluent\"\r\nexport class Navigation {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.navigationHelper = new NavigationHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private navigationHelper = null as NavigationHelper;\r\n    private readonly _helperName: string = \"navigation\";\r\n\r\n    /**\r\n    * Create new navigation node\r\n    * Result: SP.NavigationNode\r\n    * Example: createNode(context.get_web(), NavigationLocation.Quicklaunch, \"Test Node\", \"/sites/mysite/pages/default.aspx\")\r\n    */\r\n    public createNode(web: SP.Web, location: NavigationLocation, title: string, url: string, asLastNode: boolean = true): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.createNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.createQuicklaunchNode(web, title, url, asLastNode);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.createTopNavigationNode(web, title, url, asLastNode);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes for the web\r\n    * Result: void\r\n    * Example: deleteAllNodes(context.get_web(), NavigationLocation.Quicklaunch)\r\n    */\r\n    public deleteAllNodes(web: SP.Web, location: NavigationLocation): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteAllNodes`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNodes(web);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopNavigationNodes(web);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n\r\n\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Delete all navigation nodes that match the supplied title for the web\r\n    * Result: void\r\n    * Example: deleteNode(context.get_web(), NavigationLocation.Quicklaunch, \"My link title\")\r\n    */\r\n    public deleteNode(web: SP.Web, location: NavigationLocation, title:string ): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.deleteNode`, () => {\r\n            if (location == NavigationLocation.Quicklaunch) {\r\n                return this.navigationHelper.deleteQuicklaunchNode(web, title);\r\n            }\r\n            else if (location == NavigationLocation.TopNavigation) {\r\n                return this.navigationHelper.deleteTopQuicklaunchNode(web, title);\r\n            } else {\r\n                throw \"Unknown location \" + location;\r\n            }\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Set navigation for the web\r\n    * Result: void\r\n    * Example: setCurrentNavigation(context.get_web(), 3, true, true)\r\n    * Note: showSubsites and showPages is only applicable for NavigationType.StructuralChildrenOnly (3)\r\n    */\r\n    public setCurrentNavigation(web: SP.Web, type: NavigationType, showSubsites: boolean = false, showPages:boolean = false): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.setCurrentNavigation`, () => {\r\n            return this.navigationHelper.setCurrentNavigation(web, type, showSubsites, showPages);\r\n        });\r\n        \r\n    }\r\n}","import { Fluent } from \"./fluent\"\r\nimport { PermissionHelper } from \"./helper/permissionHelper\";\r\n\r\nexport class Permission {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.permissionHelper = new PermissionHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"permission\";\r\n    private permissionHelper = null as PermissionHelper;\r\n    /**\r\n    * Check if the current user has specified Web permission\r\n    * Result: boolean\r\n    * Example: hasWebPermission(SP.PermissionKind.createSSCSite, context.get_web())\r\n    */\r\n    public hasWebPermission(permission: SP.PermissionKind, web: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasWebPermission`, () => {\r\n            return this.permissionHelper.hasWebPermission(permission, web);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified List permission\r\n    * Result: boolean\r\n    * Example: hasListPermission(SP.PermissionKind.addListItems, context.get_web().get_lists().getByTitle(\"MyList\"))\r\n    */\r\n    public hasListPermission(permission: SP.PermissionKind, list: SP.List): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasListPermission`, () => {\r\n            return this.permissionHelper.hasListPermission(permission, list);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Check if the current user has specified ListItem permission\r\n    * Result: boolean\r\n    * Example: hasItemPermission(SP.PermissionKind.editListItems, context.get_web().get_lists().getByTitle(\"MyList\").getItemById(0))\r\n    */\r\n    public hasItemPermission(permission: SP.PermissionKind, item: SP.ListItem): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.hasItemPermission`, () => {\r\n            return this.permissionHelper.hasItemPermission(permission, item);\r\n        });\r\n        \r\n    }\r\n}","import { Fluent, Dependency } from \"./fluent\"\r\nimport { PageHelper } from \"./helper/pageHelper\"\r\n\r\nexport class PublishingPage {\r\n    constructor(fluent: Fluent) {\r\n        this.fluent = fluent;\r\n        this.pageHelper = new PageHelper(fluent.context);\r\n    }\r\n    private fluent = null as Fluent;\r\n    private readonly _helperName: string = \"publishingPage\";\r\n    private pageHelper: PageHelper;\r\n    /**\r\n    * Creates a new publishing page.\r\n    * Result: SP.Publishing.PublishingPage\r\n    * Example: .publishingPage.create(SP.ClientContext.get_current().get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    */\r\n    public create(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.pageHelper.createPublishingPage(web, name, layoutUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Gets a page layout.\r\n    * Result: SP.ListItem\r\n    * Example: .publishingPage.getLayout(_spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    * \r\n    */\r\n    public getLayout(serverRelativeUrl:string): Fluent {\r\n        return this.fluent.chainAction(`${this._helperName}.getLayout`, () => {\r\n            return this.pageHelper.getPublishingLayout(serverRelativeUrl);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Changes layout for a publishing page.\r\n    * Result: void\r\n    * Example: .publishingPage.setLayout(SP.ClientContext.get_current().get_web(), \"Home.aspx\", _spPageContextInfo.siteServerRelativeUrl + \"/_catalogs/masterpage/BlankWebPartPage.aspx\")\r\n    */\r\n    public setLayout(web: SP.Web, name: string, layoutUrl: string): Fluent {\r\n        this.fluent.registerDependency(Dependency.Publishing);\r\n        return this.fluent.chainAction(`${this._helperName}.setLayout`, () => {\r\n            return this.pageHelper.setLayout(web, name, layoutUrl);\r\n        });\r\n    }\r\n}","import { UserHelper } from \"./helper/userHelper\";\r\nimport { Fluent, Dependency } from \"./fluent\"\r\nimport { common } from \"./common\";\r\n\r\nexport class User {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.userHelper = new UserHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"userProfile\";\r\n    private userHelper = null as UserHelper;\r\n    /**\r\n    * Get User by email or account name\r\n    * Result: SP.User\r\n    * Example: get(\"my@email.address\")\r\n    * Example: get(\"i:0#.f|membership|my@email.address\")\r\n    */\r\n    public get(emailOrAccountName:string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.get`, () => {\r\n            return this.userHelper.getUserByEmail(emailOrAccountName);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get a user by their Id\r\n    * Result: SP.User\r\n    * Example: getById(15)\r\n    */\r\n    public getById(id: number): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getById`, () => {\r\n            return this.userHelper.getUserById(id);\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUser()\r\n    */\r\n    public getCurrentUser(): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUser`, () => {\r\n            return this.userHelper.getCurrentUser();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the profile properties for the current user\r\n    * Result: SP.UserProfiles.PersonProperties\r\n    * Example: getCurrentUserProfileProperties()\r\n    */\r\n    public getCurrentUserProfileProperties(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserProfileProperties`, () => {\r\n            return this.userHelper.getCurrentUserProfileProperties();\r\n        });\r\n        \r\n    }\r\n    /**\r\n    * Get the manager for the current user\r\n    * Result: SP.User\r\n    * Example: getCurrentUserManager()\r\n    */\r\n    public getCurrentUserManager(): Fluent {\r\n        this._fluent.registerDependency(Dependency.UserProfile);\r\n        return this._fluent.chainAction(`${this._helperName}.getCurrentUserManager`, () => {\r\n            return this.userHelper.getCurrentUserManager();\r\n        });\r\n        \r\n    }\r\n}","import { WebHelper } from \"./helper/webHelper\";\r\nimport { Fluent } from \"./fluent\"\r\n\r\nexport class Web {\r\n    constructor(fluent: Fluent) {\r\n        this._fluent = fluent;\r\n        this.webHelper = new WebHelper(fluent.context);\r\n    }\r\n    private _fluent = null as Fluent;\r\n    private readonly _helperName: string = \"web\";\r\n    private webHelper = null as WebHelper;\r\n    /**\r\n      * Set the web welcome page.  The url should be relative to the root folder of the web. \r\n      * Result: SP.Folder\r\n      * Example: setWelcomePage(context.get_web(), \"pages/default.aspx\")\r\n      */\r\n    public setWelcomePage(web: SP.Web, url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.setWelcomePage`, () => {\r\n            return this.webHelper.setWelcomePage(web, url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Create a new sub web.\r\n      * Result: SP.Web\r\n      * name: Forms part of the URL, don't include slash\r\n      * template: template id and configuration value\r\n      * Example: create(\"SubWebName\", SP.ClientContext.get_current().get_rootWeb(), \"My Web Name\", \"CMSPUBLISHING#0\")\r\n      * \r\n      * @remarks\r\n      * For templates See: https://blogs.technet.microsoft.com/praveenh/2010/10/21/sharepoint-templates-and-their-ids/\r\n      */\r\n    public create(name: string, parentWeb: SP.Web, title: string, template: string, useSamePermissionsAsParent: boolean = true): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.create`, () => {\r\n            return this.webHelper.createWeb(name, parentWeb, title, template, useSamePermissionsAsParent);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Check if a web exists\r\n      * Result: boolean\r\n      * url: server relative url\r\n      * Example: .exists(\"/sites/mysubweb\")\r\n      */\r\n    public exists(url: string): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.exists`, () => {\r\n            return this.webHelper.doesWebExist(url);\r\n        });\r\n        \r\n    }\r\n    /**\r\n      * Get and load all webs starting from a web and its children\r\n      * Result: Array<SP.Web>\r\n      * Example: getWebs(SP.ClientContext.get_current().get_rootWeb()))\r\n      */\r\n    public getWebs(fromWeb: SP.Web): Fluent {\r\n        return this._fluent.chainAction(`${this._helperName}.getWebs`, () => {\r\n            return this.webHelper.getWebs(fromWeb);\r\n        });\r\n        \r\n    }\r\n    \r\n}"],"sourceRoot":""}